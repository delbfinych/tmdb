{"version":3,"sources":["store/modules/auth/selectors.ts","lib/local-storage.js","api/http-client.js","api/auth.ts","lib/create_query_string.ts","api/account.ts","api/movies.ts","api/search.ts","api/tv.ts","api/index.ts","store/modules/auth/reducer.ts","hooks/useActions.js","store/modules/auth/index.ts","store/modules/account/selectors.ts","store/modules/account/reducer.ts","store/modules/account/index.ts","hooks/useMenu.tsx","components/Header/components/menu.tsx","components/Header/components/nav-items.tsx","store/modules/search/reducer.ts","store/modules/search/selectors.ts","store/modules/search/index.ts","components/Header/components/search-results-list.tsx","components/Header/index.tsx","pages/auth/index.tsx","store/modules/movies/reducers/currentMovie.ts","store/modules/movies/reducers/recommendations.ts","store/modules/movies/reducers/similar.ts","store/modules/movies/reducers/discovered.ts","store/modules/movies/reducers/nowPlaying.ts","store/modules/movies/reducers/popular.ts","store/modules/movies/reducers/topRated.ts","store/modules/movies/reducers/upcoming.ts","store/modules/movies/reducers/watchlist.ts","store/modules/movies/reducers/favoritelist.ts","store/modules/movies/reducers/index.ts","store/modules/movies/selectors.ts","store/modules/movies/index.ts","components/CardsList/UMenu.tsx","components/CardsList/CardItem.tsx","components/CardsList/MovieCard.tsx","components/CardsList/index.tsx","lib/parse_query_string.js","pages/_base/baseMovies.tsx","components/Expand/index.tsx","hooks/useToggle.ts","components/CardSlider/index.tsx","pages/movies/by-id.tsx","pages/movies/by-genre.tsx","pages/movies/index.ts","pages/movies/popular.tsx","pages/movies/now-playing.tsx","pages/movies/recommendations.tsx","pages/movies/similar.tsx","pages/movies/top-rated.tsx","pages/movies/upcoming.tsx","store/modules/tv/reducers/currentTV.ts","store/modules/tv/reducers/recommendations.ts","store/modules/tv/reducers/similar.ts","store/modules/tv/reducers/discovered.ts","store/modules/tv/reducers/airingToday.ts","store/modules/tv/reducers/popular.ts","store/modules/tv/reducers/topRated.ts","store/modules/tv/reducers/onTheAir.ts","store/modules/tv/reducers/watchlist.ts","store/modules/tv/reducers/favoritelist.ts","store/modules/tv/reducers/index.ts","store/modules/tv/selectors.ts","store/modules/tv/index.ts","components/CardsList/TVCard.tsx","pages/_base/baseTV.tsx","components/CardsList/TVSeasonCard.tsx","pages/tv/by-id.tsx","pages/tv/by-genre.tsx","pages/tv/index.ts","pages/tv/popular.tsx","pages/tv/recommendations.tsx","pages/tv/top-rated.tsx","pages/tv/airing-today.tsx","pages/tv/similar.tsx","pages/tv/on-the-air.tsx","pages/search/index.tsx","pages/home/index.tsx","pages/profile/profile.tsx","pages/profile/movies/favoritelist.tsx","pages/profile/index.tsx","pages/profile/movies/index.tsx","pages/profile/movies/watchlist.tsx","pages/profile/tv/index.tsx","pages/profile/tv/favoritelist.tsx","pages/profile/tv/watchlist.tsx","hoc/private-route.tsx","App.tsx","store/index.ts","index.tsx"],"names":["getAuthStatus","state","auth","isAuth","localStorage","storeName","item","window","setItem","JSON","stringify","parse","getItem","removeItem","http","axios","create","baseURL","interceptors","request","use","config","params","process","session_id","encodeURIComponent","response","error","Promise","reject","data","status","_createRequestToken","get","then","res","_createSessionWithLogin","username","password","request_token","post","_createSession","_saveSessionToLocalStorage","expires_at","token","signIn","a","tokenResponse","approvedTokenResponse","sessionResponse","signUp","win","open","resolve","setTimeout","closed","signOut","delete","authApi","createQueryString","obj","str","p","hasOwnProperty","push","join","accountApi","account_id","body","page","moviesApi","movie_id","append_to_response","region","args","searchApi","query","tvApi","tv_id","getImageLink","path","size","initialState","responseStatus","ok","localActions","type","payload","actions","dispatch","message","updateAuthStatus","useActions","useDispatch","useMemo","bindActionCreators","useSelector","getProfileDetails","account","profileData","setProfileDetails","user","getProfile","dropProfile","addToWatchList","getState","id","addToFavoriteList","useMenu","React","useState","anchorEl","setAnchorEl","event","currentTarget","FadeMenu","props","history","useHistory","close","onSignOutClick","Avatar","aria-controls","aria-haspopup","onClick","src","avatarLink","Menu","keepMounted","Boolean","onClose","MenuItem","useStyles","makeStyles","theme","title","flexGrow","link","color","textDecoration","navWrapper","position","display","listStyle","cursor","padding","navContent","backgroundColor","width","top","borderRadius","NavItems","classes","Typography","variant","className","Button","to","searchResult","setResult","result","find","inSearchInputMode","getSearchResult","search","createStyles","root","palette","background","paper","zIndex","drawer","SearchResultsList","isOpened","results","onRedirect","List","total_results","map","media","ListItem","key","role","undefined","dense","button","getUrl","ListItemIcon","getIcon","ListItemText","style","marginTop","primary","getTitle","ListItemSecondaryAction","textAlign","media_type","release_date","Date","getFullYear","name","first_air_date","marginBottom","menuButton","marginRight","spacing","cursorPointer","backdrop","appBar","searchForm","transition","Header","profile","searchInput","useRef","setOpen","searchValue","setSearchValue","didResultFind","setFindStatus","timeout","onSubmit","preventDefault","closeSearchInput","current","focus","Backdrop","AppBar","Toolbar","target","dataset","data-target","InputBase","value","onChange","clearTimeout","inputRef","placeholder","inputProps","IconButton","avatar","gravatar","hash","Fragment","margin","maxWidth","flexDirection","alignItems","secondary","main","form","submit","Auth","onFormSubmit","onSignUpClick","isFormFieldValid","info","touched","CssBaseline","component","validate","values","errors","render","handleSubmit","submitting","pristine","input","meta","TextField","required","fullWidth","label","autoComplete","autoFocus","helperText","disabled","Grid","container","Link","isLoading","setData","setLoadingStatus","setError","moviesReducer","combineReducers","currentMovie","action","recommendations","similar","popular","nowPlaying","upcoming","topRated","discovered","watchlist","favoritelist","getMovieDetails","getRecommendations","getSimilarMovies","getDiscoveredMovies","getNowPlayingMovies","getPopularMovies","getTopRatedMovies","getUpcomingMovies","getWatchList","getFavoriteList","getDetails","movies","getSimilar","getPopular","getNowPlaying","getTopRated","getUpcoming","getDiscovered","useDetails","UMenu","setState","useEffect","media_id","onWatchListClick","onFavoriteListClick","favorite","bottom","right","e","height","cardAction","justifyContent","grid","flexShrink","CardItem","children","xs","sm","md","lg","Paper","Card","CardActionArea","cardContent","alignSelf","boxSizing","skeletonMedia","MovieCard","card","handleClick","useCallback","toString","Skeleton","animation","alt","poster_path","CardContent","gutterBottom","toLocaleDateString","CardsList","styles","Array","fill","el","idx","parseQueryString","substring","split","reduce","acc","decodeURIComponent","pagination","Page","content","getter","withURLParam","useLocation","pageNumber","parseInt","setPage","matchedParams","useRouteMatch","movieID","Pagination","count","total_pages","switchPage","expandBtn","expanded","Expand","isOpen","setIsOpen","v","useToggle","isExpanded","toggle","slider","overflowX","minWidth","CardSlider","flexWrap","header","backgroundPosition","backgroundSize","backgroundRepeat","containerImage","containerExternalLinks","fontSize","image","imageSkeleton","details","zidx","genresLink","videoWrapper","paddingTop","left","Popular","NowPlaying","ByID","useRecommendations","useSimilar","videos","detailsOverview","overview","original_title","Rating","max","vote_average","readOnly","Box","runtime","Math","trunc","tagline","Number","isInteger","budget","genres","length","slice","overflowY","frameBorder","allowFullScreen","Recommendations","Similar","TopRated","Upcoming","ByGenre","movi","genre_id","genre","with_genres","tvReducer","currentTV","airingToday","onTheAir","getTVDetails","getSimilarTV","getDiscoveredTV","getAiringTodayTV","getPopularTV","getTopRatedTV","getOnTheAirTV","tv","getOnTheAir","getAiringToday","TVCard","tvID","TVSeasonCard","location","pathname","season_number","air_date","original_name","episode_run_time","number_of_episodes","number_of_seasons","seasons","tvs","AiringToday","OnTheAir","Search","searchRes","catch","err","Home","popularMovies","popularTTV","TabPanel","index","other","hidden","aria-labelledby","Profile","setValue","moviesWL","moviesFL","moviesAct","tvWL","tvFL","tvAct","Tabs","newValue","aria-label","Tab","FavoriteList","WatchList","PrivateRoute","createMuiTheme","App","tryToGetProfile","scrollTo","ThemeProvider","Container","exact","rootReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"oUAEaA,EAAgB,SAACC,GAAD,OAAyBA,EAAMC,KAAKC,Q,eCFpDC,EACL,SAACC,GAA0B,IAAfC,EAAc,uDAAP,GACvBC,OAAOH,aAAaI,QAAQH,EAAWI,KAAKC,UAAUJ,KAF7CF,EAIL,SAACC,GACL,OAAOI,KAAKE,MAAMJ,OAAOH,aAAaQ,QAAQP,KAAe,IALpDD,EAOH,SAACC,GACPE,OAAOH,aAAaS,WAAWR,ICLtBS,E,OAAOC,EAAMC,OAAO,CAC/BC,QAAS,kCAGXH,EAAKI,aAAaC,QAAQC,KAAI,SAACC,GAC7BA,EAAOC,OAASD,EAAOC,QAAU,GACjCD,EAAOC,OAAP,QAA2BC,mCAE3B,IAAMC,EAAapB,EAAkB,WAAWoB,YAAc,GAI9D,OAHAH,EAAOC,OAAP,WAA8BG,mBAAmBD,GAEjDH,EAAOC,OAAP,SAA4BG,mBAAmB,SACxCJ,KAGTP,EAAKI,aAAaQ,SAASN,KACzB,SAAUM,GACR,OAAOA,KAET,SAAUC,GACR,OAAOC,QAAQC,OAAO,CACpBH,SAAU,CACRI,KAAMH,EAAMD,SAASI,KACrBC,OAAQJ,EAAMD,SAASK,aClB/B,IASMC,EAAsB,kBAC1BlB,EAAKmB,IAAiB,6BAA6BC,MAAK,SAACC,GAAD,OAASA,MAE7DC,EAA0B,SAC9BC,EACAC,EACAC,GAH8B,OAK9BzB,EACG0B,KAAkB,4CAA6C,CAC9DH,WACAC,WACAC,kBAEDL,MAAK,SAACC,GAAD,OAASA,EAAIL,SAQjBW,EAAiB,SAACF,GAAD,OACrBzB,EACG0B,KAAiB,8BAA+B,CAC/CD,kBAEDL,MAAK,SAACC,GAAD,OAASA,EAAIL,SAcjBY,EAA6B,SACjClB,EACAe,EACAI,GAHiC,OAKjCvC,EAAkB,UAAW,CAC3BoB,aACAoB,MAAO,CAAEL,gBAAeI,iBAGtBE,EAAM,uCAAG,WAAOR,EAAkBC,GAAzB,mBAAAQ,EAAA,+EAEiBd,IAFjB,cAELe,EAFK,gBAGyBX,EAClCC,EACAC,EACAS,EAAcjB,KAAKS,eANV,cAGLS,EAHK,gBASmBP,EAC5BO,EAAsBT,eAVb,cASLU,EATK,OAaXP,EACEO,EAAgBzB,WAChBwB,EAAsBT,cACtBS,EAAsBL,YAhBb,kBAkBJM,GAlBI,uGAAH,wDAwBNC,EAAM,uCAAG,gCAAAJ,EAAA,sEACed,IADf,OACPe,EADO,OAEPI,EAAM5C,OAAO6C,MAvCCR,EAwCLG,EAAcjB,KAAKS,cAxCf,kDACwBK,IAwCzC,SACA,wBALW,uBAQL,IAAIhB,SAAQ,SAACyB,GAAD,OAAaC,WAAWD,EAAS,QARxC,WAUPF,EAAKI,OAVE,kCAWqBd,EAC5BM,EAAcjB,KAAKS,eAZZ,eAWHU,EAXG,OAcTP,EACEO,EAAgBzB,WAChBuB,EAAcjB,KAAKS,cACnBQ,EAAcjB,KAAKa,YAjBZ,kBAmBFM,GAnBE,yDArCM,IAACL,IAqCP,OAAH,qDAuBNY,EAAO,uCAAG,sBAAAV,EAAA,sDACd,IAlEsBtB,EAmELpB,EAAkB,WAAWoB,WAlE9CV,EACG2C,OAAmB,0BAA2B,CAAE3B,KAAM,CAAEN,gBACxDU,MAAK,SAACC,GAAD,OAASA,EAAIL,QA+DrB,QAGE1B,EAAoB,WAJR,iCAjEO,IAACoB,IAiER,OAAH,qDAOAkC,EAAU,CACrBb,SACAK,SACAM,WC7HWG,EAAoB,SAAUC,GACzC,IAAIC,EAAqB,GACzB,IAAK,IAAIC,KAAKF,EACRA,EAAIG,eAAeD,IAAMF,EAAIE,IAC/BD,EAAIG,KAAKvC,mBAAmBqC,GAAK,IAAMrC,mBAAmBmC,EAAIE,KAElE,OAAOD,EAAII,KAAK,MCmDLC,EA9CM,kBACjBpD,EAAKmB,IAAkB,YAAYC,MAAK,SAACC,GAAD,OAASA,EAAIL,SA6C1CoC,EA3CU,SAACC,EAAoBC,GAArB,OACrBtD,EACG0B,KADH,mBACoC2B,EADpC,6BACiEC,IAC9DlC,MAAK,SAACC,GAAD,OAASA,EAAIL,SAwCVoC,EAtCU,SAACC,EAAoBC,GAArB,OACrBtD,EACG0B,KADH,mBACoC2B,EADpC,4BACgEC,IAC7DlC,MAAK,SAACC,GAAD,OAASA,EAAIL,SAmCVoC,EAjCa,SAACC,EAAoBE,GAArB,OACxBvD,EACGmB,IADH,mBAEgBkC,EAFhB,6BAE+CR,EAAkB,CAC3DU,WAGHnC,MAAK,SAACC,GAAD,OAASA,EAAIL,SA0BVoC,EAhBU,SAACC,EAAoBE,GAArB,OACrBvD,EACGmB,IADH,mBAEgBkC,EAFhB,yBAE2CR,EAAkB,CACvDU,WAGHnC,MAAK,SAACC,GAAD,OAASA,EAAIL,SASVoC,EARa,SAACC,EAAoBE,GAArB,OACxBvD,EACGmB,IADH,mBAEgBkC,EAFhB,wBAE0CR,EAAkB,CACtDU,WAGHnC,MAAK,SAACC,GAAD,OAASA,EAAIL,SACVoC,EAzBgB,SAACC,EAAoBE,GAArB,OAC3BvD,EACGmB,IADH,mBAEgBkC,EAFhB,4BAE8CR,EAAkB,CAC1DU,WAGHnC,MAAK,SAACC,GAAD,OAASA,EAAIL,SC+CVwC,EArEM,SAACC,EAAkBC,GAAnB,OACjB1D,EACGmB,IADH,iBAEcsC,EAFd,YAE0BZ,EAAkB,CAAEa,yBAE3CtC,MAAK,SAACC,GAAD,OAASA,EAAIL,SAgEVwC,EA9DM,SAACD,EAAeI,GAAhB,OACjB3D,EACGmB,IADH,yBAEsB0B,EAAkB,CAAEU,OAAMI,aAE7CvC,MAAK,SAACC,GAAD,OAASA,EAAIL,SAyDVwC,EAvDS,SAACD,EAAeI,GAAhB,OACpB3D,EACGmB,IADH,6BAE0B0B,EAAkB,CAAEU,OAAMI,aAEjDvC,MAAK,SAACC,GAAD,OAASA,EAAIL,SAkDVwC,EAhDO,SAACD,EAAeI,GAAhB,OAClB3D,EACGmB,IADH,2BAEwB0B,EAAkB,CAAEU,OAAMI,aAE/CvC,MAAK,SAACC,GAAD,OAASA,EAAIL,SA2CVwC,EAzCO,SAACD,GAAD,OAClBvD,EACGmB,IADH,0BAC2C0B,EAAkB,CAAEU,WAC5DnC,MAAK,SAACC,GAAD,OAASA,EAAIL,SAsCVwC,EApCM,SAACC,EAAkBF,GAAnB,OACjBvD,EACGmB,IADH,iBAEcsC,EAFd,oBAEkCZ,EAAkB,CAAEU,WAEnDnC,MAAK,SAACC,GAAD,OAASA,EAAIL,SA+BVwC,EA7Bc,SAACC,EAAkBF,GAAnB,OACzBvD,EACGmB,IADH,iBAEcsC,EAFd,4BAE0CZ,EAAkB,CACtDU,WAGHnC,MAAK,SAACC,GAAD,OAASA,EAAIL,SAsBVwC,EAbS,SAACI,GAAD,OACpB5D,EACGmB,IADH,0BAEuB0B,EAAkB,eAChCe,MAGNxC,MAAK,SAACC,GAAD,OAASA,EAAIL,SAMVwC,EALY,SAACC,GAAD,OACvBzD,EACGmB,IADH,iBACiCsC,EADjC,oBAEGrC,MAAK,SAACC,GAAD,OAASA,EAAIL,SCvEV6C,GATE,SAACC,EAAeP,GAAhB,OACbvD,EACGmB,IADH,uBAEoB0B,EAAkB,CAChCU,OACAO,YAGH1C,MAAK,SAACC,GAAD,OAASA,EAAIL,SC6DV+C,GAxDM,SAACC,EAAeN,GAAhB,OACjB1D,EACGmB,IADH,cAEW6C,EAFX,YAEoBnB,EAAkB,CAAEa,yBAErCtC,MAAK,SAACC,GAAD,OAASA,EAAIL,SAmDV+C,GAlDM,SAACR,GAAD,OACjBvD,EACGmB,IADH,sBACkC0B,EAAkB,CAAEU,WACnDnC,MAAK,SAACC,GAAD,OAASA,EAAIL,SA+CV+C,GA9CO,SAACR,GAAD,OAClBvD,EACGmB,IADH,wBACqC0B,EAAkB,CAAEU,WACtDnC,MAAK,SAACC,GAAD,OAASA,EAAIL,SA2CV+C,GA1CO,SAACR,GAAD,OAClBvD,EACGmB,IADH,yBACsC0B,EAAkB,CAAEU,WACvDnC,MAAK,SAACC,GAAD,OAASA,EAAIL,SAuCV+C,GAtCU,SAACR,GAAD,OACrBvD,EACGmB,IADH,2BAC2C0B,EAAkB,CAAEU,WAC5DnC,MAAK,SAACC,GAAD,OAASA,EAAIL,SAmCV+C,GAlCM,SAACC,EAAeT,GAAhB,OACjBvD,EACGmB,IADH,cAC0B6C,EAD1B,oBAC2CnB,EAAkB,CAAEU,WAC5DnC,MAAK,SAACC,GAAD,OAASA,EAAIL,SA+BV+C,GA7Bc,SAACC,EAAeT,GAAhB,OACzBvD,EACGmB,IADH,cAEW6C,EAFX,4BAEoCnB,EAAkB,CAChDU,WAGHnC,MAAK,SAACC,GAAD,OAASA,EAAIL,SAsBV+C,GAbS,SAACH,GAAD,OACpB5D,EACGmB,IADH,uBAEoB0B,EAAkB,eAC7Be,MAGNxC,MAAK,SAACC,GAAD,OAASA,EAAIL,SAMV+C,GALY,SAACC,GAAD,OACvBhE,EACGmB,IADH,cAC8B6C,EAD9B,oBAEG5C,MAAK,SAACC,GAAD,OAASA,EAAIL,SCjEViD,GAAe,SAACC,GAAD,IAAOC,EAAP,uDAAc,OAAd,2CACIA,EADJ,YACYD,ICMpCE,GAAe,CACjB/E,QAAQ,EACRgF,eAAgB,CAAEC,IAAI,EAAO1D,SAAU,KAuBnC2D,GACW,SAAClF,GAAD,MACZ,CAAEmF,KAAM,4BAA6BC,QAAS,CAAEpF,YAF/CkF,GAGe,kBAChB,CACCC,KAAM,gCACNC,QAAS,CAAEH,GAHI,EAAGA,GAGH1D,SAHA,EAAOA,YAqDf8D,GAAU,CACrBtC,OA3Ba,yDAAiB,WAAOuC,GAAP,SAAA3C,EAAA,+EAEtBY,EAAQR,SAFc,OAI5BuC,EAASJ,IAA2B,IACpCI,EAASJ,GAA+B,CAAED,IAAI,EAAM1D,SAAU,QALlC,sDAO5B+D,EACEJ,GAA+B,CAAED,IAAI,EAAO1D,SAAU,KAAMA,YAExD,KAAMgE,QAVgB,yDAAjB,uDA4BblC,QAfc,yDAAiB,WAAOiC,GAAP,SAAA3C,EAAA,+DAE7BY,EAAQF,UACRiC,EAASJ,IAA2B,IACpCI,EAASJ,GAA+B,CAAED,IAAI,EAAM1D,SAAU,QAJjC,sDAM7B+D,EACEJ,GAA+B,CAAED,IAAI,EAAO1D,SAAU,KAAMA,YAExD,KAAMgE,QATiB,yDAAjB,uDAgBd7C,OA7Ca,SAACR,EAAkBC,GAAnB,8CAAmD,WAChEmD,GADgE,SAAA3C,EAAA,+EAIxDY,EAAQb,OAAOR,EAAUC,GAJ+B,OAM9DmD,EAASJ,IAA2B,IACpCI,EAASJ,GAA+B,CAAED,IAAI,EAAM1D,SAAU,QAPA,sDAS9D+D,EACEJ,GAA+B,CAAED,IAAI,EAAO1D,SAAU,KAAMA,YAExD,KAAMgE,QAZkD,yDAAnD,uDA8CbC,iBAnDuB,SAACxF,GAAD,8CAAgC,WACvDsF,GADuD,SAAA3C,EAAA,sDAGvD2C,EAASJ,GAA2BlF,IAHmB,2CAAhC,wD,SC3CZyF,GAAa,SAACJ,GACzB,IAAMC,EAAWI,cACjB,OAAOC,mBAAQ,WACb,OAAOC,aAAmBP,EAASC,KAClC,CAACA,KCAOvF,GACA,kBAAM8F,YAAYhG,IADlBE,GAGC,kBAAsB0F,GAAWJ,KCTlCS,GAAoB,SAAChG,GAAD,OAC/BA,EAAMiG,QAAQC,aCUZjB,GAAe,CACjBiB,YAAa,IAaTd,GAAe,CACnBe,kBAAmB,SAACC,GAAD,MAChB,CACCf,KAAM,mCACNC,QAAS,CAAEc,WA6CJb,GAAU,CACrBc,WA1CiB,yDAAiB,WAClCb,GADkC,SAAA3C,EAAA,2EAIhC2C,EAJgC,KAIvBJ,GAJuB,SAIcnB,IAJd,6BAIVkC,kBAJU,uFAM1B,KAAM1E,SANoB,0DAAjB,uDA2CjB6E,YAjCkB,yDAAiB,WACnCd,GADmC,SAAA3C,EAAA,+DAIjC2C,EAASJ,GAAae,kBAAkB,OAJP,qDAM3B,KAAM1E,SANqB,wDAAjB,uDAkClB8E,eAxBqB,SAACpC,GAAD,8CAAiC,WACtDqB,EACAgB,GAFsD,SAAA3D,EAAA,+EAK9CoB,EAA0BuC,IAAWP,QAAQC,YAAaO,GAAItC,GALhB,4DAO9C,KAAM1C,SAPwC,wDAAjC,yDAyBrBiF,kBAfwB,SAACvC,GAAD,8CAAgC,WACxDqB,EACAgB,GAFwD,SAAA3D,EAAA,+EAKhDoB,EAA0BuC,IAAWP,QAAQC,YAAaO,GAAItC,GALd,4DAOhD,KAAM1C,SAP0C,wDAAhC,0DCzDbwE,GACQ,kBAAMF,YAAYC,KAD1BC,GAEC,kBAAsBN,GAAWJ,KCRlCoB,GAAU,WAAO,IAAD,EACKC,IAAMC,SAA6B,MADxC,mBACpBC,EADoB,KACVC,EADU,KAW3B,MAAO,CAACD,EARK,SAACE,GACZD,EAAYC,EAAMC,gBAGN,WACZF,EAAY,SCDHG,GAAW,SAACC,GAA+C,IAC9D5D,EAAYtD,KAAZsD,QACA+C,EAAgBL,KAAhBK,YAEFc,EAAUC,cAJqD,EAKrCV,KALqC,mBAK9DG,EAL8D,KAKpD3D,EALoD,KAK9CmE,EAL8C,KAO/DC,EAAc,uCAAG,sBAAA1E,EAAA,+EAEbU,IAFa,uBAGb+C,IAHa,8GAAH,qDAUpB,OACE,6BACE,kBAACkB,EAAA,EAAD,CACEC,gBAAc,cACdC,gBAAc,OACdC,QAASxE,EACTyE,IAAKT,EAAMU,aAEb,kBAACC,EAAA,EAAD,CACErB,GAAG,cACHK,SAAUA,EACViB,aAAW,EACX5E,KAAM6E,QAAQlB,GACdmB,QAASX,GAET,kBAACY,EAAA,EAAD,CAAUP,QAnBO,WACrBL,IACAF,EAAQrD,KAAK,eAiBT,WACA,kBAACmE,EAAA,EAAD,CAAUP,QAASJ,GAAnB,a,4DCtCFY,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,MAAO,CACLC,SAAU,GAEZC,KAAM,CACJC,MAAO,QACPC,eAAgB,QAElBC,WAAY,CACVC,SAAU,WACV,cAAe,CACbC,QAAS,SAEX,OAAQ,CACNC,UAAW,OACX,OAAQ,CACNC,OAAQ,UACRC,QAAS,UACT,MAAO,CACLP,MAAO,YAKfQ,WAAY,CACVJ,QAAS,OACTD,SAAU,WACVM,gBAAiB,aACjBC,MAAO,OACPC,IAAK,MACLC,aAAc,WAILC,GAAqB,WAChC,IAAMC,EAAUpB,KAChB,OACE,kBAACqB,GAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAWH,EAAQjB,OAC1C,kBAACqB,EAAA,EAAD,CAAQlB,MAAM,WACZ,kBAAC,IAAD,CAASiB,UAAWH,EAAQf,KAAMoB,GAAG,KAArC,SAKF,kBAACD,EAAA,EAAD,CAAQD,UAAWH,EAAQZ,WAAYF,MAAM,WAC3C,yBAAKiB,UAAWH,EAAQf,MAAxB,UACA,yBAAKkB,UAAWH,EAAQN,YACtB,4BACE,4BACE,kBAAC,IAAD,CAAMW,GAAI,YAAV,YAEF,4BACE,kBAAC,IAAD,CAAMA,GAAI,uBAAV,gBAEF,4BACE,kBAAC,IAAD,CAAMA,GAAI,qBAAV,cAEF,4BACE,kBAAC,IAAD,CAAMA,GAAI,oBAAV,gBAKR,kBAACD,EAAA,EAAD,CAAQD,UAAWH,EAAQZ,WAAYF,MAAM,WAC3C,yBAAKiB,UAAWH,EAAQf,MAAxB,aACA,yBAAKkB,UAAWH,EAAQN,YACtB,4BACE,4BACE,kBAAC,IAAD,CAAMW,GAAI,QAAV,YAEF,4BACE,kBAAC,IAAD,CAAMA,GAAI,oBAAV,iBAEF,4BACE,kBAAC,IAAD,CAAMA,GAAI,iBAAV,cAEF,4BACE,kBAAC,IAAD,CAAMA,GAAI,kBAAV,oBCtEV3E,GAAe,CACjB4E,aAAc,IAeVzE,GAAe,CACnB0E,UAAW,SAACC,GAAD,MACR,CACC1E,KAAM,yBACNC,QAAS,CAAEyE,aAiBJxE,GAAU,CACrByE,KAdW,SACXrF,EACAP,EACA6F,GAHW,8CAIG,WAAOzE,GAAP,SAAA3C,EAAA,sEAEPoH,GAAmBzE,EAASJ,GAAa0E,UAAU,OAF5C,KAGZtE,EAHY,KAGHJ,GAHG,SAG0BV,GAAiBC,EAAOP,GAHlD,6BAGU0F,UAHV,uFAKN,KAAMrI,SALA,0DAJH,wDCjCAyI,GAAkB,SAAClK,GAAD,OAAyBA,EAAMmK,OAAON,cCKxDM,GACA,kBAAMpE,YAAYmE,KADlBC,GAEC,kBAAsBxE,GAAWJ,K,yHCIzC4C,GAAYC,aAAW,SAACC,GAAD,OAC3B+B,aAAa,CACXC,KAAM,CACJrB,QAAS,EACTJ,SAAU,WACVO,MAAO,OACPD,gBAAiBb,EAAMiC,QAAQC,WAAWC,MAC1CC,OAAQpC,EAAMoC,OAAOC,OAAS,QASvBC,GAAiC,SAAC,GAIxC,IAAD,EAHJC,EAGI,EAHJA,SACAC,EAEI,EAFJA,QACAC,EACI,EADJA,WAEMvB,EAAUpB,KACVf,EAAUC,cAChB,OACE,oCACGuD,GACC,kBAACG,GAAA,EAAD,CAAMrB,UAAWH,EAAQc,OACf,OAAPQ,QAAO,IAAPA,OAAA,EAAAA,EAASG,eAAT,OACCH,QADD,IACCA,GADD,UACCA,EAASA,eADV,aACC,EAAkBI,KAAI,SAACC,GACrB,OACE,kBAACC,GAAA,EAAD,CACEC,IAAKF,EAAMzE,GACX4E,UAAMC,EACNC,OAAK,EACLC,QAAM,EACN7D,QAAS,WACPmD,IACA1D,EAAQrD,KAAK0H,GAAOP,MAGtB,kBAACQ,GAAA,EAAD,KAAeC,GAAQT,IACvB,kBAACU,GAAA,EAAD,CACEC,MAAO,CAAEC,UAAW,GACpBC,QAAO,UAAKC,GAASd,MAEvB,kBAACe,GAAA,EAAD,UAKN,kBAACzC,GAAA,EAAD,CAAYqC,MAAO,CAAEK,UAAW,UAAYzC,QAAQ,MAApD,4FASNuC,GAAW,SAACd,GAChB,OAAQA,EAAMiB,YACZ,IAAK,QACH,MAAM,GAAN,OAAUjB,EAAM5C,MAAhB,oBACE4C,EAAMkB,aAAe,IAAIC,KAAKnB,EAAMkB,cAAcE,cAAgB,IAEtE,IAAK,KACH,MAAM,GAAN,OAAUpB,EAAMqB,KAAhB,iBACErB,EAAMsB,eAAiB,IAAIH,KAAKnB,EAAMsB,gBAAgBF,cAAgB,IAE1E,QACE,MAAO,yBAGPX,GAAU,SAACT,GACf,OAAQA,EAAMiB,YACZ,IAAK,QACH,OAAO,kBAAC,KAAD,MACT,IAAK,KACH,OAAO,kBAAC,KAAD,MACT,QACE,OAAO,kBAAC,KAAD,QAIPV,GAAS,SAACP,GACd,OAAQA,EAAMiB,YACZ,IAAK,QACH,MAAO,WAAajB,EAAMzE,GAC5B,IAAK,KACH,MAAO,OAASyE,EAAMzE,GACxB,QACE,MAAO,KCxFP0B,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CgC,KAAM,CACJ9B,SAAU,EACVkE,aAAc,QAEhBC,WAAY,CACVC,YAAatE,EAAMuE,QAAQ,IAE7BpE,KAAM,CACJC,MAAO,QACPC,eAAgB,QAElBmE,cAAe,CACb9D,OAAQ,WAEV+D,SAAU,CACRrC,OAAQpC,EAAMoC,OAAOC,OAAS,GAEhCqC,OAAQ,CACNnE,SAAU,WACV6B,OAAQpC,EAAMoC,OAAOC,OAAS,GAEhCsC,WAAY,CACVC,WAAY,aACZ9D,MAAO,EACPD,gBAAiB,QACjBT,MAAO,QACP,YAAa,CACXU,MAAO,OAET,UAAW,CACTA,MAAO,aAKA+D,GAA8B,WAAO,IAAD,IACzC3D,EAAUpB,KACVjI,EAASD,KACTkN,EAAUlH,KACVmB,EAAUC,cAEV+F,EAAcxG,IAAMyG,OAAoB,MANC,EAQvBzG,IAAMC,UAAS,GARQ,mBAQxC1D,EARwC,KAQlCmK,EARkC,OAST1G,IAAMC,SAAS,IATN,mBASxC0G,EATwC,KAS3BC,EAT2B,KAevCxD,EAASG,KAATH,KACFH,EAAeM,KAhB0B,EAiBRvD,IAAMC,UAAS,GAjBP,mBAiBxC4G,EAjBwC,KAiBzBC,EAjByB,KAmB3CC,EAAU/G,IAAMyG,OAAO,GAWrBO,EAAW,SAAC5G,GAEhB,GADAA,EAAM6G,iBACF1K,EAAM,CACR,IAAKoK,EAAa,OAClBnG,EAAQrD,KAAR,wBAA8BwJ,IAC9BO,QACK,CAAC,IAAD,EACLR,GAAQ,GACR,UAAAF,EAAYW,eAAZ,SAAqBC,UAGnBF,EAAmB,WACvBR,GAAQ,GACRI,GAAc,GACdF,EAAe,KAEjB,OACE,yBAAK9D,UAAWH,EAAQc,MACtB,kBAAC4D,GAAA,EAAD,CACEvE,UAAS,UAAKH,EAAQuD,SAAb,YAAyBvD,EAAQsD,eAC1C1J,KAAMA,EACNwE,QAASmG,IAEX,kBAACI,EAAA,EAAD,CAAQxE,UAAWH,EAAQwD,OAAQnE,SAAS,UAC1C,kBAACuF,EAAA,EAAD,CAASxG,QA3CY,SAACX,GACU,WAAhCA,EAAMoH,OAAOC,QAAQD,QAAqBN,MA2CxC,kBAAC,GAAD,MACA,0BACEF,SAAUA,EACVlE,UAAS,UAAKH,EAAQyD,WAAb,YAA2B7J,EAAO,UAAY,IACvDmL,cAAY,UAEZ,kBAACC,GAAA,EAAD,CACEC,MAAOjB,EACPkB,SA3CS,SAACzH,GACpB,IAAMwH,EAAQxH,EAAMoH,OAAOI,MACvBb,GAASe,aAAaf,EAAQI,SAClCP,EAAegB,GACfb,EAAQI,QAAUzN,OAAO+C,YAAW,WAE9BmL,GAAOxE,EAAKwE,EAAO,GAAG,GAAMvM,MAAK,kBAAMyL,GAAc,QACxD,MAqCOiB,SAAUvB,EACVwB,YAAY,iBACZC,WAAY,CAAE,aAAc,SAAU,cAAe,aAGzD,kBAACC,GAAA,EAAD,CAAYR,cAAY,SAAS3G,QAASiG,GACxC,kBAAC,KAAD,CACEU,cAAY,SACZ5E,UAAWH,EAAQsD,cACnBhB,MAAO,CAAEpD,MAAO,YAInBvI,EACC,kBAAC,GAAD,CACE2H,WAAU,iDAAqCsF,QAArC,IAAqCA,GAArC,UAAqCA,EAAS4B,cAA9C,iBAAqC,EAAiBC,gBAAtD,aAAqC,EAA2BC,QAG5E,kBAAC,IAAMC,SAAP,KACE,kBAACvF,EAAA,EAAD,CAAQlB,MAAM,WACZ,kBAAC,IAAD,CAAMiB,UAAWH,EAAQf,KAAMoB,GAAG,UAAlC,eAQV,kBAAC,GAAD,CACEgB,SAAU6C,EACV5C,QAAShB,EACTiB,WAAY,WACVgD,S,iDClIJ3F,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmC,MAAO,CACLsB,UAAWzD,EAAMuE,QAAQ,GACzB/D,QAAS,OACTsG,OAAQ,SACRC,SAAU,QACVC,cAAe,SACfC,WAAY,UAEdP,OAAQ,CACNI,OAAQ9G,EAAMuE,QAAQ,GACtB1D,gBAAiBb,EAAMiC,QAAQiF,UAAUC,MAE3CC,KAAM,CACJtG,MAAO,OACP2C,UAAWzD,EAAMuE,QAAQ,IAE3B8C,OAAQ,CACNP,OAAQ9G,EAAMuE,QAAQ,EAAG,EAAG,QASnB+C,GAAiB,WAC5B,IAAMvI,EAAUC,cADkB,EAGPpH,KAAnB2C,EAH0B,EAG1BA,OAAQK,EAHkB,EAGlBA,OACRoD,EAAeJ,KAAfI,WAEFuJ,EAAY,uCAAG,+BAAA/M,EAAA,6DAASR,EAAT,EAASA,SAAUD,EAAnB,EAAmBA,SAAnB,kBAEXQ,EAAOR,EAAUC,GAFN,cAGjB+E,EAAQrD,KAAK,KAHI,SAIXsC,IAJW,uDAMjBe,EAAQrD,KAAK,UANI,yDAAH,sDAUZ8L,EAAa,uCAAG,WAAO7I,GAAP,SAAAnE,EAAA,6DACpBmE,EAAM6G,iBADc,kBAGZ5K,IAHY,OAIlBmE,EAAQrD,KAAK,KAJK,uGAAH,sDAQb+L,EAAmB,SAACC,GAAD,OAAeA,EAAKrO,OAASqO,EAAKC,SAErDzG,EAAUpB,KAChB,OACE,kBAAC,IAAM+G,SAAP,KACE,kBAACe,GAAA,EAAD,MACA,yBAAKvG,UAAWH,EAAQiB,OACtB,kBAAChB,GAAA,EAAD,CAAY0G,UAAU,KAAKzG,QAAQ,MAAnC,WAGA,kBAAC,KAAD,CACEmE,SAAUgC,EACVO,SAAU,SAACC,GACT,IAAMC,EAAc,GAQpB,OANKD,EAAOhO,WACViO,EAAOjO,SAAW,YAEfgO,EAAO/N,WACVgO,EAAOhO,SAAW,YAEbgO,GAETC,OAAQ,gBAAGC,EAAH,EAAGA,aAAoBC,GAAvB,EAAiBf,KAAjB,EAAuBe,YAAYC,EAAnC,EAAmCA,SAAnC,EAA6CL,OAA7C,OACN,0BAAM1G,UAAWH,EAAQkG,KAAM7B,SAAU2C,GACvC,kBAAC,KAAD,CAAOhE,KAAK,aACT,YAAsB,IAAnBmE,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACT,OACE,kBAACC,GAAA,EAAD,iBACMF,EADN,CAEEjH,QAAQ,WACR0F,OAAO,SACP0B,UAAQ,EACRC,WAAS,EACTrK,GAAG,QACHsK,MAAM,gBACNC,aAAa,QACbC,WAAS,EACTvP,MAAOoO,EAAiBa,GACxBO,WAAYpB,EAAiBa,IAASA,EAAKjP,YAKnD,kBAAC,KAAD,CAAO6K,KAAK,aACT,gBAAGmE,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,kBAACC,GAAA,EAAD,iBACMF,EADN,CAEEjH,QAAQ,WACR0F,OAAO,SACP0B,UAAQ,EACRC,WAAS,EACTC,MAAM,WACN1L,KAAK,WACLoB,GAAG,WACHuK,aAAa,mBACbtP,MAAOoO,EAAiBa,GACxBO,WAAYpB,EAAiBa,IAASA,EAAKjP,YAIjD,kBAACiI,EAAA,EAAD,CACEwH,SAAUV,GAAYD,EACtBnL,KAAK,SACLyL,WAAS,EACTrH,QAAQ,YACRhB,MAAM,UACNiB,UAAWH,EAAQmG,QANrB,WAUA,kBAAC0B,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAM/Q,MAAI,GACR,kBAACiR,GAAA,EAAD,CACEpB,UAAU,SACVvI,QAASkI,EACTpG,QAAQ,SAEP,2CCvIjBxE,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,uCACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,8CACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,qCACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,wCACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,iDACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,wCACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,gCACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,yCACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,gCACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,mCACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,4CACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,mCACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,oCACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,6CACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,oCACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,gCACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,yCACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,gCACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,kCACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,2CACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,kCACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,iCACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,0CACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,iCACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,kCACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,2CACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,kCACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,qCACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,8CACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,qCACNC,QAAS,CAAE5D,YC1CJiQ,GAAgBC,aAAgB,CAC3CC,aVKiC,WAGd,IAFnB7R,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,uCACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,8CACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,qCACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,IUtBX+R,gBTIoC,WAGjB,IAFnB/R,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,wCACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,iDACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,wCACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,ISrBXgS,QRG4B,WAGT,IAFnBhS,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,gCACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,yCACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,gCACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,IQpBXiS,QLE4B,WAGT,IAFnBjS,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,gCACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,yCACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,gCACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,IKnBXkS,WNC+B,WAGZ,IAFnBlS,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,oCACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,6CACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,oCACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,IMlBXmS,SHA6B,WAGV,IAFnBnS,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,iCACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,0CACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,iCACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,IGjBXoS,SJD6B,WAGV,IAFnBpS,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,kCACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,2CACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,kCACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,IIhBXqS,WPF+B,WAGZ,IAFnBrS,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,mCACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,4CACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,mCACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,IOfXsS,UFH8B,WAGX,IAFnBtS,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,kCACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,2CACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,kCACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,IEdXuS,aDJiC,WAGd,IAFnBvS,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,qCACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,8CACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,qCACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,MCXAuF,GAAU,CACrBiN,gBVgC6B,SAAClO,GAAD,8CAAiC,WAC9DkB,GAD8D,SAAA3C,EAAA,sEAInC,sBACzB2C,EAASD,GAAQkM,kBAAiB,IAL0B,KAM5DjM,EAN4D,KAO1DD,GAP0D,SAOpClB,EAAqBC,EAHpB,uBAJmC,6BAOlDkN,QAPkD,+BAS5DhM,EAASD,GAAQkM,kBAAiB,IAClCjM,EAASD,GAAQmM,SAAS,OAVkC,kDAY5DlM,EAASD,GAAQmM,SAAS,KAAMjQ,WAZ4B,0DAAjC,uDU/B7BgR,mBT+BgC,SAChCnO,EACAF,GAFgC,8CAGlB,WAAOoB,GAAP,SAAA3C,EAAA,sEAEZ2C,EAASD,GAAQkM,kBAAiB,IAFtB,KAGZjM,EAHY,KAIVD,GAJU,SAIYlB,EAA6BC,EAAUF,GAJnD,6BAIFoN,QAJE,+BAMZhM,EAASD,GAAQkM,kBAAiB,IAClCjM,EAASD,GAAQmM,SAAS,OAPd,kDASZlM,EAASD,GAAQmM,SAAS,KAAMjQ,WATpB,0DAHkB,uDS9BhCiR,iBR8B8B,SAC9BpO,EACAF,GAF8B,8CAGhB,WAAOoB,GAAP,SAAA3C,EAAA,sEAEZ2C,EAASD,GAAQkM,kBAAiB,IAFtB,KAGZjM,EAHY,KAGHD,GAHG,SAGmBlB,EAAqBC,EAAUF,GAHlD,6BAGKoN,QAHL,+BAIZhM,EAASD,GAAQkM,kBAAiB,IAClCjM,EAASD,GAAQmM,SAAS,OALd,kDAOZlM,EAASD,GAAQmM,SAAS,KAAMjQ,WAPpB,0DAHgB,uDQ7B9BkR,oBP6BiC,SAAClO,GAAD,8CAAqC,WACtEe,GADsE,SAAA3C,EAAA,sEAIpE2C,EAASD,GAAQkM,kBAAiB,IAJkC,KAKpEjM,EALoE,KAK3DD,GAL2D,SAKrClB,EAAwBI,GALa,6BAKnD+M,QALmD,+BAMpEhM,EAASD,GAAQkM,kBAAiB,IANkC,kDAQpEjM,EAASD,GAAQmM,SAAS,KAAMjQ,WARoC,0DAArC,uDO5BjCmR,oBN4BiC,SAACxO,GAAD,8CAA8B,WAC/DoB,GAD+D,SAAA3C,EAAA,sEAI7D2C,EAASD,GAAQkM,kBAAiB,IAJ2B,KAK7DjM,EAL6D,KAKpDD,GALoD,SAK9BlB,EAAwBD,GALM,6BAK5CoN,QAL4C,+BAM7DhM,EAASD,GAAQkM,kBAAiB,IAN2B,kDAQ7DjM,EAASD,GAAQmM,SAAS,KAAMjQ,WAR6B,0DAA9B,uDM3BjCoR,iBL2B8B,SAACzO,GAAD,8CAA8B,WAC5DoB,GAD4D,SAAA3C,EAAA,sEAI1D2C,EAASD,GAAQkM,kBAAiB,IAJwB,KAK1DjM,EAL0D,KAKjDD,GALiD,SAK3BlB,EAAqBD,GALM,6BAKzCoN,QALyC,+BAM1DhM,EAASD,GAAQkM,kBAAiB,IAClCjM,EAASD,GAAQmM,SAAS,OAPgC,kDAS1DlM,EAASD,GAAQmM,SAAS,KAAMjQ,WAT0B,0DAA9B,uDK1B9BqR,kBJ0B+B,SAAC1O,GAAD,8CAA8B,WAC7DoB,GAD6D,SAAA3C,EAAA,sEAI3D2C,EAASD,GAAQkM,kBAAiB,IAJyB,KAK3DjM,EAL2D,KAKlDD,GALkD,SAK5BlB,EAAsBD,GALM,6BAK1CoN,QAL0C,+BAM3DhM,EAASD,GAAQkM,kBAAiB,IANyB,kDAQ3DjM,EAASD,GAAQmM,SAAS,KAAMjQ,WAR2B,0DAA9B,uDIzB/BsR,kBHyB+B,SAAC3O,GAAD,8CAA8B,WAC7DoB,GAD6D,SAAA3C,EAAA,sEAI3D2C,EAASD,GAAQkM,kBAAiB,IAJyB,KAK3DjM,EAL2D,KAKlDD,GALkD,SAK5BlB,EAAsBD,GALM,6BAK1CoN,QAL0C,+BAM3DhM,EAASD,GAAQkM,kBAAiB,IANyB,kDAQ3DjM,EAASD,GAAQmM,SAAS,KAAMjQ,WAR2B,0DAA9B,uDGxB/BuR,aFwB0B,SAAC5O,GAAD,8CAA8B,WACxDoB,EACAgB,GAFwD,SAAA3D,EAAA,sEAKtD2C,EAASD,GAAQkM,kBAAiB,IALoB,KAMtDjM,EANsD,KAOpDD,GAPoD,SAQ5CtB,EACJuC,IAAWP,QAAQC,YAAaO,GAChCrC,GAVgD,6BAO5CoN,QAP4C,+BActDhM,EAASD,GAAQkM,kBAAiB,IAClCjM,EAASD,GAAQmM,SAAS,OAf4B,kDAiBtDlM,EAASD,GAAQmM,SAAS,KAAMjQ,WAjBsB,0DAA9B,yDEvB1BwR,gBDuB6B,SAAC7O,GAAD,8CAA8B,WAC3DoB,EACAgB,GAF2D,SAAA3D,EAAA,sEAKzD2C,EAASD,GAAQkM,kBAAiB,IALuB,KAMzDjM,EANyD,KAOvDD,GAPuD,SAQ/CtB,EACJuC,IAAWP,QAAQC,YAAaO,GAChCrC,GAVmD,6BAO/CoN,QAP+C,+BAczDhM,EAASD,GAAQkM,kBAAiB,IAClCjM,EAASD,GAAQmM,SAAS,OAf+B,kDAiBzDlM,EAASD,GAAQmM,SAAS,KAAMjQ,WAjByB,0DAA9B,0DExDlByR,GAAa,SAAClT,GAAD,OAAyBA,EAAMmT,OAAOtB,cACnDuB,GAAa,SAACpT,GAAD,OAAyBA,EAAMmT,OAAOnB,SACnDS,GAAqB,SAACzS,GAAD,OAChCA,EAAMmT,OAAOpB,iBAEFsB,GAAa,SAACrT,GAAD,OAAyBA,EAAMmT,OAAOlB,SACnDqB,GAAgB,SAACtT,GAAD,OAAyBA,EAAMmT,OAAOjB,YACtDqB,GAAc,SAACvT,GAAD,OAAyBA,EAAMmT,OAAOf,UACpDoB,GAAc,SAACxT,GAAD,OAAyBA,EAAMmT,OAAOhB,UACpDsB,GAAgB,SAACzT,GAAD,OAAyBA,EAAMmT,OAAOd,YACtDW,GAAe,SAAChT,GAAD,OAAyBA,EAAMmT,OAAOb,WACrDW,GAAkB,SAACjT,GAAD,OAC7BA,EAAMmT,OAAOZ,cCKFY,GACG,CACZO,WAAY,kBAAM3N,YAAYmN,MAFrBC,GAIC,kBAAMpN,YAAYsN,KAJnBF,GAKI,kBAAMpN,YAAYuN,KALtBH,GAME,kBAAMpN,YAAYwN,KANpBJ,GAOE,kBAAMpN,YAAYyN,KAPpBL,GAQI,kBAAMpN,YAAY0N,KARtBN,GASC,kBAAMpN,YAAYqN,KATnBD,GAUS,kBAAMpN,YAAY0M,KAV3BU,GAWG,kBAAMpN,YAAYiN,KAXrBG,GAYM,kBAAMpN,YAAYkN,KAZxBE,GAaC,kBAAsBxN,GAAWJ,K,iFCpBlCoO,GAAqB,SAAC,GAAkB,IAAhBtO,EAAe,EAAfA,KAAMoB,EAAS,EAATA,GAAS,EAClBE,KADkB,mBAC3CG,EAD2C,KACjC3D,EADiC,KAC3BmE,EAD2B,OAExBV,IAAMC,WAFkB,mBAE3C7G,EAF2C,KAEpC4T,EAFoC,OASJ3N,KAAtCS,EAT0C,EAS1CA,kBAAmBH,EATuB,EASvBA,eAE3BK,IAAMiN,WAAU,WACD,UAATxO,EACFhB,EAA2BoC,GAAIxE,MAAK,SAACC,GAAD,OAAS0R,EAAS1R,MACnD0C,GAAuB6B,GAAIxE,MAAK,SAACC,GAAD,OAAS0R,EAAS1R,QACtD,IACH,IAAMb,EAAS,CAAEyS,SAAUrN,EAAI0F,WAAY9G,GAErC0O,EAAgB,uCAAG,sBAAAlR,EAAA,yDAClB7C,EADkB,6DAEnBA,QAFmB,IAEnBA,OAFmB,EAEnBA,EAAOsS,WAFY,gCAGf/L,EAAe,eAAKlF,EAAN,CAAciR,WAAW,KAHxB,6CAIV/L,EAAe,eAAKlF,EAAN,CAAciR,WAAW,KAJ7B,wBAMjBsB,EAAS,eAAK5T,EAAN,CAAasS,YAAW,OAACtS,QAAD,IAACA,OAAD,EAACA,EAAOsS,cANvB,QAOvBhL,IAPuB,4CAAH,qDAShB0M,EAAmB,uCAAG,sBAAAnR,EAAA,yDACrB7C,EADqB,6DAEtBA,QAFsB,IAEtBA,OAFsB,EAEtBA,EAAOiU,UAFe,gCAGlBvN,EAAkB,eAAKrF,EAAN,CAAc4S,UAAU,KAHvB,6CAIbvN,EAAkB,eAAKrF,EAAN,CAAc4S,UAAU,KAJ5B,wBAKpBL,EAAS,eAAK5T,EAAN,CAAaiU,WAAU,OAACjU,QAAD,IAACA,OAAD,EAACA,EAAOiU,aALnB,QAM1B3M,IAN0B,4CAAH,qDAQzB,OACE,oCACE,yBACEuE,MAAO,CAAEjD,SAAU,WAAYsL,OAAQ,KAAMC,MAAO,MACpDxM,QAnCkB,SAACyM,GACvBA,EAAEvG,iBACF1K,EAAKiR,KAmCD,kBAAC,KAAD,OAEF,kBAACtM,EAAA,EAAD,CACErB,GAAG,cACHK,SAAUA,EACViB,aAAW,EACX5E,KAAM6E,QAAQlB,GACdmB,QAASX,GAET,kBAACY,EAAA,EAAD,CAAUP,QAASoM,IACX,OAAL/T,QAAK,IAALA,OAAA,EAAAA,EAAOsS,WAAY,yBAA2B,oBAEjD,kBAACpK,EAAA,EAAD,CAAUP,QAASqM,IACX,OAALhU,QAAK,IAALA,OAAA,EAAAA,EAAOiU,UACJ,4BACA,0BC3DR9L,GAAYC,YAAW,CAC3BiC,KAAM,CACJlB,MAAO,OACPkL,OAAQ,QAEVC,WAAY,CACVzL,QAAS,OACTwG,cAAe,SACfgF,OAAQ,OACRE,eAAgB,iBAElBC,KAAM,CACJC,WAAY,EACZ7L,SAAU,cAGD8L,GAA0B,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUhN,EAAwB,EAAxBA,QAAStC,EAAe,EAAfA,KAAMoB,EAAS,EAATA,GAC3D8C,EAAUpB,KACVjI,EAASD,KACf,OACE,kBAACmR,GAAA,EAAD,CAAM1H,UAAWH,EAAQiL,KAAMnU,MAAI,EAACuU,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3D,kBAACC,GAAA,EAAD,CAAOrN,QAASA,EAAS+B,UAAWH,EAAQc,MAC1C,kBAAC4K,GAAA,EAAD,CAAMvL,UAAWH,EAAQc,MACvB,kBAAC6K,GAAA,EAAD,CAAgBxL,UAAWH,EAAQ+K,YAChCK,KAINzU,IAAoB,UAATmF,GAA6B,OAATA,IAC9B,kBAAC,GAAD,CAAOA,KAAMA,EAAMoB,GAAIA,MCxBzB0B,GAAYC,YAAW,CAC3B8C,MAAO,CACLkE,SAAU,iBACVjG,MAAO,OACPN,QAAS,SAEXsM,YAAa,CACXC,UAAW,MACXC,UAAW,aACXlM,MAAO,QAETmM,cAAe,CACbjB,OAAQ,QACRjF,SAAU,iBACVjG,MAAO,OACPN,QAAS,WAIA0M,GAA6B,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMjE,EAAgB,EAAhBA,UAC3ChI,EAAUpB,KACVf,EAAUC,cAEVoO,EAAc7O,IAAM8O,aAAY,WAChCF,EAAK/O,IAAIW,EAAQrD,KAAK,WAAayR,EAAK/O,GAAGkP,cAC9C,CAACH,IAEJ,OACE,kBAAC,GAAD,CAAUnQ,KAAK,QAAQoB,GAAE,OAAE+O,QAAF,IAAEA,OAAF,EAAEA,EAAM/O,GAAIkB,QAAS8N,GAC1ClE,EAOA,kBAACqE,GAAA,EAAD,CACEC,UAAU,OACVpM,QAAQ,OACRC,UAAWH,EAAQ+L,eAEnB,yBAAK5L,UAAWH,EAAQ2B,MAAO4K,IAAI,cAXrC,yBACEpM,UAAWH,EAAQ2B,MACnBtD,IAAK9C,GAAY,OAAC0Q,QAAD,IAACA,OAAD,EAACA,EAAMO,aACxBD,IAAI,WAWR,kBAACE,GAAA,EAAD,CAAatM,UAAWH,EAAQ4L,aAC9B,kBAAC3L,GAAA,EAAD,CAAYyM,cAAY,EAACxM,QAAQ,QAAQyG,UAAU,MAC/CqB,EAGA,kBAACqE,GAAA,EAAD,CAAUC,UAAU,OAAOpM,QAAQ,SAFnC+L,EAAKlN,OAKT,kBAACkB,GAAA,EAAD,CAAYC,QAAQ,UAAUhB,MAAM,iBAChC8I,EAOA,kBAACqE,GAAA,EAAD,CAAUC,UAAU,OAAOpM,QAAQ,SAPpC,UAEG+L,EAAKpJ,aACD,IAAIC,KAAKmJ,EAAKpJ,cAAc8J,qBAC5B,MAJP,eCzDL/N,GAAYC,YAAW,CAC3BiJ,UAAW,CACTvF,UAAW,OACXW,aAAc,UAGL0J,GAA8B,SAAC,GAAyB,IAAvBxB,EAAsB,EAAtBA,SAAU9I,EAAY,EAAZA,MAChDuK,EAASjO,KACf,OACE,kBAACiJ,GAAA,EAAD,CACEvF,MAAOA,EACPyD,WAAW,UACX5F,UAAW0M,EAAO/E,UAClBA,WAAS,EACTzE,QAAS,GAER+H,GAEG0B,MAAM,IACHC,KAAK,GACLrL,KAAI,SAACsL,EAAIC,GAAL,OACH,kBAAC,GAAD,CAAWjF,WAAW,EAAMnG,IAAKoL,EAAKhB,KAAM,Y,SC/B7CiB,GAAmB,SAAC7S,GAAD,OAC9BA,EACG8S,UAAU,GACVC,MAAM,KACNC,QAAO,SAACC,EAAKN,GAAQ,IAAD,EACEA,EAAGI,MAAM,KADX,mBACZvL,EADY,KACPoD,EADO,KAEnB,OAAO,eAAKqI,EAAZ,gBAAkBzL,EAAM0L,mBAAmBtI,OAC1C,KCSDrG,GAAYC,YAAW,CAC3B2O,WAAY,CACV,OAAQ,CAAExC,eAAgB,SAAUpF,OAAQ,aAoBnC6H,GAAoB,SAAC,GAAuC,IAAD,MAApCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAC7C5N,EAAUpB,KACVf,EAAUC,cACVhG,EAAS+V,cACXC,EAAaZ,GAAiBpV,EAAO8I,QAAQ/F,MAAQ,EAJa,EAM9CwC,IAAMC,SAASyQ,SAASD,IANsB,mBAM/DjT,EAN+D,KAMzDmT,EANyD,KAahEC,EAAgBC,cAAgBpW,OAChCqW,EAAUJ,SAASE,EAAc/Q,IAAM,KAE7CG,IAAMiN,WAAU,WACTsD,EACAD,EAAOQ,EAAStT,GADF8S,EAAO9S,KAEzB,CAACA,EAAM8S,EAAQQ,IAKlB,OACE,oCACE,kBAAC,GAAD,eACGT,EAAQpV,YADX,iBACG,EAAcgJ,eADjB,aACG,EAAuBI,KAAI,SAACsL,GAAD,OAC1B,kBAAC,GAAD,CAAWhF,UAAW0F,EAAQ1F,UAAWnG,IAAKmL,EAAG9P,GAAI+O,KAAMe,QAG/D,kBAACoB,GAAA,EAAD,CACEjO,UAAWH,EAAQwN,WACnBa,MAAK,UAAEX,EAAQpV,YAAV,aAAE,EAAcgW,YACrBzT,KAAMA,EACNqE,MAAM,UACNzD,KAAK,QACLyJ,SAhBe,SAACzH,EAAmCwH,IAbtC,SAACpK,GAClBmT,EAAQnT,GACRgD,EAAQrD,KAAR,gBAAsBK,IAYtB0T,CAAWtJ,Q,8DCtDTrG,GAAYC,YAAW,CAC3B2P,UAAW,CACT5O,MAAO,OACP+C,UAAW,SACXhD,gBAAiB,wBACjBN,SAAU,WACVQ,IAAK,SACLL,OAAQ,WAEViP,SAAU,CACR5O,IAAK,KAGI6O,GAAmB,SAAC,GAAkB,IAAhBtD,EAAe,EAAfA,SAAe,ECjBzB,WAAO,IAAD,EACD/N,IAAMC,UAAS,GADd,mBACtBqR,EADsB,KACdC,EADc,KAI7B,MAAO,CAACD,EAFOxC,uBAAY,kBAAMyC,GAAU,SAACC,GAAD,OAAQA,OAAI,KDgB1BC,GADmB,mBACzCC,EADyC,KAC7BC,EAD6B,KAE1ChP,EAAUpB,KAChB,OACE,oCACGmQ,GAAc3D,EACf,yBACEhN,QAAS,kBAAM4Q,KACf7O,UAAS,UAAKH,EAAQwO,UAAb,YAA0BO,GAAc/O,EAAQyO,WAExDM,EAAa,kBAAC,KAAD,MAAqB,kBAAC,KAAD,SEzBrCnQ,GAAYC,YAAW,CAC3BoQ,OAAQ,CACNC,UAAW,OACXhM,aAAc,OACdiM,SAAU,UAIDC,GAAuB,SAAC,GAAkB,IAAhBhE,EAAe,EAAfA,SAC/BpL,EAAUpB,KAChB,OACE,yBAAKuB,UAAWH,EAAQiP,QACtB,kBAAC,GAAD,CAAW3M,MAAO,CAAE+M,SAAU,WAAajE,KCA3CxM,GAAYC,YAAW,CAC3B2O,WAAY,CACV,OAAQ,CAAExC,eAAgB,SAAUpF,OAAQ,WAE9C0J,OAAQ,CACNC,mBAAoB,cACpBC,eAAgB,QAChBC,iBAAkB,YAClB3E,OAAQ,SAEVhD,UAAW,CACTxI,QAAS,OACT0L,eAAgB,SAChBF,OAAQ,OACR/E,WAAY,OAEd2J,eAAgB,CACd/M,UAAW,UAEbgN,uBAAwB,CACtBrQ,QAAS,OACT,QAAS,CACPsQ,SAAU,YAGdC,MAAO,CACLjQ,MAAO,OAETkQ,cAAe,CACbhF,OAAQ,OACRlL,MAAO,OAETqP,OAAQ,CACNC,UAAW,OACXhM,aAAc,OACdiM,SAAU,QAEZY,QAAS,CACP7Q,MAAO,QACPI,QAAS,QAEX0Q,KAAM,CACJ3Q,SAAU,WACV6B,OAAQ,GAEV+J,KAAM,CACJC,WAAY,GAEdpK,KAAM,CACJlB,MAAO,OACPkL,OAAQ,QAEVmF,WAAY,CACVxQ,QAAS,MACT,UAAW,CACTE,gBAAiB,YAGrBuQ,aAAc,CACZ7Q,SAAU,WACV8Q,WAAY,UACZrF,OAAQ,EACR,WAAY,CACVzL,SAAU,WACVQ,IAAK,EACLuQ,KAAM,EACNxQ,MAAO,OACPkL,OAAQ,WC3ERlM,GAAYC,YAAW,CAC3B2O,WAAY,CACV,OAAQ,CAAExC,eAAgB,SAAUpF,OAAQ,aCDnCgE,GAAS,CACpByG,QCJ+B,WAAO,IAC9B/G,EAAqBM,KAArBN,iBACR,OACE,oCACE,kBAACrJ,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,kBAGA,kBAAC,GAAD,CAAM+G,QAAS9D,KAAqB+D,OAAQrE,MDFhDgH,WENkC,WAAO,IACjCjH,EAAwBO,KAAxBP,oBACR,OACE,oCACE,kBAACpJ,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,sBAGA,kBAAC,GAAD,CAAM+G,QAAS9D,KAAwB+D,OAAQtE,MFAnDkH,KF2E4B,WAAO,IAAD,8DAE5B1S,EAAUC,cACVkC,EAAUpB,KACRuL,EAAeP,GAAfO,WACAqG,EAAmC5G,GAAf6G,EAAe7G,GACrCmG,EAAU5F,IACVuG,EAAM,UAAGX,EAAQzX,YAAX,aAAG,EAAcoY,OAEvBC,GAAkB,UAAAZ,EAAQzX,YAAR,mBAAcsY,gBAAd,eAAwBxD,MAAM,OAAQ,GAExD5E,EAAkBgI,IAClB/H,EAAUgI,IAEVxC,EAAgBC,cAAgBpW,OAElCqW,EAAUJ,SAASE,EAAc/Q,IAAM,KAhBT,EAsB9B0M,KAHFX,EAnBgC,EAmBhCA,gBACAC,EApBgC,EAoBhCA,mBACAC,EArBgC,EAqBhCA,iBASF,OANA9L,IAAMiN,WAAU,WACdrB,EAAgBkF,GAChBjF,EAAmBiF,EAAS,GAC5BhF,EAAiBgF,EAAS,KACzB,CAACA,IAC0B,OAA1B,UAAA4B,EAAQ5X,aAAR,eAAeI,SAAgBsF,EAAQrD,KAAK,QAE9C,oCACE,kBAACqN,GAAA,EAAD,CAAM9B,WAAW,UAAU+B,WAAS,EAACzE,QAAS,GAC5C,kBAACwE,GAAA,EAAD,CAAM1H,UAAWH,EAAQgQ,KAAMlZ,MAAI,EAACuU,GAAI,GAAIC,GAAI,GAC5CyE,EAAQ/H,UAmBR,yBAAK7H,UAAWH,EAAQ8H,WACtB,kBAACuE,GAAA,EAAD,CACElM,UAAWH,EAAQ8P,cACnBxD,UAAU,OACVpM,QAAQ,UAtBZ,yBAAKC,UAAWH,EAAQ8H,WACtB,yBAAK3H,UAAWH,EAAQ0P,gBACtB,yBACEvP,UAAWH,EAAQ6P,MACnBxR,IAAK9C,GAAY,UAACwU,EAAQzX,YAAT,aAAC,EAAckU,aAChCD,IAAI,cAsBd,kBAAC1E,GAAA,EAAD,CAAM1H,UAAWH,EAAQgQ,KAAMlZ,MAAI,EAACuU,GAAI,GAAIC,GAAI,GAC9C,kBAACrL,GAAA,EAAD,CAAYC,QAAQ,KAAKyG,UAAU,MAC/BoJ,EAAQ/H,UAOR,kBAACqE,GAAA,EAAD,CAAUC,UAAU,OAAOpM,QAAQ,SAPpC,oBACI6P,EAAQzX,YADZ,aACI,EAAcyG,MADlB,aAEU,OAAPgR,QAAO,IAAPA,GAAA,UAAAA,EAASzX,YAAT,eAAeuK,cACX,IAAIC,KAAJ,OAASiN,QAAT,IAASA,GAAT,UAASA,EAASzX,YAAlB,aAAS,EAAeuK,cAAcE,cACtC,MAJP,MAUH,kBAAC9C,GAAA,EAAD,CAAYC,QAAQ,KAAKyG,UAAU,MAC/BoJ,EAAQ/H,UAGR,kBAACqE,GAAA,EAAD,CAAUC,UAAU,OAAOpM,QAAQ,SAHpC,oBACI6P,EAAQzX,YADZ,aACI,EAAcuY,iBAKnBd,EAAQ/H,UAgBR,kBAACqE,GAAA,EAAD,CAAUC,UAAU,OAAOpM,QAAQ,SAfnC,kBAAC2H,GAAA,EAAD,CACEvF,MAAO,CAAEhD,QAAS,OAAQyG,WAAY,UACtCjP,MAAI,EACJuU,GAAI,IAEJ,kBAACyF,GAAA,EAAD,CACEC,IAAK,GACLtV,KAAK,SACLuH,KAAK,YACLiC,MAAK,OAAE8K,QAAF,IAAEA,GAAF,UAAEA,EAASzX,YAAX,aAAE,EAAe0Y,aACtBC,UAAQ,IAEV,kBAACC,GAAA,EAAD,YAAMnB,QAAN,IAAMA,GAAN,UAAMA,EAASzX,YAAf,aAAM,EAAe0Y,eAKzB,kBAACnJ,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAMvF,MAAO,CAAEC,UAAW,QAAUzL,MAAI,EAACuU,GAAI,IAC3C,kBAACpL,GAAA,EAAD,CACEqC,MAAO,CAAEY,aAAc,QACvBhD,QAAQ,KACRyG,UAAU,MAHZ,gEAOEoJ,EAAQ/H,UAkDR,kBAACqE,GAAA,EAAD,CACE/J,MAAO,CAAEwI,OAAQ,SACjBwB,UAAU,OACVpM,QAAQ,SApDV,qCACG,UAAA6P,EAAQzX,YAAR,eAAcC,SACb,kBAAC0H,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,MAAtC,kDAEGoJ,EAAQzX,YAFX,aAEG,EAAcC,SAGlB,UAAAwX,EAAQzX,YAAR,eAAcuK,eACb,kBAAC5C,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,MAAtC,iEACe,IACZ,IAAI7D,KAAJ,OACCiN,QADD,IACCA,GADD,UACCA,EAASzX,YADV,aACC,EAAeuK,cACf8J,uBAGL,UAAAoD,EAAQzX,YAAR,eAAc6Y,UACb,kBAAClR,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,MAAtC,uFAEOyK,KAAKC,OAAM,UAAAtB,EAAQzX,YAAR,eAAc6Y,SAAU,IAF1C,oBAGI,UAAApB,EAAQzX,YAAR,eAAc6Y,SAAU,GAH5B,yBAOD,UAAApB,EAAQzX,YAAR,eAAcgZ,UACb,kBAACrR,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,MAAtC,uBACQ,eAAMoJ,EAAQzX,YAAd,aAAM,EAAcgZ,UAG7BC,OAAOC,UAAUzB,EAAQzX,KAAMmZ,SAC9B,kBAACxR,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,MAAtC,0CACW,UAAAoJ,EAAQzX,YAAR,eAAcmZ,QAAS,MAGnC,UAAA1B,EAAQzX,YAAR,mBAAcoZ,cAAd,eAAsBC,QACrB,kBAAC1R,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,MAAtC,4CAEGoJ,EAAQzX,YAFX,aAEG,EAAcoZ,OAAOhQ,KAAI,SAACsL,EAAIC,GAAL,OACxB,kBAAC,IAAD,CACE9M,UAAWH,EAAQiQ,WACnBpO,IAAKmL,EAAG9P,GACRmD,GAAI,UAAY2M,EAAG9P,IAElB8P,EAAGhK,KAAO,SAIf,MAUR,kBAAC/C,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,SAG1C,kBAACkB,GAAA,EAAD,CAAMvF,MAAO,CAAEC,UAAW,QAAUzL,MAAI,EAACuU,GAAI,IACzC0E,EAAQ/H,UA6BR,kBAACqE,GAAA,EAAD,CACE/J,MAAO,CAAEwI,OAAQ,QACjBwB,UAAU,OACVpM,QAAQ,SA/BV,oCACE,kBAACD,GAAA,EAAD,CACEqC,MAAO,CAAEY,aAAc,QACvBhD,QAAQ,KACRyG,UAAU,MAHZ,qDAOC,UAAAoJ,EAAQzX,YAAR,eAAcsY,WACb,6BACE,kBAAC3Q,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,MAAtC,OACGgK,QADH,IACGA,OADH,EACGA,EACGiB,MAAM,EArLC,IAsLRnX,KAAK,OAEM,OAAfkW,QAAe,IAAfA,OAAA,EAAAA,EAAiBgB,QAxLL,GAwLuC,GAClD,kBAAC,GAAD,KACE,kBAAC1R,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,MAAtC,OACGgK,QADH,IACGA,OADH,EACGA,EACGiB,MA5LG,IA6LJnX,KAAK,WAgBxBsV,EAAQ/H,UAmCN,KAlCF,qCACS,OAAN0I,QAAM,IAANA,OAAA,EAAAA,EAAQpP,QAAQqQ,QAAS,GACxB,oCACE,kBAAC1R,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,kCAGA,kBAACkB,GAAA,EAAD,CACEC,WAAS,EACT3H,UAAWH,EAAQiP,OACnB3M,MAAO,CAAE+M,SAAU,SAAUwC,UAAW,WAH1C,OAKGnB,QALH,IAKGA,GALH,UAKGA,EAAQpP,eALX,aAKG,EAAiBI,KAAI,SAACsL,GAAD,OACpB,kBAACnF,GAAA,EAAD,CACEvF,MAAO,CAAE4I,WAAY,GACrBG,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJ3J,IAAKmL,EAAGnL,KAER,yBAAK1B,UAAWH,EAAQkQ,cACtB,4BACE4B,YAAY,IACZC,iBAAe,EACf1T,IAAG,wCAAmC2O,EAAGnL,KACzC9C,MAAOiO,EAAGhK,eAU1BwF,EAAgBR,UAsBd,KArBF,oCACGQ,EAAgBlQ,KAAKmJ,cAAgB,GACpC,oCACE,kBAACxB,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,2EACe,IACb,kBAAC,IAAD,CAAMtG,GAAI,8BAAqB0P,EAAQzX,YAA7B,aAAqB,EAAc4E,KAA7C,oFAIF,kBAAC,GAAD,eACGsL,EAAgBlQ,YADnB,iBACG,EAAsBgJ,eADzB,aACG,EAA+BI,KAAI,SAACsL,GAAD,OAClC,kBAAC,GAAD,CACEhF,UAAWQ,EAAgBR,UAC3BnG,IAAKmL,EAAG9P,GACR+O,KAAMe,UASlBvE,EAAQT,UAoBN,KAnBF,oCACGS,EAAQnQ,KAAKmJ,cAAgB,GAC5B,oCACE,kBAACxB,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,4EACgB,IACd,kBAAC,IAAD,CAAMtG,GAAI,sBAAa0P,EAAQzX,YAArB,aAAa,EAAc4E,KAArC,oFAEF,kBAAC,GAAD,eACGuL,EAAQnQ,KAAKgJ,eADhB,aACG,EAAsBI,KAAI,SAACsL,GAAD,OACzB,kBAAC,GAAD,CACEhF,UAAWS,EAAQT,UACnBnG,IAAKmL,EAAG9P,GACR+O,KAAMe,aEjW1BgF,gBGTuC,WAAO,IACtC9I,EAAuBU,KAAvBV,mBACR,OACE,kBAAC,GAAD,CACEwE,QAAS9D,KACT+D,OAAQzE,EACR0E,cAAY,KHIhBqE,QIV+B,WAAO,IAC9B9I,EAAqBS,KAArBT,iBACR,OACE,kBAAC,GAAD,CACEuE,QAAS9D,KACT+D,OAAQxE,EACRyE,cAAY,KJKhBsE,SKVgC,WAAO,IAC/B3I,EAAsBK,KAAtBL,kBACR,OACE,oCACE,kBAACtJ,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,oBAGA,kBAAC,GAAD,CAAM+G,QAAS9D,KAAsB+D,OAAQpE,MLIjD4I,SMXgC,WAAO,IAC/B3I,EAAsBI,KAAtBJ,kBACR,OACE,oCACE,kBAACvJ,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,mBAGA,kBAAC,GAAD,CAAM+G,QAAS9D,KAAsB+D,OAAQnE,MNKjD4I,QDJ+B,WAAO,IAAD,MAC/BpS,EAAUpB,KACVyT,EAAOzI,KACP/L,EAAUC,cACVhG,EAAS+V,cACXC,EAAaZ,GAAiBpV,EAAO8I,QAAQ/F,MAAQ,EALpB,EAObwC,IAAMC,SAASyQ,SAASD,IAPX,mBAO9BjT,EAP8B,KAOxBmT,EAPwB,KAU/BsE,EADgBpE,cAAgBpW,OACPya,MACvBnJ,EAAwBQ,KAAxBR,oBAOR/L,IAAMiN,WAAU,WACdlB,EAAoB,CAAEoJ,YAAaF,EAAUzX,WAC5C,CAACA,EAAMyX,IAKV,OACE,oCACE,kBAAC,GAAD,eACGD,EAAK/Z,YADR,iBACG,EAAWgJ,eADd,aACG,EAAoBI,KAAI,SAACsL,GAAD,OACvB,kBAAC,GAAD,CAAWhF,UAAWqK,EAAKrK,UAAWnG,IAAKmL,EAAG9P,GAAI+O,KAAMe,QAG5D,kBAACoB,GAAA,EAAD,CACEjO,UAAWH,EAAQwN,WACnBa,MAAK,OAAEgE,QAAF,IAAEA,GAAF,UAAEA,EAAM/Z,YAAR,aAAE,EAAYgW,YACnBzT,KAAMA,EACNqE,MAAM,UACNzD,KAAK,QACLyJ,SAhBe,SAACzH,EAAmCwH,IATtC,SAACpK,GAClBmT,EAAQnT,GACRgD,EAAQrD,KAAR,gBAAsBK,IAQtB0T,CAAWtJ,SQxBXvJ,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,8BACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,uCACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,8BACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,oCACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,6CACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,oCACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,4BACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,qCACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,4BACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,+BACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,wCACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,+BACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,iCACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,0CACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,iCACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,4BACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,qCACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,4BACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,8BACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,uCACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,8BACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,6BACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,sCACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,6BACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,8BACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,uCACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,8BACNC,QAAS,CAAE5D,YC1CbuD,GAAe,CACjBpD,KAAM,GACN0P,WAAW,EACX7P,MAAO,MAyBH6D,GAAU,CACdiM,QAAS,SAAC3P,GAAD,MACN,CACCwD,KAAM,iCACNC,QAAS,CAAEzD,UAEf4P,iBAAkB,SAACF,GAAD,MACf,CACClM,KAAM,0CACNC,QAAS,CAAEiM,eAEfG,SAAU,SAAChQ,GAAD,MACP,CACC2D,KAAM,iCACNC,QAAS,CAAE5D,YC1CJsa,GAAYpK,aAAgB,CACvCqK,UVK8B,WAGX,IAFnBjc,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,8BACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,uCACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,8BACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,IUtBX+R,gBTIoC,WAGjB,IAFnB/R,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,oCACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,6CACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,oCACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,ISrBXgS,QRG4B,WAGT,IAFnBhS,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,4BACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,qCACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,4BACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,IQpBXiS,QLE4B,WAGT,IAFnBjS,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,4BACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,qCACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,4BACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,IKnBXkc,YNCgC,WAGb,IAFnBlc,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,iCACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,0CACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,iCACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,IMlBXmc,SHA6B,WAGV,IAFnBnc,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,6BACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,sCACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,6BACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,IGjBXoS,SJD6B,WAGV,IAFnBpS,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,8BACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,uCACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,8BACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,IIhBXqS,WPF+B,WAGZ,IAFnBrS,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,+BACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,wCACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,+BACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,IOfXsS,UFH8B,WAGX,IAFnBtS,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,8BACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,uCACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,8BACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,IEdXuS,aDJiC,WAGd,IAFnBvS,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,iCACH,OAAO,eACFrF,EADL,CAEE6B,KAAMiQ,EAAOxM,QAAQzD,OAEzB,IAAK,0CACH,OAAO,eAAK7B,EAAZ,CAAmBuR,UAAWO,EAAOxM,QAAQiM,YAC/C,IAAK,iCACH,OAAO,eACFvR,EADL,CAEE0B,MAAOoQ,EAAOxM,QAAQ5D,QAE1B,QACE,OAAO1B,MCXAuF,GAAU,CACrBkN,mBTgCgC,SAChC5N,EACAT,GAFgC,8CAGlB,WAAOoB,GAAP,SAAA3C,EAAA,sEAEZ2C,EAASD,GAAQkM,kBAAiB,IAFtB,KAGZjM,EAHY,KAGHD,GAHG,SAGmBX,GAAyBC,EAAOT,GAHnD,6BAGKoN,QAHL,+BAIZhM,EAASD,GAAQkM,kBAAiB,IAJtB,kDAMZjM,EAASD,GAAQmM,SAAS,KAAMjQ,WANpB,0DAHkB,uDS/BhC2a,aV+B0B,SAACvX,GAAD,8CAA8B,WACxDW,GADwD,SAAA3C,EAAA,sEAI7B,sBACzB2C,EAASD,GAAQkM,kBAAiB,IALoB,KAMtDjM,EANsD,KAM7CD,GAN6C,SAMvBX,GAAiBC,EAFvB,uBAJ6B,6BAMrC2M,QANqC,+BAOtDhM,EAASD,GAAQkM,kBAAiB,IAPoB,kDAStDjM,EAASD,GAAQmM,SAAS,KAAMjQ,WATsB,0DAA9B,uDU9B1B4a,aR8B0B,SAC1BxX,EACAT,GAF0B,8CAGZ,WAAOoB,GAAP,SAAA3C,EAAA,sEAEZ2C,EAASD,GAAQkM,kBAAiB,IAFtB,KAGZjM,EAHY,KAGHD,GAHG,SAGmBX,GAAiBC,EAAOT,GAH3C,6BAGKoN,QAHL,+BAIZhM,EAASD,GAAQkM,kBAAiB,IAJtB,kDAMZjM,EAASD,GAAQmM,SAAS,KAAMjQ,WANpB,0DAHY,uDQ7B1B6a,gBP6B6B,SAAC7X,GAAD,8CAAkC,WAC/De,GAD+D,SAAA3C,EAAA,sEAI7D2C,EAASD,GAAQkM,kBAAiB,IAJ2B,KAK7DjM,EAL6D,KAKpDD,GALoD,SAK9BX,GAAoBH,GALU,6BAK5C+M,QAL4C,+BAM7DhM,EAASD,GAAQkM,kBAAiB,IAN2B,kDAQ7DjM,EAASD,GAAQmM,SAAS,KAAMjQ,WAR6B,0DAAlC,uDO5B7B8a,iBN4B8B,SAACnY,GAAD,8CAA8B,WAC5DoB,GAD4D,SAAA3C,EAAA,sEAI1D2C,EAASD,GAAQkM,kBAAiB,IAJwB,KAK1DjM,EAL0D,KAKjDD,GALiD,SAK3BX,GAAqBR,GALM,6BAKzCoN,QALyC,+BAM1DhM,EAASD,GAAQkM,kBAAiB,IANwB,kDAQ1DjM,EAASD,GAAQmM,SAAS,KAAMjQ,WAR0B,0DAA9B,uDM3B9B+a,aL2B0B,SAACpY,GAAD,8CAA8B,WACxDoB,GADwD,SAAA3C,EAAA,sEAItD2C,EAASD,GAAQkM,kBAAiB,IAJoB,KAKtDjM,EALsD,KAK7CD,GAL6C,SAKvBX,GAAiBR,GALM,6BAKrCoN,QALqC,+BAMtDhM,EAASD,GAAQkM,kBAAiB,IANoB,kDAQtDjM,EAASD,GAAQmM,SAAS,KAAMjQ,WARsB,0DAA9B,uDK1B1Bgb,cJ0B2B,SAACrY,GAAD,8CAA8B,WACzDoB,GADyD,SAAA3C,EAAA,sEAIvD2C,EAASD,GAAQkM,kBAAiB,IAJqB,KAKvDjM,EALuD,KAK9CD,GAL8C,SAKxBX,GAAkBR,GALM,6BAKtCoN,QALsC,+BAMvDhM,EAASD,GAAQkM,kBAAiB,IANqB,kDAQvDjM,EAASD,GAAQmM,SAAS,KAAMjQ,WARuB,0DAA9B,uDIzB3Bib,cHyB2B,SAACtY,GAAD,8CAA8B,WACzDoB,GADyD,SAAA3C,EAAA,sEAIvD2C,EAASD,GAAQkM,kBAAiB,IAJqB,KAKvDjM,EALuD,KAK9CD,GAL8C,SAKxBX,GAAkBR,GALM,6BAKtCoN,QALsC,+BAMvDhM,EAASD,GAAQkM,kBAAiB,IANqB,kDAQvDjM,EAASD,GAAQmM,SAAS,KAAMjQ,WARuB,0DAA9B,uDGxB3BuR,aFwB0B,SAAC5O,GAAD,8CAA8B,WACxDoB,EACAgB,GAFwD,SAAA3D,EAAA,sEAKtD2C,EAASD,GAAQkM,kBAAiB,IALoB,KAMtDjM,EANsD,KAOpDD,GAPoD,SAQ5CtB,EACJuC,IAAWP,QAAQC,YAAaO,GAChCrC,GAVgD,6BAO5CoN,QAP4C,+BActDhM,EAASD,GAAQkM,kBAAiB,IAClCjM,EAASD,GAAQmM,SAAS,OAf4B,kDAiBtDlM,EAASD,GAAQmM,SAAS,KAAMjQ,WAjBsB,0DAA9B,yDEvB1BwR,gBDuB6B,SAAC7O,GAAD,8CAA8B,WAC3DoB,EACAgB,GAF2D,SAAA3D,EAAA,sEAKzD2C,EAASD,GAAQkM,kBAAiB,IALuB,KAMzDjM,EANyD,KAOvDD,GAPuD,SAQ/CtB,EACJuC,IAAWP,QAAQC,YAAaO,GAChCrC,GAVmD,6BAO/CoN,QAP+C,+BAczDhM,EAASD,GAAQkM,kBAAiB,IAClCjM,EAASD,GAAQmM,SAAS,OAf+B,kDAiBzDlM,EAASD,GAAQmM,SAAS,KAAMjQ,WAjByB,0DAA9B,0DExDlByR,GAAa,SAAClT,GAAD,OAAyBA,EAAM2c,GAAGV,WAC/C7I,GAAa,SAACpT,GAAD,OAAyBA,EAAM2c,GAAG3K,SAC/CS,GAAqB,SAACzS,GAAD,OAChCA,EAAM2c,GAAG5K,iBAEEsB,GAAa,SAACrT,GAAD,OAAyBA,EAAM2c,GAAG1K,SAC/C2K,GAAc,SAAC5c,GAAD,OAAyBA,EAAM2c,GAAGR,UAChDU,GAAiB,SAAC7c,GAAD,OAAyBA,EAAM2c,GAAGT,aACnD3I,GAAc,SAACvT,GAAD,OAAyBA,EAAM2c,GAAGvK,UAChDqB,GAAgB,SAACzT,GAAD,OAAyBA,EAAM2c,GAAGtK,YAClDW,GAAe,SAAChT,GAAD,OAAyBA,EAAM2c,GAAGrK,WACjDW,GAAkB,SAACjT,GAAD,OAAyBA,EAAM2c,GAAGpK,cCKpDoK,GACA,CACTjJ,WAAY,kBAAM3N,YAAYmN,MAFrByJ,GAIC,kBAAM5W,YAAYsN,KAJnBsJ,GAKK,kBAAM5W,YAAY8W,KALvBF,GAME,kBAAM5W,YAAY6W,KANpBD,GAOE,kBAAM5W,YAAYwN,KAPpBoJ,GAQC,kBAAsBhX,GAAWJ,KARlCoX,GASC,kBAAM5W,YAAYqN,KATnBuJ,GAUS,kBAAM5W,YAAY0M,KAV3BkK,GAWG,kBAAM5W,YAAYiN,KAXrB2J,GAYM,kBAAM5W,YAAYkN,KAZxB0J,GAaI,kBAAM5W,YAAY0N,KCjB7BtL,GAAYC,YAAW,CAC3B8C,MAAO,CACLkE,SAAU,iBACVjG,MAAO,OACPN,QAAS,SAEXsM,YAAa,CACXC,UAAW,MACXC,UAAW,aACXlM,MAAO,QAETmM,cAAe,CACbjB,OAAQ,QACRjF,SAAU,iBACVjG,MAAO,OACPN,QAAS,WAGAiU,GAA0B,SAAC,GAAyB,IAAvBtH,EAAsB,EAAtBA,KAAMjE,EAAgB,EAAhBA,UACxChI,EAAUpB,KACVf,EAAUC,cACVoO,EAAc7O,IAAM8O,aAAY,WAChCF,EAAK/O,IAAIW,EAAQrD,KAAK,OAASyR,EAAK/O,GAAGkP,cAC1C,CAACH,IAEJ,OACE,kBAAC,GAAD,CAAUnQ,KAAK,KAAKoB,GAAE,OAAE+O,QAAF,IAAEA,OAAF,EAAEA,EAAM/O,GAAIkB,QAAS8N,GACvClE,EAOA,kBAACqE,GAAA,EAAD,CACEC,UAAU,OACVpM,QAAQ,OACRC,UAAWH,EAAQ+L,eAEnB,yBAAK5L,UAAWH,EAAQ2B,MAAO4K,IAAI,cAXrC,yBACEpM,UAAWH,EAAQ2B,MACnBtD,IAAK9C,GAAa0Q,EAAKO,aACvBD,IAAI,WAWR,kBAACE,GAAA,EAAD,CAAatM,UAAWH,EAAQ4L,aAC9B,kBAAC3L,GAAA,EAAD,CAAYyM,cAAY,EAACxM,QAAQ,QAAQyG,UAAU,MAC/CqB,EAGA,kBAACqE,GAAA,EAAD,CAAUC,UAAU,OAAOpM,QAAQ,SAFnC+L,EAAKjJ,MAKT,kBAAC/C,GAAA,EAAD,CAAYC,QAAQ,UAAUhB,MAAM,iBAChC8I,EAOA,kBAACqE,GAAA,EAAD,CAAUC,UAAU,OAAOpM,QAAQ,SAPpC,UAEG+L,EAAKhJ,eACD,IAAIH,KAAKmJ,EAAKhJ,gBAAgB0J,qBAC9B,MAJP,YCjDL/N,GAAYC,YAAW,CAC3B2O,WAAY,CACV,OAAQ,CAAExC,eAAgB,SAAUpF,OAAQ,aAoBnC6H,GAAoB,SAAC,GAAuC,IAAD,MAApCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAC7C5N,EAAUpB,KACVf,EAAUC,cACVhG,EAAS+V,cACXC,EAAaZ,GAAiBpV,EAAO8I,QAAQ/F,MAAQ,EAJa,EAM9CwC,IAAMC,SAASyQ,SAASD,IANsB,mBAM/DjT,EAN+D,KAMzDmT,EANyD,KAahEC,EAAgBC,cAAgBpW,OAChC0b,EAAOzF,SAASE,EAAc/Q,IAAM,KAE1CG,IAAMiN,WAAU,WACTsD,EACAD,EAAO6F,EAAM3Y,GADC8S,EAAO9S,KAEzB,CAACA,EAAM8S,EAAQ6F,IAKlB,OACE,oCACE,kBAAC,GAAD,eACG9F,EAAQpV,YADX,iBACG,EAAcgJ,eADjB,aACG,EAAuBI,KAAI,SAACsL,GAAD,OAC1B,kBAAC,GAAD,CAAQhF,UAAW0F,EAAQ1F,UAAWnG,IAAKmL,EAAG9P,GAAI+O,KAAMe,QAG5D,kBAACoB,GAAA,EAAD,CACEjO,UAAWH,EAAQwN,WACnBa,MAAK,UAAEX,EAAQpV,YAAV,aAAE,EAAcgW,YACrBzT,KAAMA,EACNqE,MAAM,UACNzD,KAAK,QACLyJ,SAhBe,SAACzH,EAAmCwH,IAbtC,SAACpK,GAClBmT,EAAQnT,GACRgD,EAAQrD,KAAR,gBAAsBK,IAYtB0T,CAAWtJ,QC/CTrG,GAAYC,YAAW,CAC3B8C,MAAO,CACLkE,SAAU,iBACVjG,MAAO,OACPN,QAAS,SAEXsM,YAAa,CACXC,UAAW,MACXC,UAAW,aACXlM,MAAO,QAETmM,cAAe,CACbjB,OAAQ,QACRjF,SAAU,iBACVjG,MAAO,OACPN,QAAS,WAIAmU,GAAgC,SAAC,GAAyB,IAAvBxH,EAAsB,EAAtBA,KAAMjE,EAAgB,EAAhBA,UAC9ChI,EAAUpB,KACVf,EAAUC,cACIT,IAAM8O,aAAY,WAChCF,EAAK/O,IACPW,EAAQrD,KAAR,UACKqD,EAAQ6V,SAASC,SADtB,mBACyC1H,EAAK2H,cAAcxH,eAE7D,CAACH,IAEJ,OACE,kBAAC,GAAD,CAAU7N,QAAS,cACf4J,EAOA,kBAACqE,GAAA,EAAD,CACEC,UAAU,OACVpM,QAAQ,OACRC,UAAWH,EAAQ+L,eAEnB,yBAAK5L,UAAWH,EAAQ2B,MAAO4K,IAAI,cAXrC,yBACEpM,UAAWH,EAAQ2B,MACnBtD,IAAK9C,GAAa0Q,EAAKO,aACvBD,IAAI,WAWR,kBAACE,GAAA,EAAD,CAAatM,UAAWH,EAAQ4L,aAC9B,kBAAC3L,GAAA,EAAD,CAAYyM,cAAY,EAACxM,QAAQ,QAAQyG,UAAU,MAC/CqB,EAGA,kBAACqE,GAAA,EAAD,CAAUC,UAAU,OAAOpM,QAAQ,SAFnC+L,EAAKjJ,MAKT,kBAAC/C,GAAA,EAAD,CAAYC,QAAQ,UAAUhB,MAAM,iBAChC8I,EAOA,kBAACqE,GAAA,EAAD,CAAUC,UAAU,OAAOpM,QAAQ,SAPpC,UAEG+L,EAAK4H,SACD,IAAI/Q,KAAKmJ,EAAK4H,UAAUlH,qBACxB,MAJP,YCnDL/N,GAAYC,YAAW,CAC3B2O,WAAY,CACV,OAAQ,CAAExC,eAAgB,SAAUpF,OAAQ,WAE9C0J,OAAQ,CACNC,mBAAoB,cACpBC,eAAgB,QAChBC,iBAAkB,YAClB3E,OAAQ,SAEVhD,UAAW,CACTxI,QAAS,OACT0L,eAAgB,SAChBjF,WAAY,MACZ+E,OAAQ,QAEV4E,eAAgB,CACd/M,UAAW,UAEbgN,uBAAwB,CACtBrQ,QAAS,OACT,QAAS,CACPsQ,SAAU,YAGdC,MAAO,CACLjQ,MAAO,OAETkQ,cAAe,CACbhF,OAAQ,OACRlL,MAAO,OAETqP,OAAQ,CACNC,UAAW,OACXhM,aAAc,OACdiM,SAAU,QAEZY,QAAS,CACP7Q,MAAO,QACPI,QAAS,QAEX0Q,KAAM,CACJ3Q,SAAU,WACV6B,OAAQ,GAEV+J,KAAM,CACJC,WAAY,GAEdpK,KAAM,CACJlB,MAAO,OACPkL,OAAQ,QAEVmF,WAAY,CACVxQ,QAAS,MACT,UAAW,CACTE,gBAAiB,YAGrBuQ,aAAc,CACZ7Q,SAAU,WACV8Q,WAAY,UACZrF,OAAQ,EACR,WAAY,CACVzL,SAAU,WACVQ,IAAK,EACLuQ,KAAM,EACNxQ,MAAO,OACPkL,OAAQ,WC5ERlM,GAAYC,YAAW,CAC3B2O,WAAY,CACV,OAAQ,CAAExC,eAAgB,SAAUpF,OAAQ,aCDnCwN,GAAK,CAChB7C,KF8E4B,WAAO,IAAD,wEAE5B1S,EAAUC,cACVkC,EAAUpB,KACRuL,EAAeiJ,GAAfjJ,WACAqG,EAAmC4C,GAAf3C,EAAe2C,GACrCrD,EAAU5F,IACVuG,EAAM,UAAGX,EAAQzX,YAAX,aAAG,EAAcoY,OACvBC,GAAkB,UAAAZ,EAAQzX,YAAR,mBAAcsY,gBAAd,eAAwBxD,MAAM,OAAQ,GACxD5E,EAAkBgI,IAClB/H,EAAUgI,IAEVxC,EAAgBC,cAAgBpW,OAElC0b,EAAOzF,SAASE,EAAc/Q,IAAM,KAdN,EAgByBkW,KAAnDP,EAhB0B,EAgB1BA,aAAc3J,EAhBY,EAgBZA,mBAAoB4J,GAhBR,EAgBQA,aAQ1C,OANAzV,IAAMiN,WAAU,WACduI,EAAaW,GACbtK,EAAmBsK,EAAM,GACzBV,GAAaU,EAAM,KAClB,CAACA,IAC0B,OAA1B,UAAAzD,EAAQ5X,aAAR,eAAeI,SAAgBsF,EAAQrD,KAAK,QAE9C,oCACE,kBAACqN,GAAA,EAAD,CAAM9B,WAAW,UAAU+B,WAAS,EAACzE,QAAS,GAC5C,kBAACwE,GAAA,EAAD,CAAM1H,UAAWH,EAAQgQ,KAAMlZ,MAAI,EAACuU,GAAI,GAAIC,GAAI,GAC5CyE,EAAQ/H,UAWR,yBAAK7H,UAAWH,EAAQ8H,WACtB,kBAACuE,GAAA,EAAD,CACElM,UAAWH,EAAQ8P,cACnBxD,UAAU,OACVpM,QAAQ,UAdZ,yBAAKC,UAAWH,EAAQ8H,WACtB,yBAAK3H,UAAWH,EAAQ0P,gBACtB,yBACEvP,UAAWH,EAAQ6P,MACnBxR,IAAK9C,GAAY,UAACwU,EAAQzX,YAAT,aAAC,EAAckU,aAChCD,IAAI,cAcd,kBAAC1E,GAAA,EAAD,CAAM1H,UAAWH,EAAQgQ,KAAMlZ,MAAI,EAACuU,GAAI,GAAIC,GAAI,GAC9C,kBAACrL,GAAA,EAAD,CAAYC,QAAQ,KAAKyG,UAAU,MAC/BoJ,EAAQ/H,UAOR,kBAACqE,GAAA,EAAD,CAAUC,UAAU,OAAOpM,QAAQ,SAPpC,oBACI6P,EAAQzX,YADZ,aACI,EAAc0K,KADlB,aAEG,UAAA+M,EAAQzX,YAAR,eAAc2K,gBACV,IAAIH,KAAJ,UAASiN,EAAQzX,YAAjB,aAAS,EAAc2K,gBAAgBF,cACvC,MAJP,MAUH,kBAAC9C,GAAA,EAAD,CAAYC,QAAQ,KAAKyG,UAAU,OAChC,UAAAoJ,EAAQzX,YAAR,eAAcwb,eAAd,oBACI/D,EAAQzX,YADZ,aACI,EAAcwb,eAEjB,kBAACzH,GAAA,EAAD,CAAUC,UAAU,OAAOpM,QAAQ,UAGrC6P,EAAQ/H,UAgBR,kBAACqE,GAAA,EAAD,CAAUC,UAAU,OAAOpM,QAAQ,SAfnC,kBAAC2H,GAAA,EAAD,CACEvF,MAAO,CAAEhD,QAAS,OAAQyG,WAAY,UACtCjP,MAAI,EACJuU,GAAI,IAEJ,kBAACyF,GAAA,EAAD,CACEC,IAAK,GACLtV,KAAK,SACLuH,KAAK,YACLiC,MAAK,UAAE8K,EAAQzX,YAAV,aAAE,EAAc0Y,aACrBC,UAAQ,IAEV,kBAACC,GAAA,EAAD,eAAMnB,EAAQzX,YAAd,aAAM,EAAc0Y,eAKxB,kBAACnJ,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAMvF,MAAO,CAAEC,UAAW,QAAUzL,MAAI,EAACuU,GAAI,IAC3C,kBAACpL,GAAA,EAAD,CACEqC,MAAO,CAAEY,aAAc,QACvBhD,QAAQ,KACRyG,UAAU,MAHZ,gEAOEoJ,EAAQ/H,UAsDR,kBAACqE,GAAA,EAAD,CACE/J,MAAO,CAAEwI,OAAQ,SACjBwB,UAAU,OACVpM,QAAQ,SAxDV,qCACG,UAAA6P,EAAQzX,YAAR,eAAcC,SACb,kBAAC0H,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,MAAtC,kDAEGoJ,EAAQzX,YAFX,aAEG,EAAcC,SAGlB,UAAAwX,EAAQzX,YAAR,eAAc2K,iBACb,kBAAChD,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,MAAtC,iEACe,IACZ,IAAI7D,KAAJ,UACCiN,EAAQzX,YADT,aACC,EAAc2K,gBACd0J,uBAGL,UAAAoD,EAAQzX,YAAR,eAAcyb,mBACb,kBAAC9T,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,MAAtC,kIAEOyK,KAAKC,OACR,UAAAtB,EAAQzX,YAAR,eAAcyb,iBAAiB1G,QAC7B,SAACC,EAAKN,GAAN,OAAaM,EAAMN,IACnB,KAFF,UAGI+C,EAAQzX,YAHZ,aAGI,EAAcyb,iBAAiBpC,SANvC,yBAUD,UAAA5B,EAAQzX,YAAR,eAAc0b,qBACb,kBAAC/T,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,MAAtC,qDACa,eAAMoJ,EAAQzX,YAAd,aAAM,EAAc0b,sBAGlC,UAAAjE,EAAQzX,YAAR,eAAc2b,oBACb,kBAAChU,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,MAAtC,+CACY,eAAMoJ,EAAQzX,YAAd,aAAM,EAAc2b,qBAIjC,UAAAlE,EAAQzX,YAAR,eAAcoZ,UAAU,UAAA3B,EAAQzX,YAAR,eAAcoZ,OAAOC,QAAS,GACrD,kBAAC1R,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,MAAtC,4CAEGoJ,EAAQzX,YAFX,aAEG,EAAcoZ,OAAOhQ,KAAI,SAACsL,EAAIC,GAAL,OACxB,kBAAC,IAAD,CACE9M,UAAWH,EAAQiQ,WACnBpO,IAAKmL,EAAG9P,GACRmD,GAAI,UAAY2M,EAAG9P,IAElB8P,EAAGhK,KAAO,UAcvB,kBAAC/C,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,SAG1C,kBAACkB,GAAA,EAAD,CAAMvF,MAAO,CAAEC,UAAW,QAAUzL,MAAI,EAACuU,GAAI,IACzC0E,EAAQ/H,UA6BR,kBAACqE,GAAA,EAAD,CACE/J,MAAO,CAAEwI,OAAQ,QACjBwB,UAAU,OACVpM,QAAQ,SA/BV,oCACE,kBAACD,GAAA,EAAD,CACEqC,MAAO,CAAEY,aAAc,QACvBhD,QAAQ,KACRyG,UAAU,MAHZ,qDAOC,UAAAoJ,EAAQzX,YAAR,eAAcsY,WACb,6BACE,kBAAC3Q,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,MAAtC,OACGgK,QADH,IACGA,OADH,EACGA,EACGiB,MAAM,EA3KC,IA4KRnX,KAAK,OAEM,OAAfkW,QAAe,IAAfA,OAAA,EAAAA,EAAiBgB,QA9KL,GA8KuC,GAClD,kBAAC,GAAD,KACE,kBAAC1R,GAAA,EAAD,CAAYC,QAAQ,QAAQyG,UAAU,MAAtC,OACGgK,QADH,IACGA,OADH,EACGA,EACGiB,MAlLG,IAmLJnX,KAAK,WAgBxBsV,EAAQ/H,UAmCN,KAlCF,qCACS,OAAN0I,QAAM,IAANA,OAAA,EAAAA,EAAQpP,QAAQqQ,QAAS,GACxB,oCACE,kBAAC1R,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,kCAGA,kBAACkB,GAAA,EAAD,CACEC,WAAS,EACT3H,UAAWH,EAAQiP,OACnB3M,MAAO,CAAE+M,SAAU,SAAUwC,UAAW,WAH1C,OAKGnB,QALH,IAKGA,GALH,UAKGA,EAAQpP,eALX,aAKG,EAAiBI,KAAI,SAACsL,GAAD,OACpB,kBAACnF,GAAA,EAAD,CACEvF,MAAO,CAAE4I,WAAY,GACrBG,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJ3J,IAAKmL,EAAGnL,KAER,yBAAK1B,UAAWH,EAAQkQ,cACtB,4BACE4B,YAAY,IACZC,iBAAe,EACf1T,IAAG,wCAAmC2O,EAAGnL,KACzC9C,MAAOiO,EAAGhK,gBAU3B,UAAA+M,EAAQzX,YAAR,eAAc4b,SACb,oCACE,kBAACjU,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,uCACS,KAET,kBAAC,GAAD,eACGoJ,EAAQzX,YADX,aACG,EAAc4b,QAAQxS,KAAI,SAACsL,GAAD,OACzB,kBAAC,GAAD,CACEhF,UAAW+H,EAAQ/H,UACnBiE,KAAMe,EACNnL,IAAKmL,EAAG9P,IAEP,yCAKP,KAEFsL,EAAgBR,UAsBd,KArBF,oCACGQ,EAAgBlQ,KAAKmJ,cAAgB,GACpC,oCACE,kBAACxB,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,2EACe,IACb,kBAAC,IAAD,CAAMtG,GAAI,8BAAqB0P,EAAQzX,YAA7B,aAAqB,EAAc4E,KAA7C,oFAIF,kBAAC,GAAD,YACGsL,QADH,IACGA,GADH,UACGA,EAAiBlQ,YADpB,iBACG,EAAuBgJ,eAD1B,aACG,EAAgCI,KAAI,SAACsL,GAAD,OACnC,kBAAC,GAAD,CACEhF,UAAWQ,EAAgBR,UAC3BnG,IAAKmL,EAAG9P,GACR+O,KAAMe,UASlBvE,EAAQT,UAoBN,KAnBF,oCACGS,EAAQnQ,KAAKmJ,cAAgB,GAC5B,oCACE,kBAACxB,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,kFACiB,IACf,kBAAC,IAAD,CAAMtG,GAAI,sBAAa0P,EAAQzX,YAArB,aAAa,EAAc4E,KAArC,oFAEF,kBAAC,GAAD,eACGuL,EAAQnQ,YADX,iBACG,EAAcgJ,eADjB,aACG,EAAuBI,KAAI,SAACsL,GAAD,OAC1B,kBAAC,GAAD,CACEhF,UAAWS,EAAQT,UACnBnG,IAAKmL,EAAG9P,GACR+O,KAAMe,aE7W1BqD,QCN+B,WAAO,IAC9B4C,EAAiBG,KAAjBH,aACR,OACE,oCACE,kBAAChT,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,cAGA,kBAAC,GAAD,CAAM+G,QAAS0F,KAAiBzF,OAAQsF,MDA5CjB,gBERuC,WAAO,IACtC9I,EAAuBkK,KAAvBlK,mBACR,OAAO,kBAAC,GAAD,CAAMwE,QAAS0F,KAAyBzF,OAAQzE,EAAoB0E,cAAY,KFOvFwE,QDA+B,WAAO,IAAD,MAC/BpS,EAAUpB,KACVuV,EAAMf,KACNvV,EAAUC,cACVhG,EAAS+V,cACXC,EAAaZ,GAAiBpV,EAAO8I,QAAQ/F,MAAQ,EALpB,EAObwC,IAAMC,SAASyQ,SAASD,IAPX,mBAO9BjT,EAP8B,KAOxBmT,EAPwB,KAU/BsE,EADgBpE,cAAgBpW,OACPya,MACvBQ,EAAoBK,KAApBL,gBAOR1V,IAAMiN,WAAU,WACdyI,EAAgB,CAAEP,YAAaF,EAAUzX,WACxC,CAACA,EAAMyX,IAKV,OACE,oCACE,kBAAC,GAAD,eACG6B,EAAI7b,YADP,iBACG,EAAUgJ,eADb,aACG,EAAmBI,KAAI,SAACsL,GAAD,OACtB,kBAAC,GAAD,CAAQhF,UAAWmM,EAAInM,UAAWnG,IAAKmL,EAAG9P,GAAI+O,KAAMe,QAGxD,kBAACoB,GAAA,EAAD,CACEjO,UAAWH,EAAQwN,WACnBa,MAAK,OAAE8F,QAAF,IAAEA,GAAF,UAAEA,EAAK7b,YAAP,aAAE,EAAWgW,YAClBzT,KAAMA,EACNqE,MAAM,UACNzD,KAAK,QACLyJ,SAhBe,SAACzH,EAAmCwH,IATtC,SAACpK,GAClBmT,EAAQnT,GACRgD,EAAQrD,KAAR,gBAAsBK,IAQtB0T,CAAWtJ,QCtBbiN,SGTgC,WAAO,IAC/BgB,EAAkBE,KAAlBF,cACR,OACE,oCACE,kBAACjT,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,gBAGA,kBAAC,GAAD,CAAM+G,QAAS0F,KAAkBzF,OAAQuF,MHG7CkB,YIVmC,WAAO,IAClCpB,EAAqBI,KAArBJ,iBACR,OACE,oCACE,kBAAC/S,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,mBAGA,kBAAC,GAAD,CAAM+G,QAAS0F,KAAqBzF,OAAQqF,MJIhDf,QKZ+B,WAAO,IAC9Ba,EAAiBM,KAAjBN,aACR,OAAO,kBAAC,GAAD,CAAMpF,QAAS0F,KAAiBzF,OAAQmF,EAAclF,cAAY,KLWzEyG,SMZgC,WAAO,IAC/BlB,EAAkBC,KAAlBD,cACR,OACE,oCACE,kBAAClT,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,iBAGA,kBAAC,GAAD,CAAM+G,QAAS0F,KAAkBzF,OAAQwF,OCFzCvU,GAAYC,YAAW,CAC3B2O,WAAY,CACV,OAAQ,CAAExC,eAAgB,SAAUpF,OAAQ,aAGnC0O,GAAmB,WAAO,IAAD,EAC9BtU,EAAUpB,KACV2V,EAAY3T,KACZ/C,EAAUC,cACVhG,EAAS+V,cACXC,EAAaZ,GAAiBpV,EAAO8I,QAAQ/F,MAAQ,EACrDO,EAAQ8R,GAAiBpV,EAAO8I,QAAQxF,OAAS,GANjB,EAOZiC,IAAMC,SAASyQ,SAASD,IAPZ,mBAO7BjT,EAP6B,KAOvBmT,EAPuB,KAQ5BvN,EAASG,KAATH,KAEF8N,EAAa,SAAC1T,GAClBmT,EAAQnT,GACRgD,EAAQrD,KAAR,gBAAsBK,EAAtB,kBAAoCO,KAGtCiC,IAAMiN,WAAU,WAEd7J,EAAKrF,EAAOP,GAAM2Z,OAAM,SAACC,GACJ,MAAfA,EAAIlc,QAAgBgW,EAAW,QAEpC,CAACnT,EAAOP,IAKX,OACE,oCACE,wFACa,2BAAIO,GADjB,sDACqCmZ,QADrC,IACqCA,OADrC,EACqCA,EAAW9S,cADhD,kEAGU,OAAT8S,QAAS,IAATA,OAAA,EAAAA,EAAW9S,eACV,oCACE,kBAAC,GAAD,eACG8S,EAAUjT,eADb,aACG,EAAmBI,KAAI,SAACsL,GACvB,OAAQA,EAAGpK,YACT,IAAK,QACH,OAAO,kBAAC,GAAD,CAAWoF,WAAW,EAAOnG,IAAKmL,EAAG9P,GAAI+O,KAAMe,IACxD,IAAK,KACH,OAAO,kBAAC,GAAD,CAAQhF,WAAW,EAAOnG,IAAKmL,EAAG9P,GAAI+O,KAAMe,IACrD,QACE,OAAO,kBAAC,GAAD,CAAUnL,IAAKmL,EAAG9P,IAAlB,qBAIf,kBAACkR,GAAA,EAAD,CACEjO,UAAWH,EAAQwN,WACnBa,MAAK,OAAEkG,QAAF,IAAEA,OAAF,EAAEA,EAAWjG,YAClBzT,KAAMA,EACNqE,MAAM,UACNzD,KAAK,QACLyJ,SA5BW,SAACzH,EAAmCwH,GACvDsJ,EAAWtJ,OA8BL,OCxDJrG,GAAYC,YAAW,CAC3B2O,WAAY,CACV,OAAQ,CAAExC,eAAgB,SAAUpF,OAAQ,WAE9CqJ,OAAQ,CACNC,UAAW,OACXhM,aAAc,OACdiM,SAAU,UAIDuF,GAAiB,WAAO,IAAD,QAC5B1U,EAAUpB,KACV+V,EAAgB/K,KAChBgL,EAAaxB,KAEX9J,EAAqBM,KAArBN,iBACA2J,EAAiBG,KAAjBH,aAKR,OAJA5V,IAAMiN,WAAU,WACdhB,EAAiB,GACjB2J,EAAa,KACZ,IAED,oCACE,kBAAChT,GAAA,EAAD,CACEqC,MAAO,CAAEK,UAAW,UACpBzC,QAAQ,SACRyG,UAAU,MAEV,kBAAC,IAAD,CAAMtG,GAAI,WAAV,sGAEF,yBAAKF,UAAWH,EAAQiP,QACtB,kBAAC,GAAD,CAAW3M,MAAO,CAAE+M,SAAU,WAA9B,UACGsF,EAAcrc,YADjB,iBACG,EAAoBgJ,eADvB,aACG,EAA6BI,KAAI,SAACsL,GAAD,OAChC,kBAAC,GAAD,CACEhF,UAAW2M,EAAc3M,UACzBnG,IAAKmL,EAAG9P,GACR+O,KAAMe,SAKd,kBAAC/M,GAAA,EAAD,CACEqC,MAAO,CAAEK,UAAW,UACpBzC,QAAQ,SACRyG,UAAU,MAEV,kBAAC,IAAD,CAAMtG,GAAI,OAAV,4GAEF,yBAAKF,UAAWH,EAAQiP,QACtB,kBAAC,GAAD,CAAW3M,MAAO,CAAE+M,SAAU,WAA9B,UACGuF,EAAWtc,YADd,iBACG,EAAiBgJ,eADpB,aACG,EAA0BI,KAAI,SAACsL,GAAD,OAC7B,kBAAC,GAAD,CAAQhF,UAAW4M,EAAW5M,UAAWnG,IAAKmL,EAAG9P,GAAI+O,KAAMe,W,8BC4EvE,SAAS6H,GAASjX,GAAuB,IAC/BwN,EAAqCxN,EAArCwN,SAAUnG,EAA2BrH,EAA3BqH,MAAO6P,EAAoBlX,EAApBkX,MAAUC,EADG,aACOnX,EADP,8BAGtC,OACE,uCACEkE,KAAK,WACLkT,OAAQ/P,IAAU6P,EAClB5X,GAAE,0BAAqB4X,GACvBG,kBAAA,qBAA+BH,IAC3BC,GAEH9P,IAAU6P,GACT,kBAAC5D,GAAA,EAAD,CAAK5W,EAAG,GACL8Q,ICrJJ,ICAMxH,GAAU,CACrBsR,QFQ+B,WAAO,IAAD,kBACX7X,IAAMC,SAAS,GADJ,mBAC9B2H,EAD8B,KACvBkQ,EADuB,KAM/BC,EAAWxL,KACXyL,EAAWzL,KACX0L,EAAY1L,KAEZ2L,EAAOnC,KACPoC,EAAOpC,KACPqC,EAAQrC,KAOd,OANA/V,IAAMiN,WAAU,WACdgL,EAAU7L,aAAa,GACvB6L,EAAU5L,gBAAgB,GAC1B+L,EAAMhM,aAAa,GACnBgM,EAAM/L,gBAAgB,KACrB,IAED,6BACE,6BACE,kBAACgM,GAAA,EAAD,CACEzQ,MAAOA,EACPC,SArBa,SAACzH,EAA8BkY,GAClDR,EAASQ,IAqBHC,aAAW,uBAEX,kBAACC,GAAA,EAAD,CAAKrO,MAAM,WACX,kBAACqO,GAAA,EAAD,CAAKrO,MAAM,SAGf,kBAACqN,GAAD,CAAU5P,MAAOA,EAAO6P,MAAO,GAC3BM,EAASpN,UAsBP,KArBF,oCACGoN,EAAS9c,KAAKmJ,cAAgB,GAC7B,oCACE,kBAACxB,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,YACY,IACV,kBAAC,IAAD,CAAMtG,GAAI,6BAAV,+HAIF,kBAAC,GAAD,eACG+U,EAAS9c,YADZ,iBACG,EAAegJ,eADlB,aACG,EAAwBI,KAAI,SAACsL,GAAD,OAC3B,kBAAC,GAAD,CACEhF,UAAWoN,EAASpN,UACpBnG,IAAKmL,EAAG9P,GACR+O,KAAMe,UAQlBqI,EAASrN,UAsBP,KArBF,oCACGqN,EAAS/c,KAAKmJ,cAAgB,GAC7B,oCACE,kBAACxB,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,eACe,IACb,kBAAC,IAAD,CAAMtG,GAAI,gCAAV,+HAIF,kBAAC,GAAD,eACGgV,EAAS/c,YADZ,iBACG,EAAegJ,eADlB,aACG,EAAwBI,KAAI,SAACsL,GAAD,OAC3B,kBAAC,GAAD,CACEhF,UAAWqN,EAASrN,UACpBnG,IAAKmL,EAAG9P,GACR+O,KAAMe,WAStB,kBAAC6H,GAAD,CAAU5P,MAAOA,EAAO6P,MAAO,GAC3BS,EAAKvN,UAkBH,KAjBF,oCACGuN,EAAKjd,KAAKmJ,cAAgB,GACzB,oCACE,kBAACxB,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,YACY,IACV,kBAAC,IAAD,CAAMtG,GAAI,yBAAV,+HAIF,kBAAC,GAAD,eACGkV,EAAKjd,YADR,iBACG,EAAWgJ,eADd,aACG,EAAoBI,KAAI,SAACsL,GAAD,OACvB,kBAAC,GAAD,CAAQhF,UAAWuN,EAAKvN,UAAWnG,IAAKmL,EAAG9P,GAAI+O,KAAMe,UAO/DwI,EAAKxN,UAkBH,KAjBF,oCACGwN,EAAKld,KAAKmJ,cAAgB,GACzB,oCACE,kBAACxB,GAAA,EAAD,CAAYC,QAAQ,SAASyG,UAAU,MAAvC,eACe,IACb,kBAAC,IAAD,CAAMtG,GAAI,4BAAV,+HAIF,kBAAC,GAAD,eACGmV,EAAKld,YADR,iBACG,EAAWgJ,eADd,aACG,EAAoBI,KAAI,SAACsL,GAAD,OACvB,kBAAC,GAAD,CAAQhF,UAAWwN,EAAKxN,UAAWnG,IAAKmL,EAAG9P,GAAI+O,KAAMe,aEtHvEpD,OCHoB,CACpBkM,aFAoC,WAAO,IACnCpM,EAAoBE,KAApBF,gBACR,OAAO,kBAAC,GAAD,CAAMgE,QAAS9D,KAA0B+D,OAAQjE,KEDxDqM,UCDiC,WAAO,IAChCtM,EAAiBG,KAAjBH,aACR,OAAO,kBAAC,GAAD,CAAMiE,QAAS9D,KAAuB+D,OAAQlE,MFCrD2J,GGJgB,CAChB0C,aCAoC,WAAO,IACnCpM,EAAoB0J,KAApB1J,gBACR,OAAO,kBAAC,GAAD,CAAMgE,QAAS0F,KAAsBzF,OAAQjE,KDDpDqM,UEDiC,WAAO,IAChCtM,EAAiB2J,KAAjB3J,aACR,OAAO,kBAAC,GAAD,CAAMiE,QAAS0F,KAAmBzF,OAAQlE,O,oBCFtCuM,GAAgD,SAACpY,GAE5D,OADelH,KAER,kBAAC,IAAUkH,GADE,kBAAC,IAAD,CAAUyC,GAAG,YCQ7BvB,GAAQmX,aAAe,IAChBC,GAAM,WAAO,IAChBpZ,EAAeJ,KAAfI,WACAX,EAAqBzF,KAArByF,iBACRmO,qBAAU,YACa,uCAAG,sBAAAhR,EAAA,+EAEa1C,EAAkB,WAAWoB,WAF1C,kDAKZ8E,IALY,uBAMZX,GAAiB,GANL,mHAAH,qDAUrBga,KACC,IAfoB,IAgBfxC,EAAa9F,cAAb8F,SAMR,OAJArJ,qBAAU,WACRvT,OAAOqf,SAAS,EAAG,KAClB,CAACzC,IAGF,kBAAC0C,GAAA,EAAD,CAAevX,MAAOA,IACpB,6BACE,kBAAC,GAAD,MACA,kBAACwX,EAAA,EAAD,CAAWzQ,SAAS,MAClB,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAc0Q,OAAK,EAAC/a,KAAK,YAAYmL,UAAW/C,GAAQsR,UACxD,kBAAC,GAAD,CAAcqB,OAAK,EAAC/a,KAAK,wBAAwBmL,UAAW/C,GAAQwP,GAAG2C,YACvE,kBAAC,GAAD,CAAcQ,OAAK,EAAC/a,KAAK,2BAA2BmL,UAAW/C,GAAQwP,GAAG0C,eAC1E,kBAAC,GAAD,CAAcS,OAAK,EAAC/a,KAAK,4BAA4BmL,UAAW/C,GAAQgG,OAAOmM,YAC/E,kBAAC,GAAD,CAAcQ,OAAK,EAAC/a,KAAK,+BAA+BmL,UAAW/C,GAAQgG,OAAOkM,eAElF,kBAAC,IAAD,CAAOS,OAAK,EAAC/a,KAAK,IAAImL,UAAW+N,KACjC,kBAAC,IAAD,CAAOlZ,KAAK,SAASmL,UAAWP,KAEhC,kBAAC,IAAD,CAAOmQ,OAAK,EAAC/a,KAAK,WAAWmL,UAAWiD,GAAOyG,UAC/C,kBAAC,IAAD,CAAOkG,OAAK,EAAC/a,KAAK,sBAAsBmL,UAAWiD,GAAO0G,aAC1D,kBAAC,IAAD,CAAOiG,OAAK,EAAC/a,KAAK,oBAAoBmL,UAAWiD,GAAOsI,WACxD,kBAAC,IAAD,CAAOqE,OAAK,EAAC/a,KAAK,mBAAmBmL,UAAWiD,GAAOuI,WACvD,kBAAC,IAAD,CAAOoE,OAAK,EAAC/a,KAAK,wBAAwBmL,UAAWiD,GAAOwI,UAC5D,kBAAC,IAAD,CAAOmE,OAAK,EAAC/a,KAAK,cAAcmL,UAAWiD,GAAO2G,OAClD,kBAAC,IAAD,CAAOgG,OAAK,EAAC/a,KAAK,8BAA8BmL,UAAWiD,GAAOoI,kBAClE,kBAAC,IAAD,CAAOuE,OAAK,EAAC/a,KAAK,sBAAsBmL,UAAWiD,GAAOqI,UAE1D,kBAAC,IAAD,CAAOsE,OAAK,EAAC/a,KAAK,OAAOmL,UAAWyM,GAAG/C,UACvC,kBAAC,IAAD,CAAOkG,OAAK,EAAC/a,KAAK,gBAAgBmL,UAAWyM,GAAGlB,WAChD,kBAAC,IAAD,CAAOqE,OAAK,EAAC/a,KAAK,iBAAiBmL,UAAWyM,GAAGiB,WACjD,kBAAC,IAAD,CAAOkC,OAAK,EAAC/a,KAAK,mBAAmBmL,UAAWyM,GAAGgB,cACnD,kBAAC,IAAD,CAAOmC,OAAK,EAAC/a,KAAK,oBAAoBmL,UAAWyM,GAAGhB,UACpD,kBAAC,IAAD,CAAOmE,OAAK,EAAC/a,KAAK,0BAA0BmL,UAAWyM,GAAGpB,kBAC1D,kBAAC,IAAD,CAAOuE,OAAK,EAAC/a,KAAK,kBAAkBmL,UAAWyM,GAAGnB,UAClD,kBAAC,IAAD,CAAOsE,OAAK,EAAC/a,KAAK,UAAUmL,UAAWyM,GAAG7C,OAE1C,kBAAC,IAAD,CAAOgG,OAAK,EAAC/a,KAAK,UAAUmL,UAAW2N,KAEvC,kBAAC,IAAD,CAAOvN,OAAQ,kBAAM,qD,UC1D7ByP,GAAcnO,aAAgB,CAChC3R,KnFGyB,WAGN,IAFnBD,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,4BACH,OAAO,eAAKrF,EAAZ,CAAmBE,OAAQ4R,EAAOxM,QAAQpF,SAC5C,IAAK,gCACH,OAAO,eACFF,EADL,CAEEkF,eAAgB,CACdC,GAAI2M,EAAOxM,QAAQH,GACnB1D,SAAUqQ,EAAOxM,QAAQ7D,YAG/B,QACE,OAAOzB,ImFlBXiG,Q/EA4B,WAGT,IAFnBjG,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,mCACH,OAAO,eAAKrF,EAAZ,CAAmBkG,YAAa4L,EAAOxM,QAAQc,OACjD,QACE,OAAOpG,I+EPXmT,OAAQxB,GACRgL,GAAIX,GACJ7R,O1EJ2B,WAGR,IAFnBnK,EAEkB,uDAFViF,GACR6M,EACkB,uCAClB,OAAQA,EAAOzM,MACb,IAAK,yBACH,OAAO,eAAKrF,EAAZ,CAAmB6J,aAAciI,EAAOxM,QAAQyE,SAClD,QACE,OAAO/J,M0EcPggB,GAAmB1f,OAAO2f,sCAAwCC,KAE3DC,GAAQC,aACnBL,GACAC,GAAiBK,aAAgBC,Q,OCjCnCC,IAASjQ,OACP,kBAAC,IAAMkQ,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,GAAD,SAINM,SAASC,eAAe,W","file":"static/js/main.2ba7df03.chunk.js","sourcesContent":["import { AppStateType } from '@src/store';\r\n\r\nexport const getAuthStatus = (state: AppStateType) => state.auth.isAuth;\r\nexport const getResponseStatus = (state: AppStateType) =>\r\n  state.auth.responseStatus;\r\n","export const localStorage = {\r\n  save: (storeName, item = {}) => {\r\n    window.localStorage.setItem(storeName, JSON.stringify(item));\r\n  },\r\n  load: (storeName) => {\r\n    return JSON.parse(window.localStorage.getItem(storeName)) || {};\r\n  },\r\n  remove: (storeName) => {\r\n    window.localStorage.removeItem(storeName);\r\n  },\r\n};\r\n","import axios from 'axios'\r\nimport { localStorage } from '@src/lib/local-storage'\r\n\r\nexport const http = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3/',\r\n})\r\n\r\nhttp.interceptors.request.use((config) => {\r\n  config.params = config.params || {}\r\n  config.params['api_key'] = process.env.REACT_APP_API_KEY\r\n\r\n  const session_id = localStorage.load('session').session_id || ''\r\n  config.params['session_id'] = encodeURIComponent(session_id)\r\n\r\n  config.params['language'] = encodeURIComponent('en-US')\r\n  return config\r\n})\r\n\r\nhttp.interceptors.response.use(\r\n  function (response) {\r\n    return response\r\n  },\r\n  function (error) {\r\n    return Promise.reject({\r\n      response: {\r\n        data: error.response.data,\r\n        status: error.response.status,\r\n      },\r\n    })\r\n  }\r\n)\r\n","import { http } from './http-client.js';\r\nimport { localStorage } from '@src/lib/local-storage';\r\n\r\ntype TCGSSuccess = {\r\n  success: boolean;\r\n  guest_session_id: string;\r\n  expires_at: string;\r\n};\r\nconst _createGuestSession = () =>\r\n  http.get<TCGSSuccess>('/authentication/guest_session/new').then((res) => res);\r\n\r\ntype TCRTSuccess = {\r\n  success: boolean;\r\n  expires_at: string;\r\n  request_token: string;\r\n};\r\n\r\nconst _createRequestToken = () =>\r\n  http.get<TCRTSuccess>('/authentication/token/new').then((res) => res);\r\n\r\nconst _createSessionWithLogin = (\r\n  username: string,\r\n  password: string,\r\n  request_token: string\r\n) =>\r\n  http\r\n    .post<TCRTSuccess>('/authentication/token/validate_with_login', {\r\n      username,\r\n      password,\r\n      request_token,\r\n    })\r\n    .then((res) => res.data);\r\n\r\ntype TCSSuccess = {\r\n  type: 'success';\r\n  success: boolean;\r\n  session_id: string;\r\n};\r\n\r\nconst _createSession = (request_token: string) =>\r\n  http\r\n    .post<TCSSuccess>('/authentication/session/new', {\r\n      request_token,\r\n    })\r\n    .then((res) => res.data);\r\n\r\ntype TDSSuccess = {\r\n  success: boolean;\r\n};\r\n\r\nconst _deleteSession = (session_id: string) =>\r\n  http\r\n    .delete<TDSSuccess>('/authentication/session', { data: { session_id } })\r\n    .then((res) => res.data);\r\n\r\nconst _getAuthLink = (token: string) =>\r\n  `https://www.themoviedb.org/authenticate/${token}`;\r\n\r\nconst _saveSessionToLocalStorage = (\r\n  session_id: string,\r\n  request_token: string,\r\n  expires_at: string\r\n): void =>\r\n  localStorage.save('session', {\r\n    session_id,\r\n    token: { request_token, expires_at },\r\n  });\r\n\r\nconst signIn = async (username: string, password: string) => {\r\n  try {\r\n    const tokenResponse = await _createRequestToken();\r\n    const approvedTokenResponse = await _createSessionWithLogin(\r\n      username,\r\n      password,\r\n      tokenResponse.data.request_token\r\n    );\r\n\r\n    const sessionResponse = await _createSession(\r\n      approvedTokenResponse.request_token\r\n    );\r\n\r\n    _saveSessionToLocalStorage(\r\n      sessionResponse.session_id,\r\n      approvedTokenResponse.request_token,\r\n      approvedTokenResponse.expires_at\r\n    );\r\n    return sessionResponse;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst signUp = async () => {\r\n  const tokenResponse = await _createRequestToken();\r\n  const win = window.open(\r\n    _getAuthLink(tokenResponse.data.request_token),\r\n    '_blank',\r\n    'height=600,width=600'\r\n  );\r\n  while (true) {\r\n    await new Promise((resolve) => setTimeout(resolve, 500));\r\n\r\n    if (win!.closed) {\r\n      const sessionResponse = await _createSession(\r\n        tokenResponse.data.request_token\r\n      );\r\n      _saveSessionToLocalStorage(\r\n        sessionResponse.session_id,\r\n        tokenResponse.data.request_token,\r\n        tokenResponse.data.expires_at\r\n      );\r\n      return sessionResponse;\r\n    }\r\n  }\r\n};\r\nconst signOut = async () => {\r\n  try {\r\n    _deleteSession(localStorage.load('session').session_id);\r\n  } finally {\r\n    localStorage.remove('session');\r\n  }\r\n};\r\nexport const authApi = {\r\n  signIn,\r\n  signUp,\r\n  signOut,\r\n};\r\n","export const createQueryString = function (obj: any) {\r\n  let str: Array<string> = []\r\n  for (let p in obj)\r\n    if (obj.hasOwnProperty(p) && obj[p]) {\r\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]))\r\n    }\r\n  return str.join('&')\r\n}\r\n","import { http } from './http-client.js'\r\nimport {\r\n  TUserProfile,\r\n  TWatchList,\r\n  TFavorite,\r\n} from '@src/store/modules/account/types'\r\nimport { TResponseError } from './types.js'\r\nimport { TPopularMovies } from '@src/store/modules/movies/types.js'\r\nimport { TPopularTV } from '@src/store/modules/tv/types.js'\r\nimport { createQueryString } from '@src/lib/create_query_string'\r\n\r\nconst getDetails = () =>\r\n  http.get<TUserProfile>('/account').then((res) => res.data)\r\n\r\nconst addToWatchList = (account_id: number, body: TWatchList) =>\r\n  http\r\n    .post<TResponseError>(`/account/${account_id}/watchlist`, { ...body })\r\n    .then((res) => res.data)\r\n\r\nconst markAsFavorite = (account_id: number, body: TFavorite) =>\r\n  http\r\n    .post<TResponseError>(`/account/${account_id}/favorite`, { ...body })\r\n    .then((res) => res.data)\r\n\r\nconst getMovieWatchList = (account_id: number, page?: number) =>\r\n  http\r\n    .get<TPopularMovies>(\r\n      `/account/${account_id}/watchlist/movies?${createQueryString({\r\n        page,\r\n      })}`\r\n    )\r\n    .then((res) => res.data)\r\nconst getMovieFavoriteList = (account_id: number, page?: number) =>\r\n  http\r\n    .get<TPopularMovies>(\r\n      `/account/${account_id}/favorite/movies?${createQueryString({\r\n        page,\r\n      })}`\r\n    )\r\n    .then((res) => res.data)\r\n\r\nconst getTVWatchList = (account_id: number, page?: number) =>\r\n  http\r\n    .get<TPopularTV>(\r\n      `/account/${account_id}/watchlist/tv?${createQueryString({\r\n        page,\r\n      })}`\r\n    )\r\n    .then((res) => res.data)\r\nconst getTVFavoriteList = (account_id: number, page?: number) =>\r\n  http\r\n    .get<TPopularTV>(\r\n      `/account/${account_id}/favorite/tv?${createQueryString({\r\n        page,\r\n      })}`\r\n    )\r\n    .then((res) => res.data)\r\nexport const accountApi = {\r\n  getDetails,\r\n  addToWatchList,\r\n  markAsFavorite,\r\n  getMovieWatchList,\r\n  getTVWatchList,\r\n  getTVFavoriteList,\r\n  getMovieFavoriteList,\r\n}\r\n","import { http } from './http-client.js'\r\nimport {\r\n  TMovieDetails,\r\n  TPopularMovies,\r\n  TNowPlayingMovies,\r\n  TTopRatedMovies,\r\n  TUpcomingMovies,\r\n  TSimilarMovies,\r\n  TRecommendations,\r\n  TVideo,\r\n  TMovieExternalIds,\r\n  TDiscoveredMovies,\r\n  TDiscoverMovie,\r\n} from '@src/store/modules/movies/types'\r\nimport { createQueryString } from '@src/lib/create_query_string'\r\nimport { TAccountStates } from '@src/store/modules/account/types.js'\r\n\r\nconst getDetails = (movie_id: number, append_to_response: string) =>\r\n  http\r\n    .get<TMovieDetails>(\r\n      `/movie/${movie_id}?${createQueryString({ append_to_response })}`\r\n    )\r\n    .then((res) => res.data)\r\n\r\nconst getPopular = (page?: number, region?: string) =>\r\n  http\r\n    .get<TPopularMovies>(\r\n      `/movie/popular?${createQueryString({ page, region })}`\r\n    )\r\n    .then((res) => res.data)\r\n\r\nconst getNowPlaying = (page?: number, region?: string) =>\r\n  http\r\n    .get<TNowPlayingMovies>(\r\n      `/movie/now_playing?${createQueryString({ page, region })}`\r\n    )\r\n    .then((res) => res.data)\r\n\r\nconst getTopRated = (page?: number, region?: string) =>\r\n  http\r\n    .get<TTopRatedMovies>(\r\n      `/movie/top_rated?${createQueryString({ page, region })}`\r\n    )\r\n    .then((res) => res.data)\r\n\r\nconst getUpcoming = (page?: number) =>\r\n  http\r\n    .get<TUpcomingMovies>(`/movie/upcoming?${createQueryString({ page })}`)\r\n    .then((res) => res.data)\r\n\r\nconst getSimilar = (movie_id: number, page?: number) =>\r\n  http\r\n    .get<TSimilarMovies>(\r\n      `/movie/${movie_id}/similar?${createQueryString({ page })}`\r\n    )\r\n    .then((res) => res.data)\r\n\r\nconst getRecommendations = (movie_id: number, page?: number) =>\r\n  http\r\n    .get<TRecommendations>(\r\n      `/movie/${movie_id}/recommendations?${createQueryString({\r\n        page,\r\n      })}`\r\n    )\r\n    .then((res) => res.data)\r\nconst getVideos = (movie_id: number) =>\r\n  http.get<TVideo>(`/movie/${movie_id}/videos?`).then((res) => res.data)\r\n\r\nconst getExternalIds = (movie_id: number) =>\r\n  http\r\n    .get<TMovieExternalIds>(`/movie/${movie_id}/external_ids?`)\r\n    .then((res) => res.data)\r\n\r\nconst getDiscovered = (args: TDiscoverMovie) =>\r\n  http\r\n    .get<TDiscoveredMovies>(\r\n      `/discover/movie?${createQueryString({\r\n        ...args,\r\n      })}`\r\n    )\r\n    .then((res) => res.data)\r\nconst getAccountStates = (movie_id: number) =>\r\n  http\r\n    .get<TAccountStates>(`/movie/${movie_id}/account_states`)\r\n    .then((res) => res.data)\r\n\r\nexport const moviesApi = {\r\n  getDetails,\r\n  getPopular,\r\n  getNowPlaying,\r\n  getTopRated,\r\n  getUpcoming,\r\n  getSimilar,\r\n  getRecommendations,\r\n  getVideos,\r\n  getExternalIds,\r\n  getDiscovered,\r\n  getAccountStates,\r\n}\r\n","import { http } from './http-client'\r\nimport { TSearchResult } from '@src/store/modules/search/types'\r\nimport { createQueryString } from '@src/lib/create_query_string'\r\n\r\nconst search = (query: string, page?: number) =>\r\n  http\r\n    .get<TSearchResult>(\r\n      `search/multi?${createQueryString({\r\n        page,\r\n        query,\r\n      })}`\r\n    )\r\n    .then((res) => res.data)\r\nexport const searchApi = {\r\n  search,\r\n}\r\n","import { http } from './http-client.js'\r\nimport {\r\n  TTVDetails,\r\n  TPopularTV,\r\n  TTopRatedTV,\r\n  TOnTheAirTV,\r\n  TAiringTodayTV,\r\n  TRecommendations,\r\n  TSimilarTV,\r\n  TTVExternalIds,\r\n  TVideo,\r\n  TDiscoveredTV,\r\n  TDiscoverTV,\r\n} from '@src/store/modules/tv/types'\r\nimport { createQueryString } from '@src/lib/create_query_string'\r\nimport { TAccountStates } from '@src/store/modules/account/types.js'\r\n\r\nconst getDetails = (tv_id: number, append_to_response: string) =>\r\n  http\r\n    .get<TTVDetails>(\r\n      `/tv/${tv_id}?${createQueryString({ append_to_response })}`\r\n    )\r\n    .then((res) => res.data)\r\nconst getPopular = (page?: number) =>\r\n  http\r\n    .get<TPopularTV>(`/tv/popular?${createQueryString({ page })}`)\r\n    .then((res) => res.data)\r\nconst getTopRated = (page?: number) =>\r\n  http\r\n    .get<TTopRatedTV>(`/tv/top_rated?${createQueryString({ page })}`)\r\n    .then((res) => res.data)\r\nconst getOnTheAir = (page?: number) =>\r\n  http\r\n    .get<TOnTheAirTV>(`/tv/on_the_air?${createQueryString({ page })}`)\r\n    .then((res) => res.data)\r\nconst getAiringToday = (page?: number) =>\r\n  http\r\n    .get<TAiringTodayTV>(`/tv/airing_today?${createQueryString({ page })}`)\r\n    .then((res) => res.data)\r\nconst getSimilar = (tv_id: number, page?: number) =>\r\n  http\r\n    .get<TSimilarTV>(`/tv/${tv_id}/similar?${createQueryString({ page })}`)\r\n    .then((res) => res.data)\r\n\r\nconst getRecommendations = (tv_id: number, page?: number) =>\r\n  http\r\n    .get<TRecommendations>(\r\n      `/tv/${tv_id}/recommendations?${createQueryString({\r\n        page,\r\n      })}`\r\n    )\r\n    .then((res) => res.data)\r\nconst getVideos = (movie_id: number) =>\r\n  http.get<TVideo>(`/tv/${movie_id}/videos?`).then((res) => res.data)\r\n\r\nconst getExternalIds = (movie_id: number) =>\r\n  http\r\n    .get<TTVExternalIds>(`/tv/${movie_id}/external_ids?`)\r\n    .then((res) => res.data)\r\n\r\nconst getDiscovered = (args: TDiscoverTV) =>\r\n  http\r\n    .get<TDiscoveredTV>(\r\n      `/discover/tv?${createQueryString({\r\n        ...args,\r\n      })}`\r\n    )\r\n    .then((res) => res.data)\r\nconst getAccountStates = (tv_id: number) =>\r\n  http\r\n    .get<TAccountStates>(`/tv/${tv_id}/account_states`)\r\n    .then((res) => res.data)\r\n\r\nexport const tvApi = {\r\n  getDetails,\r\n  getPopular,\r\n  getTopRated,\r\n  getOnTheAir,\r\n  getAiringToday,\r\n  getSimilar,\r\n  getVideos,\r\n  getRecommendations,\r\n  getExternalIds,\r\n  getDiscovered,\r\n  getAccountStates,\r\n}\r\n","export { authApi } from './auth'\r\nexport { accountApi } from './account'\r\nexport { moviesApi } from './movies'\r\nexport { searchApi } from './search'\r\nexport { tvApi } from './tv'\r\n//@ts-ignore\r\nexport const getImageLink = (path, size = 'w500') =>\r\n  `https://image.tmdb.org/t/p/${size}/${path}`\r\n","import { InferActionsTypes, BaseThunkType } from '../..';\r\nimport { authApi } from '@src/api';\r\nimport { Dispatch } from 'redux';\r\nimport { AxiosResponse } from 'axios';\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof localActions>;\r\ntype ThunkType = BaseThunkType<ActionsTypes>;\r\ntype TInitialState = typeof initialState;\r\n\r\ntype TResponseStatus = {\r\n  ok: boolean;\r\n  response: AxiosResponse | null;\r\n};\r\nlet initialState = {\r\n  isAuth: false,\r\n  responseStatus: { ok: false, response: {} } as TResponseStatus,\r\n};\r\n\r\nexport const authReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/auth/SET_AUTH_STATUS':\r\n      return { ...state, isAuth: action.payload.isAuth };\r\n    case 'tmdb/auth/SET_RESPONSE_STATUS':\r\n      return {\r\n        ...state,\r\n        responseStatus: {\r\n          ok: action.payload.ok,\r\n          response: action.payload.response,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst localActions = {\r\n  setAuthStatus: (isAuth: boolean) =>\r\n    ({ type: 'tmdb/auth/SET_AUTH_STATUS', payload: { isAuth } } as const),\r\n  setResponseStatus: ({ ok, response }: TResponseStatus) =>\r\n    ({\r\n      type: 'tmdb/auth/SET_RESPONSE_STATUS',\r\n      payload: { ok, response },\r\n    } as const),\r\n};\r\nconst updateAuthStatus = (isAuth: boolean): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  dispatch(localActions.setAuthStatus(isAuth));\r\n};\r\nconst signIn = (username: string, password: string): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    await authApi.signIn(username, password);\r\n\r\n    dispatch(localActions.setAuthStatus(true));\r\n    dispatch(localActions.setResponseStatus({ ok: true, response: null }));\r\n  } catch (error) {\r\n    dispatch(\r\n      localActions.setResponseStatus({ ok: false, response: error.response })\r\n    );\r\n    throw error.message;\r\n  }\r\n};\r\n\r\nconst signUp = (): ThunkType => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  try {\r\n    await authApi.signUp();\r\n\r\n    dispatch(localActions.setAuthStatus(true));\r\n    dispatch(localActions.setResponseStatus({ ok: true, response: null }));\r\n  } catch (error) {\r\n    dispatch(\r\n      localActions.setResponseStatus({ ok: false, response: error.response })\r\n    );\r\n    throw error.message;\r\n  }\r\n};\r\nconst signOut = (): ThunkType => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  try {\r\n    authApi.signOut();\r\n    dispatch(localActions.setAuthStatus(false));\r\n    dispatch(localActions.setResponseStatus({ ok: true, response: null }));\r\n  } catch (error) {\r\n    dispatch(\r\n      localActions.setResponseStatus({ ok: false, response: error.response })\r\n    );\r\n    throw error.message;\r\n  }\r\n};\r\n\r\nexport const actions = {\r\n  signUp,\r\n  signOut,\r\n  signIn,\r\n  updateAuthStatus,\r\n};\r\n","import { bindActionCreators } from 'redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useMemo } from 'react'\r\n\r\nexport const useActions = (actions) => {\r\n  const dispatch = useDispatch()\r\n  return useMemo(() => {\r\n    return bindActionCreators(actions, dispatch)\r\n  }, [dispatch])\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { getResponseStatus, getAuthStatus } from './selectors';\r\n\r\nimport { actions, authReducer } from './reducer';\r\nimport { useActions } from '@src/hooks/useActions';\r\n\r\nexport { authReducer };\r\n\r\nexport const auth = {\r\n  useStatus: () => useSelector(getAuthStatus),\r\n  useResponseStatus: () => useSelector(getResponseStatus),\r\n  useActions: (): typeof actions => useActions(actions),\r\n};\r\n","import { AppStateType } from '@src/store';\r\n\r\nexport const getProfileDetails = (state: AppStateType) =>\r\n  state.account.profileData;\r\n","import { InferActionsTypes, BaseThunkType } from '../..'\r\nimport { accountApi } from '@src/api'\r\nimport { Dispatch } from 'redux'\r\nimport {\r\n  TUserProfile,\r\n  TWatchList,\r\n  TFavorite,\r\n} from '@src/store/modules/account/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof localActions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  profileData: {} as TUserProfile | null,\r\n}\r\nexport const accountReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/account/SET_PROFILE_DETAILS':\r\n      return { ...state, profileData: action.payload.user }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nconst localActions = {\r\n  setProfileDetails: (user: typeof initialState.profileData) =>\r\n    ({\r\n      type: 'tmdb/account/SET_PROFILE_DETAILS',\r\n      payload: { user },\r\n    } as const),\r\n}\r\n\r\nconst getProfile = (): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(localActions.setProfileDetails(await accountApi.getDetails()))\r\n  } catch (error) {\r\n    throw error.response\r\n  }\r\n}\r\n\r\nconst dropProfile = (): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(localActions.setProfileDetails(null))\r\n  } catch (error) {\r\n    throw error.response\r\n  }\r\n}\r\n\r\nconst addToWatchList = (body: TWatchList): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>,\r\n  getState\r\n) => {\r\n  try {\r\n    await accountApi.addToWatchList(getState().account.profileData!.id, body)\r\n  } catch (error) {\r\n    throw error.response\r\n  }\r\n}\r\nconst addToFavoriteList = (body: TFavorite): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>,\r\n  getState\r\n) => {\r\n  try {\r\n    await accountApi.markAsFavorite(getState().account.profileData!.id, body)\r\n  } catch (error) {\r\n    throw error.response\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  getProfile,\r\n  dropProfile,\r\n  addToWatchList,\r\n  addToFavoriteList,\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { getProfileDetails } from './selectors';\r\n\r\nimport { actions, accountReducer } from './reducer';\r\nimport { useActions } from '@src/hooks/useActions';\r\n\r\nexport { accountReducer };\r\n\r\nexport const account = {\r\n  useProfileDetails: () => useSelector(getProfileDetails),\r\n  useActions: (): typeof actions => useActions(actions),\r\n};\r\n","import React from 'react'\r\n\r\nexport const useMenu = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\r\n\r\n  const open = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  const close = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  return [anchorEl, open, close] as const\r\n}\r\n","import React from 'react'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport { auth } from '@src/store/modules/auth'\r\nimport { account } from '@src/store/modules/account'\r\nimport { useMenu } from '@src/hooks/useMenu'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const FadeMenu = (props: { avatarLink: string | undefined }) => {\r\n  const { signOut } = auth.useActions()\r\n  const { dropProfile } = account.useActions()\r\n\r\n  const history = useHistory()\r\n  const [anchorEl, open, close] = useMenu()\r\n\r\n  const onSignOutClick = async () => {\r\n    try {\r\n      await signOut()\r\n      await dropProfile()\r\n    } catch (err) {}\r\n  }\r\n  const onProfileClick = () => {\r\n    close()\r\n    history.push(\"/profile/\")\r\n  }\r\n  return (\r\n    <div>\r\n      <Avatar\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={open}\r\n        src={props.avatarLink}\r\n      />\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={close}\r\n      >\r\n        <MenuItem onClick={onProfileClick}>Profile</MenuItem>\r\n        <MenuItem onClick={onSignOutClick}>Logout</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Typography, Button, Theme } from '@material-ui/core'\r\nimport { NavLink, Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    color: 'white',\r\n    textDecoration: 'none',\r\n  },\r\n  navWrapper: {\r\n    position: 'relative',\r\n    '&:hover div': {\r\n      display: 'block',\r\n    },\r\n    '& ul': {\r\n      listStyle: 'none',\r\n      '& li': {\r\n        cursor: 'pointer',\r\n        padding: '7px 0px',\r\n        '& a': {\r\n          color: 'black',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  navContent: {\r\n    display: 'none',\r\n    position: 'absolute',\r\n    backgroundColor: 'aliceblue;',\r\n    width: '140%',\r\n    top: '85%',\r\n    borderRadius: '4px',\r\n  },\r\n}))\r\n\r\nexport const NavItems: React.FC = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Typography variant=\"h6\" className={classes.title}>\r\n      <Button color=\"inherit\">\r\n        <NavLink className={classes.link} to=\"/\">\r\n          Home\r\n        </NavLink>\r\n      </Button>\r\n\r\n      <Button className={classes.navWrapper} color=\"inherit\">\r\n        <div className={classes.link}>Movies</div>\r\n        <div className={classes.navContent}>\r\n          <ul>\r\n            <li>\r\n              <Link to={'/movies/'}>Popular</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={'/movies/now-playing'}>Now playing</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={'/movies/top-rated'}>Top rated</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={'/movies/upcoming'}>Upcoming</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </Button>\r\n      <Button className={classes.navWrapper} color=\"inherit\">\r\n        <div className={classes.link}>TV Series</div>\r\n        <div className={classes.navContent}>\r\n          <ul>\r\n            <li>\r\n              <Link to={'/tv/'}>Popular</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={'/tv/airing-today'}>Airing today</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={'/tv/top-rated'}>Top rated</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={'/tv/on-the-air'}>On the air</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </Button>\r\n    </Typography>\r\n  )\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { searchApi } from '@src/api'\r\n\r\nimport { TSearchResult } from './types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof localActions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  searchResult: {} as TSearchResult | null,\r\n}\r\n\r\nexport const searchReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/search/SET_RESULT':\r\n      return { ...state, searchResult: action.payload.result }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst localActions = {\r\n  setResult: (result: TSearchResult | null) =>\r\n    ({\r\n      type: 'tmdb/search/SET_RESULT',\r\n      payload: { result },\r\n    } as const),\r\n}\r\n\r\nconst find = (\r\n  query: string,\r\n  page?: number,\r\n  inSearchInputMode?: boolean\r\n): ThunkType => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  try {\r\n    if (!inSearchInputMode) dispatch(localActions.setResult(null))\r\n    dispatch(localActions.setResult(await searchApi.search(query, page)))\r\n  } catch (error) {\r\n    throw error.response\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  find,\r\n}\r\n","import { AppStateType } from '@src/store'\r\n\r\nexport const getSearchResult = (state: AppStateType) => state.search.searchResult\r\n","import { useSelector } from 'react-redux'\r\nimport { searchReducer, actions } from './reducer'\r\nimport { getSearchResult } from './selectors'\r\nimport { useActions } from '@src/hooks/useActions'\r\n\r\nexport { searchReducer }\r\n\r\nexport const search = {\r\n  useResult: () => useSelector(getSearchResult),\r\n  useActions: (): typeof actions => useActions(actions),\r\n}\r\n","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { TSearchResult, TMultiSearch } from '@src/store/modules/search/types'\r\nimport { ListItemIcon, Typography } from '@material-ui/core'\r\nimport TvIcon from '@material-ui/icons/Tv'\r\nimport MovieIcon from '@material-ui/icons/Movie'\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: 0,\r\n      position: 'absolute',\r\n      width: '100%',\r\n      backgroundColor: theme.palette.background.paper,\r\n      zIndex: theme.zIndex.drawer + 3,\r\n    },\r\n  })\r\n)\r\ntype T = {\r\n  isOpened: boolean\r\n  results: TSearchResult | null\r\n  onRedirect: () => void\r\n}\r\nexport const SearchResultsList: React.FC<T> = ({\r\n  isOpened,\r\n  results,\r\n  onRedirect,\r\n}) => {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  return (\r\n    <>\r\n      {isOpened && (\r\n        <List className={classes.root}>\r\n          {results?.total_results ? (\r\n            results?.results?.map((media) => {\r\n              return (\r\n                <ListItem\r\n                  key={media.id}\r\n                  role={undefined}\r\n                  dense\r\n                  button\r\n                  onClick={() => {\r\n                    onRedirect()\r\n                    history.push(getUrl(media))\r\n                  }}\r\n                >\r\n                  <ListItemIcon>{getIcon(media)}</ListItemIcon>\r\n                  <ListItemText\r\n                    style={{ marginTop: 0 }}\r\n                    primary={`${getTitle(media)}`}\r\n                  />\r\n                  <ListItemSecondaryAction></ListItemSecondaryAction>\r\n                </ListItem>\r\n              )\r\n            })\r\n          ) : (\r\n            <Typography style={{ textAlign: 'center' }} variant=\"h5\">\r\n              НЕТ РЕЗУЛЬТАТОВ\r\n            </Typography>\r\n          )}\r\n        </List>\r\n      )}\r\n    </>\r\n  )\r\n}\r\nconst getTitle = (media: TMultiSearch) => {\r\n  switch (media.media_type) {\r\n    case 'movie':\r\n      return `${media.title} (Movie) ${\r\n        media.release_date ? new Date(media.release_date).getFullYear() : ''\r\n      }`\r\n    case 'tv':\r\n      return `${media.name} (TV) ${\r\n        media.first_air_date ? new Date(media.first_air_date).getFullYear() : ''\r\n      }`\r\n    default:\r\n      return 'NOT STATED (Persona)'\r\n  }\r\n}\r\nconst getIcon = (media: TMultiSearch) => {\r\n  switch (media.media_type) {\r\n    case 'movie':\r\n      return <MovieIcon />\r\n    case 'tv':\r\n      return <TvIcon />\r\n    default:\r\n      return <PersonIcon />\r\n  }\r\n}\r\n\r\nconst getUrl = (media: TMultiSearch) => {\r\n  switch (media.media_type) {\r\n    case 'movie':\r\n      return '/movies/' + media.id\r\n    case 'tv':\r\n      return '/tv/' + media.id\r\n    default:\r\n      return ''\r\n  }\r\n}\r\n","import React, { ReactEventHandler } from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport { NavLink, Link, useHistory } from 'react-router-dom'\r\nimport { FadeMenu } from './components/menu'\r\nimport { auth } from '@src/store/modules/auth'\r\nimport { account } from '@src/store/modules/account'\r\nimport { Backdrop, IconButton, InputBase } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport { NavItems } from './components/nav-items'\r\nimport { search } from '@src/store/modules/search'\r\nimport { SearchResultsList } from './components/search-results-list'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: '25px',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  link: {\r\n    color: 'white',\r\n    textDecoration: 'none',\r\n  },\r\n  cursorPointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n    zIndex: theme.zIndex.drawer + 2,\r\n  },\r\n  searchForm: {\r\n    transition: 'width 0.2s',\r\n    width: 0,\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n    '&.focused': {\r\n      width: '40%',\r\n    },\r\n    '& > div': {\r\n      width: '100%',\r\n    },\r\n  },\r\n}))\r\n\r\nexport const Header: React.ComponentType = () => {\r\n  const classes = useStyles()\r\n  const isAuth = auth.useStatus()\r\n  const profile = account.useProfileDetails()\r\n  const history = useHistory()\r\n\r\n  const searchInput = React.useRef<HTMLElement>(null)\r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  const [searchValue, setSearchValue] = React.useState('')\r\n\r\n  const handleToolBarClick = (event: any) => {\r\n    if (event.target.dataset.target !== 'search') closeSearchInput()\r\n  }\r\n\r\n  const { find } = search.useActions()\r\n  const searchResult = search.useResult()\r\n  const [didResultFind, setFindStatus] = React.useState(false)\r\n\r\n  let timeout = React.useRef(0)\r\n  const handleChange = (event: any) => {\r\n    const value = event.target.value\r\n    if (timeout) clearTimeout(timeout.current)\r\n    setSearchValue(value)\r\n    timeout.current = window.setTimeout(() => {\r\n      //@ts-ignore\r\n      if (value) find(value, 1, true).then(() => setFindStatus(true))\r\n    }, 300)\r\n  }\r\n\r\n  const onSubmit = (event: any) => {\r\n    event.preventDefault()\r\n    if (open) {\r\n      if (!searchValue) return\r\n      history.push(`/search?query=${searchValue}`)\r\n      closeSearchInput()\r\n    } else {\r\n      setOpen(true)\r\n      searchInput.current?.focus()\r\n    }\r\n  }\r\n  const closeSearchInput = () => {\r\n    setOpen(false)\r\n    setFindStatus(false)\r\n    setSearchValue('')\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Backdrop\r\n        className={`${classes.backdrop} ${classes.cursorPointer}`}\r\n        open={open}\r\n        onClick={closeSearchInput}\r\n      ></Backdrop>\r\n      <AppBar className={classes.appBar} position=\"static\">\r\n        <Toolbar onClick={handleToolBarClick}>\r\n          <NavItems />\r\n          <form\r\n            onSubmit={onSubmit}\r\n            className={`${classes.searchForm} ${open ? 'focused' : ''}`}\r\n            data-target=\"search\"\r\n          >\r\n            <InputBase\r\n              value={searchValue}\r\n              onChange={handleChange}\r\n              inputRef={searchInput}\r\n              placeholder=\"Type to search\"\r\n              inputProps={{ 'aria-label': 'search', 'data-target': 'search' }}\r\n            />\r\n          </form>\r\n          <IconButton data-target=\"search\" onClick={onSubmit}>\r\n            <SearchIcon\r\n              data-target=\"search\"\r\n              className={classes.cursorPointer}\r\n              style={{ color: 'white' }}\r\n            ></SearchIcon>\r\n          </IconButton>\r\n\r\n          {isAuth ? (\r\n            <FadeMenu\r\n              avatarLink={`https://www.gravatar.com/avatar/${profile?.avatar?.gravatar?.hash}`}\r\n            />\r\n          ) : (\r\n            <React.Fragment>\r\n              <Button color=\"inherit\">\r\n                <Link className={classes.link} to=\"/login\">\r\n                  Sign In\r\n                </Link>\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <SearchResultsList\r\n        isOpened={didResultFind}\r\n        results={searchResult}\r\n        onRedirect={() => {\r\n          closeSearchInput()\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nimport { Field, Form } from 'react-final-form';\r\nimport { auth } from '@src/store/modules/auth';\r\nimport { account } from '@src/store/modules/account';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    margin: '0 auto',\r\n    maxWidth: '760px',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\ntype TFormValues = {\r\n  username: string;\r\n  password: string;\r\n};\r\n\r\nexport const Auth: React.FC = () => {\r\n  const history = useHistory();\r\n\r\n  const { signIn, signUp } = auth.useActions();\r\n  const { getProfile } = account.useActions();\r\n\r\n  const onFormSubmit = async ({ password, username }: TFormValues) => {\r\n    try {\r\n      await signIn(username, password);\r\n      history.push('/');\r\n      await getProfile();\r\n    } catch {\r\n      history.push('/login');\r\n    }\r\n  };\r\n\r\n  const onSignUpClick = async (event: any) => {\r\n    event.preventDefault();\r\n    try {\r\n      await signUp();\r\n      history.push('/');\r\n    } catch {}\r\n  };\r\n\r\n  const isFormFieldValid = (info: any) => info.error && info.touched;\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <Form\r\n          onSubmit={onFormSubmit}\r\n          validate={(values: any) => {\r\n            const errors: any = {};\r\n\r\n            if (!values.username) {\r\n              errors.username = 'Required';\r\n            }\r\n            if (!values.password) {\r\n              errors.password = 'Required';\r\n            }\r\n            return errors;\r\n          }}\r\n          render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n            <form className={classes.form} onSubmit={handleSubmit}>\r\n              <Field name=\"username\">\r\n                {({ input, meta }) => {\r\n                  return (\r\n                    <TextField\r\n                      {...input}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      autoComplete=\"email\"\r\n                      autoFocus\r\n                      error={isFormFieldValid(meta)}\r\n                      helperText={isFormFieldValid(meta) && meta.error}\r\n                    />\r\n                  );\r\n                }}\r\n              </Field>\r\n              <Field name=\"password\">\r\n                {({ input, meta }) => (\r\n                  <TextField\r\n                    {...input}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    error={isFormFieldValid(meta)}\r\n                    helperText={isFormFieldValid(meta) && meta.error}\r\n                  />\r\n                )}\r\n              </Field>\r\n              <Button\r\n                disabled={pristine || submitting}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item>\r\n                  <Link\r\n                    component=\"button\"\r\n                    onClick={onSignUpClick}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          )}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi } from '@src/api'\r\n\r\nimport { TMovieDetails } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TMovieDetails,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const currentMovieReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/currentMovie/SET_DETAILS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/currentMovie/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/currentMovie/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TMovieDetails) =>\r\n    ({\r\n      type: 'tmdb/movies/currentMovie/SET_DETAILS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/currentMovie/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/currentMovie/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getMovieDetails = (movie_id: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    const appendToResponse = 'videos,external_ids'\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(\r\n      actions.setData(await moviesApi.getDetails(movie_id, appendToResponse))\r\n    )\r\n    dispatch(actions.setLoadingStatus(false))\r\n    dispatch(actions.setError(null))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi } from '@src/api'\r\n\r\nimport { TRecommendations } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TRecommendations,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const recommendationsReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/recommendations/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/recommendations/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/recommendations/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TRecommendations) =>\r\n    ({\r\n      type: 'tmdb/movies/recommendations/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/recommendations/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/recommendations/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getRecommendations = (\r\n  movie_id: number,\r\n  page?: number\r\n): ThunkType => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(\r\n      actions.setData(await moviesApi.getRecommendations(movie_id, page))\r\n    )\r\n    dispatch(actions.setLoadingStatus(false))\r\n    dispatch(actions.setError(null))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi } from '@src/api'\r\n\r\nimport { TSimilarMovies } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TSimilarMovies,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const similarReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/similar/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/similar/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/similar/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TSimilarMovies) =>\r\n    ({\r\n      type: 'tmdb/movies/similar/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/similar/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/similar/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getSimilarMovies = (\r\n  movie_id: number,\r\n  page?: number\r\n): ThunkType => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await moviesApi.getSimilar(movie_id, page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n    dispatch(actions.setError(null))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi } from '@src/api'\r\n\r\nimport { TDiscoverMovie, TDiscoveredMovies } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TDiscoveredMovies,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const discoveredReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/discovered/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/discovered/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/discovered/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TDiscoveredMovies) =>\r\n    ({\r\n      type: 'tmdb/movies/discovered/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/discovered/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/discovered/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getDiscoveredMovies = (args: TDiscoverMovie): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await moviesApi.getDiscovered(args)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi } from '@src/api'\r\n\r\nimport { TNowPlayingMovies } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TNowPlayingMovies,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const nowPlayingReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/now=playing/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/now=playing/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/now=playing/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TNowPlayingMovies) =>\r\n    ({\r\n      type: 'tmdb/movies/now=playing/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/now=playing/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/now=playing/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getNowPlayingMovies = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await moviesApi.getNowPlaying(page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi } from '@src/api'\r\n\r\nimport { TPopularMovies } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TPopularMovies,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const popularReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/popular/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/popular/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/popular/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TPopularMovies) =>\r\n    ({\r\n      type: 'tmdb/movies/popular/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/popular/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/popular/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getPopularMovies = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await moviesApi.getPopular(page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n    dispatch(actions.setError(null))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi } from '@src/api'\r\n\r\nimport { TTopRatedMovies } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TTopRatedMovies,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const topRatedReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/top_rated/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/top_rated/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/top_rated/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TTopRatedMovies) =>\r\n    ({\r\n      type: 'tmdb/movies/top_rated/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/top_rated/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/top_rated/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getTopRatedMovies = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await moviesApi.getTopRated(page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi } from '@src/api'\r\n\r\nimport { TUpcomingMovies } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TUpcomingMovies,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const upcomingReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/upcoming/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/upcoming/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/upcoming/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TUpcomingMovies) =>\r\n    ({\r\n      type: 'tmdb/movies/upcoming/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/upcoming/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/upcoming/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getUpcomingMovies = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await moviesApi.getUpcoming(page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi, accountApi } from '@src/api'\r\n\r\nimport { TResult } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TResult,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const watchlistReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/watchlist/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/watchlist/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/watchlist/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TResult) =>\r\n    ({\r\n      type: 'tmdb/movies/watchlist/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/watchlist/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/watchlist/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getWatchList = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(\r\n      actions.setData(\r\n        await accountApi.getMovieWatchList(\r\n          getState().account.profileData!.id,\r\n          page\r\n        )\r\n      )\r\n    )\r\n    dispatch(actions.setLoadingStatus(false))\r\n    dispatch(actions.setError(null))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi, accountApi } from '@src/api'\r\n\r\nimport { TResult } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TResult,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const favoritelistReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/favoritelist/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/favoritelist/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/favoritelist/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TResult) =>\r\n    ({\r\n      type: 'tmdb/movies/favoritelist/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/favoritelist/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/favoritelist/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getFavoriteList = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(\r\n      actions.setData(\r\n        await accountApi.getMovieFavoriteList(\r\n          getState().account.profileData!.id,\r\n          page\r\n        )\r\n      )\r\n    )\r\n    dispatch(actions.setLoadingStatus(false))\r\n    dispatch(actions.setError(null))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { currentMovieReducer, getMovieDetails } from './currentMovie'\r\nimport { recommendationsReducer, getRecommendations } from './recommendations'\r\nimport { similarReducer, getSimilarMovies } from './similar'\r\nimport { discoveredReducer, getDiscoveredMovies } from './discovered'\r\nimport { nowPlayingReducer, getNowPlayingMovies } from './nowPlaying'\r\nimport { popularReducer, getPopularMovies } from './popular'\r\nimport { topRatedReducer, getTopRatedMovies } from './topRated'\r\nimport { upcomingReducer, getUpcomingMovies } from './upcoming'\r\nimport { watchlistReducer, getWatchList } from './watchlist'\r\nimport { favoritelistReducer, getFavoriteList } from './favoritelist'\r\n\r\nexport const moviesReducer = combineReducers({\r\n  currentMovie: currentMovieReducer,\r\n  recommendations: recommendationsReducer,\r\n  similar: similarReducer,\r\n  popular: popularReducer,\r\n  nowPlaying: nowPlayingReducer,\r\n  upcoming: upcomingReducer,\r\n  topRated: topRatedReducer,\r\n  discovered: discoveredReducer,\r\n  watchlist: watchlistReducer,\r\n  favoritelist: favoritelistReducer,\r\n})\r\n\r\nexport const actions = {\r\n  getMovieDetails,\r\n  getRecommendations,\r\n  getSimilarMovies,\r\n  getDiscoveredMovies,\r\n  getNowPlayingMovies,\r\n  getPopularMovies,\r\n  getTopRatedMovies,\r\n  getUpcomingMovies,\r\n  getWatchList,\r\n  getFavoriteList,\r\n}\r\n","import { AppStateType } from '@src/store'\r\n\r\nexport const getDetails = (state: AppStateType) => state.movies.currentMovie\r\nexport const getSimilar = (state: AppStateType) => state.movies.similar\r\nexport const getRecommendations = (state: AppStateType) =>\r\n  state.movies.recommendations\r\n\r\nexport const getPopular = (state: AppStateType) => state.movies.popular\r\nexport const getNowPlaying = (state: AppStateType) => state.movies.nowPlaying\r\nexport const getTopRated = (state: AppStateType) => state.movies.topRated\r\nexport const getUpcoming = (state: AppStateType) => state.movies.upcoming\r\nexport const getDiscovered = (state: AppStateType) => state.movies.discovered\r\nexport const getWatchList = (state: AppStateType) => state.movies.watchlist\r\nexport const getFavoriteList = (state: AppStateType) =>\r\n  state.movies.favoritelist\r\n","import { useSelector } from 'react-redux'\r\n\r\nimport { actions, moviesReducer } from './reducers'\r\nimport { useActions } from '@src/hooks/useActions'\r\nimport {\r\n  getDetails,\r\n  getNowPlaying,\r\n  getPopular,\r\n  getRecommendations,\r\n  getSimilar,\r\n  getTopRated,\r\n  getUpcoming,\r\n  getDiscovered,\r\n  getWatchList,\r\n  getFavoriteList,\r\n} from './selectors'\r\n\r\nexport { moviesReducer }\r\n\r\nexport const movies = {\r\n  currentMovie: {\r\n    useDetails: () => useSelector(getDetails),\r\n  },\r\n  usePopular: () => useSelector(getPopular),\r\n  useNowPlaying: () => useSelector(getNowPlaying),\r\n  useTopRated: () => useSelector(getTopRated),\r\n  useUpcoming: () => useSelector(getUpcoming),\r\n  useDiscovered: () => useSelector(getDiscovered),\r\n  useSimilar: () => useSelector(getSimilar),\r\n  useRecommendations: () => useSelector(getRecommendations),\r\n  useWatchList: () => useSelector(getWatchList),\r\n  useFavoriteList: () => useSelector(getFavoriteList),\r\n  useActions: (): typeof actions => useActions(actions),\r\n}\r\n","import React from 'react'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport { useMenu } from '@src/hooks/useMenu'\r\nimport { Menu, MenuItem } from '@material-ui/core'\r\nimport { account } from '@src/store/modules/account'\r\nimport { TAccountStates } from '@src/store/modules/account/types'\r\nimport { tvApi, moviesApi } from '@src/api'\r\n\r\ntype T = {\r\n  type: 'movie' | 'tv'\r\n  id: number\r\n}\r\nexport const UMenu: React.FC<T> = ({ type, id }) => {\r\n  const [anchorEl, open, close] = useMenu()\r\n  const [state, setState] = React.useState<TAccountStates>()\r\n\r\n  const handleMenuClick = (e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault()\r\n    open(e)\r\n  }\r\n\r\n  const { addToFavoriteList, addToWatchList } = account.useActions()\r\n\r\n  React.useEffect(() => {\r\n    if (type === 'movie')\r\n      moviesApi.getAccountStates(id).then((res) => setState(res as any))\r\n    else tvApi.getAccountStates(id).then((res) => setState(res as any))\r\n  }, [])\r\n  const params = { media_id: id, media_type: type }\r\n\r\n  const onWatchListClick = async () => {\r\n    if (!state) return\r\n    if (state?.watchlist) {\r\n      await addToWatchList({ ...params, watchlist: false })\r\n    } else await addToWatchList({ ...params, watchlist: true })\r\n\r\n    await setState({ ...state, watchlist: !state?.watchlist })\r\n    close()\r\n  }\r\n  const onFavoriteListClick = async () => {\r\n    if (!state) return\r\n    if (state?.favorite) {\r\n      await addToFavoriteList({ ...params, favorite: false })\r\n    } else await addToFavoriteList({ ...params, favorite: true })\r\n    await setState({ ...state, favorite: !state?.favorite })\r\n    close()\r\n  }\r\n  return (\r\n    <>\r\n      <div\r\n        style={{ position: 'absolute', bottom: '2%', right: '5%' }}\r\n        onClick={handleMenuClick}\r\n      >\r\n        <MoreVertIcon />\r\n      </div>\r\n      <Menu\r\n        id=\"m-card-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={close}\r\n      >\r\n        <MenuItem onClick={onWatchListClick}>\r\n          {state?.watchlist ? 'Remove from watchlist ' : 'Add to watchlist'}\r\n        </MenuItem>\r\n        <MenuItem onClick={onFavoriteListClick}>\r\n          {state?.favorite\r\n            ? 'Remove from favoritelist '\r\n            : 'Add to favoritelist'}\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { UMenu } from './UMenu'\r\nimport { auth } from '@src/store/modules/auth'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  cardAction: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    justifyContent: 'space-between',\r\n  },\r\n  grid: {\r\n    flexShrink: 0,\r\n    position: 'relative',\r\n  },\r\n})\r\nexport const CardItem: React.FC<any> = ({ children, onClick, type, id }) => {\r\n  const classes = useStyles()\r\n  const isAuth = auth.useStatus()\r\n  return (\r\n    <Grid className={classes.grid} item xs={6} sm={4} md={3} lg={2}>\r\n      <Paper onClick={onClick} className={classes.root}>\r\n        <Card className={classes.root}>\r\n          <CardActionArea className={classes.cardAction}>\r\n            {children}\r\n          </CardActionArea>\r\n        </Card>\r\n      </Paper>\r\n      {isAuth && (type === 'movie' || type === 'tv') && (\r\n        <UMenu type={type} id={id} />\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n// (type === 'movie' || type === 'tv')\r\n","import React from 'react'\r\nimport { getImageLink } from '@src/api'\r\nimport { TMovie } from '@src/store/modules/movies/types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport { CardItem } from './CardItem'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\ntype TCard = {\r\n  card: TMovie\r\n  isLoading: boolean\r\n}\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    maxWidth: '100%!important',\r\n    width: '100%',\r\n    display: 'block',\r\n  },\r\n  cardContent: {\r\n    alignSelf: 'end',\r\n    boxSizing: 'border-box',\r\n    width: '100%',\r\n  },\r\n  skeletonMedia: {\r\n    height: '400px',\r\n    maxWidth: '100%!important',\r\n    width: '100%',\r\n    display: 'block',\r\n  },\r\n})\r\n\r\nexport const MovieCard: React.FC<TCard> = ({ card, isLoading }) => {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n\r\n  const handleClick = React.useCallback(() => {\r\n    if (card.id) history.push('/movies/' + card.id.toString())\r\n  }, [card])\r\n\r\n  return (\r\n    <CardItem type=\"movie\" id={card?.id} onClick={handleClick}>\r\n      {!isLoading ? (\r\n        <img\r\n          className={classes.media}\r\n          src={getImageLink(card?.poster_path)}\r\n          alt=\"poster\"\r\n        />\r\n      ) : (\r\n        <Skeleton\r\n          animation=\"wave\"\r\n          variant=\"rect\"\r\n          className={classes.skeletonMedia}\r\n        >\r\n          <img className={classes.media} alt=\"skeleton\" />\r\n        </Skeleton>\r\n      )}\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography gutterBottom variant=\"body2\" component=\"h2\">\r\n          {!isLoading ? (\r\n            card.title\r\n          ) : (\r\n            <Skeleton animation=\"wave\" variant=\"text\" />\r\n          )}\r\n        </Typography>\r\n        <Typography variant=\"caption\" color=\"textSecondary\">\r\n          {!isLoading ? (\r\n            `${\r\n              card.release_date\r\n                ? new Date(card.release_date).toLocaleDateString()\r\n                : 'N/A'\r\n            }, Movie`\r\n          ) : (\r\n            <Skeleton animation=\"wave\" variant=\"text\" />\r\n          )}\r\n        </Typography>\r\n      </CardContent>\r\n    </CardItem>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { CardItem } from './CardItem'\r\nimport { MovieCard } from './MovieCard'\r\n\r\ntype TCards = {\r\n  style?: object\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    marginTop: '15px',\r\n    marginBottom: '15px',\r\n  },\r\n})\r\nexport const CardsList: React.FC<TCards> = ({ children, style }) => {\r\n  const styles = useStyles()\r\n  return (\r\n    <Grid\r\n      style={style}\r\n      alignItems=\"stretch\"\r\n      className={styles.container}\r\n      container\r\n      spacing={2}\r\n    >\r\n      {children\r\n        ? children\r\n        : Array(20)\r\n            .fill(0)\r\n            .map((el, idx) => (\r\n              <MovieCard isLoading={true} key={idx} card={null as any} />\r\n            ))}\r\n    </Grid>\r\n  )\r\n}\r\n","export const parseQueryString = (str) =>\r\n  str\r\n    .substring(1)\r\n    .split('&')\r\n    .reduce((acc, el) => {\r\n      const [key, value] = el.split('=')\r\n      return { ...acc, [key]: decodeURIComponent(value) }\r\n    }, {})\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { CardsList } from '@src/components/CardsList'\r\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom'\r\nimport { parseQueryString } from '@src/lib/parse_query_string'\r\nimport { MovieCard } from '@src/components/CardsList/MovieCard'\r\nimport {\r\n  TPopularMovies,\r\n  TUpcomingMovies,\r\n  TNowPlayingMovies,\r\n  TTopRatedMovies,\r\n  TRecommendations,\r\n  TSimilarMovies,\r\n} from '@src/store/modules/movies/types'\r\nimport { TResponseError } from '@src/api/types'\r\nconst useStyles = makeStyles({\r\n  pagination: {\r\n    '& ul': { justifyContent: 'center', margin: '10px 0' },\r\n  },\r\n})\r\ntype T = {\r\n  content: {\r\n    data:\r\n      | TUpcomingMovies\r\n      | TPopularMovies\r\n      | TNowPlayingMovies\r\n      | TTopRatedMovies\r\n      | TRecommendations\r\n      | TSimilarMovies\r\n      | null\r\n    isLoading: boolean\r\n    error: TResponseError | null\r\n  }\r\n\r\n  getter: (...args: any[]) => any\r\n  withURLParam?: boolean\r\n}\r\nexport const Page: React.FC<T> = ({ content, getter, withURLParam }) => {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const params = useLocation()\r\n  let pageNumber = parseQueryString(params.search).page || 1\r\n\r\n  const [page, setPage] = React.useState(parseInt(pageNumber))\r\n\r\n  const switchPage = (page: number) => {\r\n    setPage(page)\r\n    history.push(`?page=${page}`)\r\n  }\r\n\r\n  const matchedParams = useRouteMatch().params as any\r\n  const movieID = parseInt(matchedParams.id || '0')\r\n\r\n  React.useEffect(() => {\r\n    if (!withURLParam) getter(page)\r\n    else getter(movieID, page)\r\n  }, [page, getter, movieID])\r\n\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    switchPage(value)\r\n  }\r\n  return (\r\n    <>\r\n      <CardsList>\r\n        {content.data?.results?.map((el) => (\r\n          <MovieCard isLoading={content.isLoading} key={el.id} card={el} />\r\n        ))}\r\n      </CardsList>\r\n      <Pagination\r\n        className={classes.pagination}\r\n        count={content.data?.total_pages}\r\n        page={page}\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { useToggle } from '@src/hooks/useToggle'\r\n\r\nconst useStyles = makeStyles({\r\n  expandBtn: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    backgroundColor: 'rgba(255,255,255,0.8)',\r\n    position: 'relative',\r\n    top: '-1.5em',\r\n    cursor: 'pointer',\r\n  },\r\n  expanded: {\r\n    top: 0,\r\n  },\r\n})\r\nexport const Expand: React.FC = ({ children }) => {\r\n  const [isExpanded, toggle] = useToggle()\r\n  const classes = useStyles()\r\n  return (\r\n    <>\r\n      {isExpanded && children}\r\n      <div\r\n        onClick={() => toggle()}\r\n        className={`${classes.expandBtn} ${isExpanded && classes.expanded}`}\r\n      >\r\n        {isExpanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\n\r\nexport const useToggle = () => {\r\n  const [isOpen, setIsOpen] = React.useState(false)\r\n  const toggle = useCallback(() => setIsOpen((v) => !v), [])\r\n\r\n  return [isOpen, toggle] as const\r\n}\r\n","import React, { Children } from 'react'\r\nimport { CardsList } from '../CardsList'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  slider: {\r\n    overflowX: 'auto',\r\n    marginBottom: '15px',\r\n    minWidth: '100%',\r\n  },\r\n})\r\n\r\nexport const CardSlider: React.FC = ({ children }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.slider}>\r\n      <CardsList style={{ flexWrap: 'nowrap' }}>{children}</CardsList>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { CardsList } from '@src/components/CardsList'\r\nimport { useRouteMatch, Link, useHistory } from 'react-router-dom'\r\nimport { movies } from '@src/store/modules/movies'\r\n\r\nimport { Typography, Grid, Box } from '@material-ui/core'\r\nimport { getImageLink } from '@src/api'\r\nimport Rating from '@material-ui/lab/Rating'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\n\r\nimport { Expand } from '@src/components/Expand'\r\nimport { MovieCard } from '@src/components/CardsList/MovieCard'\r\nimport { CardSlider } from '@src/components/CardSlider'\r\n\r\nconst useStyles = makeStyles({\r\n  pagination: {\r\n    '& ul': { justifyContent: 'center', margin: '10px 0' },\r\n  },\r\n  header: {\r\n    backgroundPosition: 'right 0 top',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    height: '500px',\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n    alignItems: 'end',\r\n  },\r\n  containerImage: {\r\n    textAlign: 'center',\r\n  },\r\n  containerExternalLinks: {\r\n    display: 'flex',\r\n    '& svg': {\r\n      fontSize: '2.25rem',\r\n    },\r\n  },\r\n  image: {\r\n    width: '80%',\r\n  },\r\n  imageSkeleton: {\r\n    height: '100%',\r\n    width: '70%',\r\n  },\r\n  slider: {\r\n    overflowX: 'auto',\r\n    marginBottom: '15px',\r\n    minWidth: '100%',\r\n  },\r\n  details: {\r\n    color: 'white',\r\n    display: 'flex',\r\n  },\r\n  zidx: {\r\n    position: 'relative',\r\n    zIndex: 1,\r\n  },\r\n  grid: {\r\n    flexShrink: 0,\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  genresLink: {\r\n    padding: '2px',\r\n    '&:hover': {\r\n      backgroundColor: 'primary',\r\n    },\r\n  },\r\n  videoWrapper: {\r\n    position: 'relative',\r\n    paddingTop: ' 56.25%', //16:9\r\n    height: 0,\r\n    '& iframe': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n})\r\nexport const ByID: React.FC = () => {\r\n  const DESCRIPTION_BREAKPOINT = 25\r\n  const history = useHistory()\r\n  const classes = useStyles()\r\n  const { useDetails } = movies.currentMovie\r\n  const { useRecommendations, useSimilar } = movies\r\n  const details = useDetails()\r\n  const videos = details.data?.videos\r\n\r\n  const detailsOverview = details.data?.overview?.split(' ') || []\r\n\r\n  const recommendations = useRecommendations()\r\n  const similar = useSimilar()\r\n\r\n  const matchedParams = useRouteMatch().params as { id: string }\r\n\r\n  let movieID = parseInt(matchedParams.id || '1')\r\n\r\n  const {\r\n    getMovieDetails,\r\n    getRecommendations,\r\n    getSimilarMovies,\r\n  } = movies.useActions()\r\n\r\n  React.useEffect(() => {\r\n    getMovieDetails(movieID)\r\n    getRecommendations(movieID, 1)\r\n    getSimilarMovies(movieID, 1)\r\n  }, [movieID])\r\n  if (details.error?.status === 404) history.push('/404')\r\n  return (\r\n    <>\r\n      <Grid alignItems=\"stretch\" container spacing={2}>\r\n        <Grid className={classes.zidx} item xs={12} sm={3}>\r\n          {!details.isLoading ? (\r\n            <div className={classes.container}>\r\n              <div className={classes.containerImage}>\r\n                <img\r\n                  className={classes.image}\r\n                  src={getImageLink(details.data?.poster_path)}\r\n                  alt=\"poster\"\r\n                />\r\n              </div>\r\n              {/* <div className={classes.containerExternalLinks}>\r\n                {externalIds &&\r\n                  getExternalLinks(externalIds).map((el) => (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      {el}\r\n                    </Typography>\r\n                  ))}\r\n              </div> */}\r\n            </div>\r\n          ) : (\r\n            <div className={classes.container}>\r\n              <Skeleton\r\n                className={classes.imageSkeleton}\r\n                animation=\"wave\"\r\n                variant=\"rect\"\r\n              ></Skeleton>\r\n            </div>\r\n          )}\r\n        </Grid>\r\n        <Grid className={classes.zidx} item xs={12} sm={9}>\r\n          <Typography variant=\"h4\" component=\"h4\">\r\n            {!details.isLoading ? (\r\n              `${details.data?.title}(${\r\n                details?.data?.release_date\r\n                  ? new Date(details?.data?.release_date).getFullYear()\r\n                  : 'N/A'\r\n              })`\r\n            ) : (\r\n              <Skeleton animation=\"wave\" variant=\"text\" />\r\n            )}\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"h4\">\r\n            {!details.isLoading ? (\r\n              `${details.data?.original_title}`\r\n            ) : (\r\n              <Skeleton animation=\"wave\" variant=\"text\" />\r\n            )}\r\n          </Typography>\r\n          {!details.isLoading ? (\r\n            <Grid\r\n              style={{ display: 'flex', alignItems: 'center' }}\r\n              item\r\n              xs={12}\r\n            >\r\n              <Rating\r\n                max={10}\r\n                size=\"medium\"\r\n                name=\"read-only\"\r\n                value={details?.data?.vote_average}\r\n                readOnly\r\n              />\r\n              <Box>{details?.data?.vote_average}</Box>\r\n            </Grid>\r\n          ) : (\r\n            <Skeleton animation=\"wave\" variant=\"text\" />\r\n          )}\r\n          <Grid container>\r\n            <Grid style={{ marginTop: '15px' }} item xs={12}>\r\n              <Typography\r\n                style={{ marginBottom: '10px' }}\r\n                variant=\"h5\"\r\n                component=\"h5\"\r\n              >\r\n                ИНФОРМАЦИЯ\r\n              </Typography>\r\n              {!details.isLoading ? (\r\n                <>\r\n                  {details.data?.status && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Статус:\r\n                      {details.data?.status}\r\n                    </Typography>\r\n                  )}\r\n                  {details.data?.release_date && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Дата выхода:{' '}\r\n                      {new Date(\r\n                        details?.data?.release_date\r\n                      ).toLocaleDateString()}\r\n                    </Typography>\r\n                  )}\r\n                  {details.data?.runtime && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Длительность:\r\n                      {` ${Math.trunc(details.data?.runtime / 60)} ч ${\r\n                        details.data?.runtime % 60\r\n                      } мин`}\r\n                    </Typography>\r\n                  )}\r\n                  {details.data?.tagline && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Тег: {' ' + details.data?.tagline}\r\n                    </Typography>\r\n                  )}\r\n                  {Number.isInteger(details.data!.budget) && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Бюджет: {details.data?.budget + '$'}\r\n                    </Typography>\r\n                  )}\r\n                  {details.data?.genres?.length ? (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Жанры:\r\n                      {details.data?.genres.map((el, idx) => (\r\n                        <Link\r\n                          className={classes.genresLink}\r\n                          key={el.id}\r\n                          to={'genres/' + el.id}\r\n                        >\r\n                          {el.name + ' '}\r\n                        </Link>\r\n                      ))}\r\n                    </Typography>\r\n                  ) : null}\r\n                </>\r\n              ) : (\r\n                <Skeleton\r\n                  style={{ height: '150px' }}\r\n                  animation=\"wave\"\r\n                  variant=\"rect\"\r\n                />\r\n              )}\r\n\r\n              <Typography variant=\"body1\" component=\"h6\"></Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid style={{ marginTop: '15px' }} item xs={12}>\r\n            {!details.isLoading ? (\r\n              <>\r\n                <Typography\r\n                  style={{ marginBottom: '10px' }}\r\n                  variant=\"h5\"\r\n                  component=\"h5\"\r\n                >\r\n                  ОПИСАНИЕ\r\n                </Typography>\r\n                {details.data?.overview && (\r\n                  <div>\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      {detailsOverview\r\n                        ?.slice(0, DESCRIPTION_BREAKPOINT)\r\n                        .join(' ')}\r\n                    </Typography>\r\n                    {detailsOverview?.length - DESCRIPTION_BREAKPOINT > 0 && (\r\n                      <Expand>\r\n                        <Typography variant=\"body1\" component=\"h6\">\r\n                          {detailsOverview\r\n                            ?.slice(DESCRIPTION_BREAKPOINT)\r\n                            .join(' ')}\r\n                        </Typography>\r\n                      </Expand>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <Skeleton\r\n                style={{ height: '50px' }}\r\n                animation=\"wave\"\r\n                variant=\"rect\"\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        {!details.isLoading ? (\r\n          <>\r\n            {videos?.results.length > 0 && (\r\n              <>\r\n                <Typography variant=\"button\" component=\"h6\">\r\n                  ВИДЕО\r\n                </Typography>\r\n                <Grid\r\n                  container\r\n                  className={classes.slider}\r\n                  style={{ flexWrap: 'nowrap', overflowY: 'hidden' }}\r\n                >\r\n                  {videos?.results?.map((el) => (\r\n                    <Grid\r\n                      style={{ flexShrink: 0 }}\r\n                      xs={12}\r\n                      sm={4}\r\n                      md={3}\r\n                      lg={3}\r\n                      key={el.key}\r\n                    >\r\n                      <div className={classes.videoWrapper}>\r\n                        <iframe\r\n                          frameBorder=\"0\"\r\n                          allowFullScreen\r\n                          src={`https://www.youtube.com/embed/${el.key}`}\r\n                          title={el.name}\r\n                        ></iframe>\r\n                      </div>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : null}\r\n        {!recommendations.isLoading ? (\r\n          <>\r\n            {recommendations.data.total_results > 0 && (\r\n              <>\r\n                <Typography variant=\"button\" component=\"h6\">\r\n                  Рекомендации{' '}\r\n                  <Link to={'recommendations/' + details.data?.id}>\r\n                    посмотреть все\r\n                  </Link>\r\n                </Typography>\r\n                <CardSlider>\r\n                  {recommendations.data?.results?.map((el) => (\r\n                    <MovieCard\r\n                      isLoading={recommendations.isLoading}\r\n                      key={el.id}\r\n                      card={el}\r\n                    />\r\n                  ))}\r\n                </CardSlider>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : null}\r\n\r\n        {!similar.isLoading ? (\r\n          <>\r\n            {similar.data.total_results > 0 && (\r\n              <>\r\n                <Typography variant=\"button\" component=\"h6\">\r\n                  Схожие фильмы{' '}\r\n                  <Link to={'similar/' + details.data?.id}>посмотреть все</Link>\r\n                </Typography>\r\n                <CardSlider>\r\n                  {similar.data.results?.map((el) => (\r\n                    <MovieCard\r\n                      isLoading={similar.isLoading}\r\n                      key={el.id}\r\n                      card={el}\r\n                    />\r\n                  ))}\r\n                </CardSlider>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : null}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { CardsList } from '@src/components/CardsList'\r\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom'\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { parseQueryString } from '@src/lib/parse_query_string'\r\nimport { MovieCard } from '@src/components/CardsList/MovieCard'\r\nconst useStyles = makeStyles({\r\n  pagination: {\r\n    '& ul': { justifyContent: 'center', margin: '10px 0' },\r\n  },\r\n})\r\nexport const ByGenre: React.FC = () => {\r\n  const classes = useStyles()\r\n  const movi = movies.useDiscovered()\r\n  const history = useHistory()\r\n  const params = useLocation()\r\n  let pageNumber = parseQueryString(params.search).page || 1\r\n\r\n  const [page, setPage] = React.useState(parseInt(pageNumber))\r\n\r\n  const matchedParams = useRouteMatch().params as { genre: string }\r\n  const genre_id = matchedParams.genre\r\n  const { getDiscoveredMovies } = movies.useActions()\r\n\r\n  const switchPage = (page: number) => {\r\n    setPage(page)\r\n    history.push(`?page=${page}`)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getDiscoveredMovies({ with_genres: genre_id, page })\r\n  }, [page, genre_id])\r\n\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    switchPage(value)\r\n  }\r\n  return (\r\n    <>\r\n      <CardsList>\r\n        {movi.data?.results?.map((el) => (\r\n          <MovieCard isLoading={movi.isLoading} key={el.id} card={el} />\r\n        ))}\r\n      </CardsList>\r\n      <Pagination\r\n        className={classes.pagination}\r\n        count={movi?.data?.total_pages}\r\n        page={page}\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import { Popular } from './popular'\r\nimport { NowPlaying } from './now-playing'\r\nimport { ByID } from './by-id'\r\nimport { Recommendations } from './recommendations'\r\nimport { Similar } from './similar'\r\nimport { TopRated } from './top-rated'\r\nimport { Upcoming } from './upcoming'\r\nimport { ByGenre } from './by-genre'\r\n\r\nexport const movies = {\r\n  Popular,\r\n  NowPlaying,\r\n  ByID,\r\n  Recommendations,\r\n  Similar,\r\n  TopRated,\r\n  Upcoming,\r\n  ByGenre,\r\n}\r\n","import React from 'react'\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { Page } from '../_base/baseMovies'\r\nimport { Typography } from '@material-ui/core'\r\nimport { FilterPanel } from '@src/components/FilterPanel'\r\n\r\nexport const Popular: React.FC = () => {\r\n  const { getPopularMovies } = movies.useActions()\r\n  return (\r\n    <>\r\n      <Typography variant=\"button\" component=\"h6\">\r\n        Popular movies\r\n      </Typography>\r\n      <Page content={movies.usePopular()} getter={getPopularMovies} />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { Page } from '../_base/baseMovies'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nexport const NowPlaying: React.FC = () => {\r\n  const { getNowPlayingMovies } = movies.useActions()\r\n  return (\r\n    <>\r\n      <Typography variant=\"button\" component=\"h6\">\r\n        Now playing movies\r\n      </Typography>\r\n      <Page content={movies.useNowPlaying()} getter={getNowPlayingMovies} />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { Page } from '../_base/baseMovies'\r\n\r\nexport const Recommendations: React.FC = () => {\r\n  const { getRecommendations } = movies.useActions()\r\n  return (\r\n    <Page\r\n      content={movies.useRecommendations()}\r\n      getter={getRecommendations}\r\n      withURLParam\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { Page } from '../_base/baseMovies'\r\n\r\nexport const Similar: React.FC = () => {\r\n  const { getSimilarMovies } = movies.useActions()\r\n  return (\r\n    <Page\r\n      content={movies.useSimilar()}\r\n      getter={getSimilarMovies}\r\n      withURLParam\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { Page } from '../_base/baseMovies'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nexport const TopRated: React.FC = () => {\r\n  const { getTopRatedMovies } = movies.useActions()\r\n  return (\r\n    <>\r\n      <Typography variant=\"button\" component=\"h6\">\r\n        Top rated movies\r\n      </Typography>\r\n      <Page content={movies.useTopRated()} getter={getTopRatedMovies} />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { Page } from '../_base/baseMovies'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nexport const Upcoming: React.FC = () => {\r\n  const { getUpcomingMovies } = movies.useActions()\r\n  return (\r\n    <>\r\n      <Typography variant=\"button\" component=\"h6\">\r\n        Upcoming movies\r\n      </Typography>\r\n      <Page content={movies.useUpcoming()} getter={getUpcomingMovies} />\r\n    </>\r\n  )\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { tvApi } from '@src/api'\r\n\r\nimport { TTVDetails } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TTVDetails,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const currentTVReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/currentTV/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/currentTV/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/currentTV/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TTVDetails) =>\r\n    ({\r\n      type: 'tmdb/tv/currentTV/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/currentTV/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/currentTV/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getTVDetails = (tv_id: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    const appendToResponse = 'videos,external_ids'\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await tvApi.getDetails(tv_id, appendToResponse)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { tvApi } from '@src/api'\r\n\r\nimport { TRecommendations } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TRecommendations,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const recommendationsReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/recommendations/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/recommendations/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/recommendations/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TRecommendations) =>\r\n    ({\r\n      type: 'tmdb/tv/recommendations/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/recommendations/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/recommendations/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getRecommendations = (\r\n  tv_id: number,\r\n  page?: number\r\n): ThunkType => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await tvApi.getRecommendations(tv_id, page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { tvApi } from '@src/api'\r\n\r\nimport { TSimilarTV } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TSimilarTV,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const similarReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/similar/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/similar/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/similar/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TSimilarTV) =>\r\n    ({\r\n      type: 'tmdb/tv/similar/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/similar/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/similar/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getSimilarTV = (\r\n  tv_id: number,\r\n  page?: number\r\n): ThunkType => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await tvApi.getSimilar(tv_id, page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { tvApi } from '@src/api'\r\n\r\nimport { TPopularTV, TDiscoverTV, TDiscoveredTV } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TDiscoveredTV,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const discoveredReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/discovered/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/discovered/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/discovered/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TDiscoveredTV) =>\r\n    ({\r\n      type: 'tmdb/tv/discovered/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/discovered/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/discovered/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getDiscoveredTV = (args: TDiscoverTV): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await tvApi.getDiscovered(args)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { tvApi } from '@src/api'\r\n\r\nimport { TAiringTodayTV } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TAiringTodayTV,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const airingTodayReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/airing_today/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/airing_today/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/airing_today/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TAiringTodayTV) =>\r\n    ({\r\n      type: 'tmdb/tv/airing_today/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/airing_today/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/airing_today/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getAiringTodayTV = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await tvApi.getAiringToday(page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { tvApi } from '@src/api'\r\n\r\nimport { TPopularTV } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TPopularTV,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const popularReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/popular/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/popular/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/popular/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TPopularTV) =>\r\n    ({\r\n      type: 'tmdb/tv/popular/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/popular/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/popular/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getPopularTV = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await tvApi.getPopular(page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { tvApi } from '@src/api'\r\n\r\nimport { TTopRatedTV } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TTopRatedTV,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const topRatedReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/top_rated/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/top_rated/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/top_rated/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TTopRatedTV) =>\r\n    ({\r\n      type: 'tmdb/tv/top_rated/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/top_rated/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/top_rated/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getTopRatedTV = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await tvApi.getTopRated(page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { tvApi } from '@src/api'\r\n\r\nimport { TOnTheAirTV } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TOnTheAirTV,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const onTheAirReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/onTheAir/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/onTheAir/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/onTheAir/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TOnTheAirTV) =>\r\n    ({\r\n      type: 'tmdb/tv/onTheAir/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/onTheAir/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/onTheAir/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getOnTheAirTV = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await tvApi.getOnTheAir(page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { accountApi } from '@src/api'\r\n\r\nimport { TResult } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TResult,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const watchlistReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/watchlist/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/watchlist/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/watchlist/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TResult) =>\r\n    ({\r\n      type: 'tmdb/tv/watchlist/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/watchlist/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/watchlist/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getWatchList = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(\r\n      actions.setData(\r\n        await accountApi.getTVWatchList(\r\n          getState().account.profileData!.id,\r\n          page\r\n        )\r\n      )\r\n    )\r\n    dispatch(actions.setLoadingStatus(false))\r\n    dispatch(actions.setError(null))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi, accountApi } from '@src/api'\r\n\r\nimport { TResult } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TResult,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const favoritelistReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/favoritelist/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/favoritelist/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/favoritelist/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TResult) =>\r\n    ({\r\n      type: 'tmdb/tv/favoritelist/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/favoritelist/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/favoritelist/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getFavoriteList = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(\r\n      actions.setData(\r\n        await accountApi.getTVFavoriteList(\r\n          getState().account.profileData!.id,\r\n          page\r\n        )\r\n      )\r\n    )\r\n    dispatch(actions.setLoadingStatus(false))\r\n    dispatch(actions.setError(null))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { currentTVReducer, getTVDetails } from './currentTV'\r\nimport { recommendationsReducer, getRecommendations } from './recommendations'\r\nimport { similarReducer, getSimilarTV } from './similar'\r\nimport { discoveredReducer, getDiscoveredTV } from './discovered'\r\nimport { airingTodayReducer, getAiringTodayTV } from './airingToday'\r\nimport { popularReducer, getPopularTV } from './popular'\r\nimport { topRatedReducer, getTopRatedTV } from './topRated'\r\nimport { onTheAirReducer, getOnTheAirTV } from './onTheAir'\r\nimport { watchlistReducer, getWatchList } from './watchlist'\r\nimport { favoritelistReducer, getFavoriteList } from './favoritelist'\r\n\r\nexport const tvReducer = combineReducers({\r\n  currentTV: currentTVReducer,\r\n  recommendations: recommendationsReducer,\r\n  similar: similarReducer,\r\n  popular: popularReducer,\r\n  airingToday: airingTodayReducer,\r\n  onTheAir: onTheAirReducer,\r\n  topRated: topRatedReducer,\r\n  discovered: discoveredReducer,\r\n  watchlist: watchlistReducer,\r\n  favoritelist: favoritelistReducer,\r\n})\r\n\r\nexport const actions = {\r\n  getRecommendations,\r\n  getTVDetails,\r\n  getSimilarTV,\r\n  getDiscoveredTV,\r\n  getAiringTodayTV,\r\n  getPopularTV,\r\n  getTopRatedTV,\r\n  getOnTheAirTV,\r\n  getWatchList,\r\n  getFavoriteList,\r\n}\r\n","import { AppStateType } from '@src/store'\r\n\r\nexport const getDetails = (state: AppStateType) => state.tv.currentTV\r\nexport const getSimilar = (state: AppStateType) => state.tv.similar\r\nexport const getRecommendations = (state: AppStateType) =>\r\n  state.tv.recommendations\r\n\r\nexport const getPopular = (state: AppStateType) => state.tv.popular\r\nexport const getOnTheAir = (state: AppStateType) => state.tv.onTheAir\r\nexport const getAiringToday = (state: AppStateType) => state.tv.airingToday\r\nexport const getTopRated = (state: AppStateType) => state.tv.topRated\r\nexport const getDiscovered = (state: AppStateType) => state.tv.discovered\r\nexport const getWatchList = (state: AppStateType) => state.tv.watchlist\r\nexport const getFavoriteList = (state: AppStateType) => state.tv.favoritelist\r\n","import { useSelector } from 'react-redux'\r\nimport { useActions } from '@src/hooks/useActions'\r\nimport { actions, tvReducer } from './reducers'\r\nimport {\r\n  getAiringToday,\r\n  getOnTheAir,\r\n  getPopular,\r\n  getRecommendations,\r\n  getSimilar,\r\n  getDetails,\r\n  getTopRated,\r\n  getDiscovered,\r\n  getWatchList,\r\n  getFavoriteList,\r\n} from './selectors'\r\n\r\nexport { tvReducer }\r\n\r\nexport const tv = {\r\n  currentTV: {\r\n    useDetails: () => useSelector(getDetails),\r\n  },\r\n  usePopular: () => useSelector(getPopular),\r\n  useAiringToday: () => useSelector(getAiringToday),\r\n  useOnTheAir: () => useSelector(getOnTheAir),\r\n  useTopRated: () => useSelector(getTopRated),\r\n  useActions: (): typeof actions => useActions(actions),\r\n  useSimilar: () => useSelector(getSimilar),\r\n  useRecommendations: () => useSelector(getRecommendations),\r\n  useWatchList: () => useSelector(getWatchList),\r\n  useFavoriteList: () => useSelector(getFavoriteList),\r\n  useDiscovered: () => useSelector(getDiscovered),\r\n}\r\n","import React from 'react'\r\nimport { getImageLink } from '@src/api'\r\nimport { TTV } from '@src/store/modules/tv/types'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { CardItem } from './CardItem'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\ntype TCard = {\r\n  card: TTV\r\n  isLoading: boolean\r\n}\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    maxWidth: '100%!important',\r\n    width: '100%',\r\n    display: 'block',\r\n  },\r\n  cardContent: {\r\n    alignSelf: 'end',\r\n    boxSizing: 'border-box',\r\n    width: '100%',\r\n  },\r\n  skeletonMedia: {\r\n    height: '400px',\r\n    maxWidth: '100%!important',\r\n    width: '100%',\r\n    display: 'block',\r\n  },\r\n})\r\nexport const TVCard: React.FC<TCard> = ({ card, isLoading }) => {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const handleClick = React.useCallback(() => {\r\n    if (card.id) history.push('/tv/' + card.id.toString())\r\n  }, [card])\r\n\r\n  return (\r\n    <CardItem type=\"tv\" id={card?.id} onClick={handleClick}>\r\n      {!isLoading ? (\r\n        <img\r\n          className={classes.media}\r\n          src={getImageLink(card.poster_path)}\r\n          alt=\"poster\"\r\n        />\r\n      ) : (\r\n        <Skeleton\r\n          animation=\"wave\"\r\n          variant=\"rect\"\r\n          className={classes.skeletonMedia}\r\n        >\r\n          <img className={classes.media} alt=\"skeleton\" />\r\n        </Skeleton>\r\n      )}\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography gutterBottom variant=\"body2\" component=\"h2\">\r\n          {!isLoading ? (\r\n            card.name\r\n          ) : (\r\n            <Skeleton animation=\"wave\" variant=\"text\" />\r\n          )}\r\n        </Typography>\r\n        <Typography variant=\"caption\" color=\"textSecondary\">\r\n          {!isLoading ? (\r\n            `${\r\n              card.first_air_date\r\n                ? new Date(card.first_air_date).toLocaleDateString()\r\n                : 'N/A'\r\n            }, TV`\r\n          ) : (\r\n            <Skeleton animation=\"wave\" variant=\"text\" />\r\n          )}\r\n        </Typography>\r\n      </CardContent>\r\n    </CardItem>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { CardsList } from '@src/components/CardsList'\r\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom'\r\nimport { parseQueryString } from '@src/lib/parse_query_string'\r\nimport { TVCard } from '@src/components/CardsList/TVCard'\r\nimport {\r\n  TPopularTV,\r\n  TOnTheAirTV,\r\n  TAiringTodayTV,\r\n  TTopRatedTV,\r\n  TRecommendations,\r\n  TSimilarTV,\r\n} from '@src/store/modules/tv/types'\r\nimport { TResponseError } from '@src/api/types'\r\nconst useStyles = makeStyles({\r\n  pagination: {\r\n    '& ul': { justifyContent: 'center', margin: '10px 0' },\r\n  },\r\n})\r\ntype T = {\r\n  content: {\r\n    data:\r\n      | TPopularTV\r\n      | TSimilarTV\r\n      | TOnTheAirTV\r\n      | TAiringTodayTV\r\n      | TRecommendations\r\n      | TTopRatedTV\r\n      | null\r\n    isLoading: boolean\r\n    error: TResponseError | null\r\n  }\r\n\r\n  getter: (...args: any[]) => any\r\n  withURLParam?: boolean\r\n}\r\nexport const Page: React.FC<T> = ({ content, getter, withURLParam }) => {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const params = useLocation()\r\n  let pageNumber = parseQueryString(params.search).page || 1\r\n\r\n  const [page, setPage] = React.useState(parseInt(pageNumber))\r\n\r\n  const switchPage = (page: number) => {\r\n    setPage(page)\r\n    history.push(`?page=${page}`)\r\n  }\r\n\r\n  const matchedParams = useRouteMatch().params as any\r\n  const tvID = parseInt(matchedParams.id || '0')\r\n\r\n  React.useEffect(() => {\r\n    if (!withURLParam) getter(page)\r\n    else getter(tvID, page)\r\n  }, [page, getter, tvID])\r\n\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    switchPage(value)\r\n  }\r\n  return (\r\n    <>\r\n      <CardsList>\r\n        {content.data?.results?.map((el) => (\r\n          <TVCard isLoading={content.isLoading} key={el.id} card={el} />\r\n        ))}\r\n      </CardsList>\r\n      <Pagination\r\n        className={classes.pagination}\r\n        count={content.data?.total_pages}\r\n        page={page}\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { getImageLink } from '@src/api'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport { CardItem } from './CardItem'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { TTVSeason } from '@src/store/modules/tv/types'\r\ntype TCard = {\r\n  card: TTVSeason\r\n  isLoading: boolean\r\n}\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    maxWidth: '100%!important',\r\n    width: '100%',\r\n    display: 'block',\r\n  },\r\n  cardContent: {\r\n    alignSelf: 'end',\r\n    boxSizing: 'border-box',\r\n    width: '100%',\r\n  },\r\n  skeletonMedia: {\r\n    height: '400px',\r\n    maxWidth: '100%!important',\r\n    width: '100%',\r\n    display: 'block',\r\n  },\r\n})\r\n\r\nexport const TVSeasonCard: React.FC<TCard> = ({ card, isLoading }) => {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const handleClick = React.useCallback(() => {\r\n    if (card.id)\r\n      history.push(\r\n        `${history.location.pathname}/season/${card.season_number.toString()}`\r\n      )\r\n  }, [card])\r\n\r\n  return (\r\n    <CardItem onClick={()=>{}}>\r\n      {!isLoading ? (\r\n        <img\r\n          className={classes.media}\r\n          src={getImageLink(card.poster_path)}\r\n          alt=\"poster\"\r\n        />\r\n      ) : (\r\n        <Skeleton\r\n          animation=\"wave\"\r\n          variant=\"rect\"\r\n          className={classes.skeletonMedia}\r\n        >\r\n          <img className={classes.media} alt=\"skeleton\" />\r\n        </Skeleton>\r\n      )}\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography gutterBottom variant=\"body2\" component=\"h2\">\r\n          {!isLoading ? (\r\n            card.name\r\n          ) : (\r\n            <Skeleton animation=\"wave\" variant=\"text\" />\r\n          )}\r\n        </Typography>\r\n        <Typography variant=\"caption\" color=\"textSecondary\">\r\n          {!isLoading ? (\r\n            `${\r\n              card.air_date\r\n                ? new Date(card.air_date).toLocaleDateString()\r\n                : 'N/A'\r\n            }, TV`\r\n          ) : (\r\n            <Skeleton animation=\"wave\" variant=\"text\" />\r\n          )}\r\n        </Typography>\r\n      </CardContent>\r\n    </CardItem>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { CardsList } from '@src/components/CardsList'\r\nimport { useRouteMatch, Link, useHistory } from 'react-router-dom'\r\nimport { tv } from '@src/store/modules/tv'\r\n\r\nimport { Typography, Grid, Box } from '@material-ui/core'\r\nimport { getImageLink } from '@src/api'\r\nimport Rating from '@material-ui/lab/Rating'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\n\r\nimport { Expand } from '@src/components/Expand'\r\nimport { TVCard } from '@src/components/CardsList/TVCard'\r\nimport { TVSeasonCard } from '@src/components/CardsList/TVSeasonCard'\r\nimport { CardSlider } from '@src/components/CardSlider'\r\n\r\nconst useStyles = makeStyles({\r\n  pagination: {\r\n    '& ul': { justifyContent: 'center', margin: '10px 0' },\r\n  },\r\n  header: {\r\n    backgroundPosition: 'right 0 top',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    height: '500px',\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'end',\r\n    height: '100%',\r\n  },\r\n  containerImage: {\r\n    textAlign: 'center',\r\n  },\r\n  containerExternalLinks: {\r\n    display: 'flex',\r\n    '& svg': {\r\n      fontSize: '2.25rem',\r\n    },\r\n  },\r\n  image: {\r\n    width: '80%',\r\n  },\r\n  imageSkeleton: {\r\n    height: '100%',\r\n    width: '70%',\r\n  },\r\n  slider: {\r\n    overflowX: 'auto',\r\n    marginBottom: '15px',\r\n    minWidth: '100%',\r\n  },\r\n  details: {\r\n    color: 'white',\r\n    display: 'flex',\r\n  },\r\n  zidx: {\r\n    position: 'relative',\r\n    zIndex: 1,\r\n  },\r\n  grid: {\r\n    flexShrink: 0,\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  genresLink: {\r\n    padding: '2px',\r\n    '&:hover': {\r\n      backgroundColor: 'primary',\r\n    },\r\n  },\r\n  videoWrapper: {\r\n    position: 'relative',\r\n    paddingTop: ' 56.25%', //16:9\r\n    height: 0,\r\n    '& iframe': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n})\r\nexport const ByID: React.FC = () => {\r\n  const DESCRIPTION_BREAKPOINT = 25\r\n  const history = useHistory()\r\n  const classes = useStyles()\r\n  const { useDetails } = tv.currentTV\r\n  const { useRecommendations, useSimilar } = tv\r\n  const details = useDetails()\r\n  const videos = details.data?.videos\r\n  const detailsOverview = details.data?.overview?.split(' ') || []\r\n  const recommendations = useRecommendations()\r\n  const similar = useSimilar()\r\n\r\n  const matchedParams = useRouteMatch().params as { id: string }\r\n\r\n  let tvID = parseInt(matchedParams.id || '1')\r\n\r\n  const { getTVDetails, getRecommendations, getSimilarTV } = tv.useActions()\r\n\r\n  React.useEffect(() => {\r\n    getTVDetails(tvID)\r\n    getRecommendations(tvID, 1)\r\n    getSimilarTV(tvID, 1)\r\n  }, [tvID])\r\n  if (details.error?.status === 404) history.push('/404')\r\n  return (\r\n    <>\r\n      <Grid alignItems=\"stretch\" container spacing={2}>\r\n        <Grid className={classes.zidx} item xs={12} sm={3}>\r\n          {!details.isLoading ? (\r\n            <div className={classes.container}>\r\n              <div className={classes.containerImage}>\r\n                <img\r\n                  className={classes.image}\r\n                  src={getImageLink(details.data?.poster_path)}\r\n                  alt=\"poster\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.container}>\r\n              <Skeleton\r\n                className={classes.imageSkeleton}\r\n                animation=\"wave\"\r\n                variant=\"rect\"\r\n              ></Skeleton>\r\n            </div>\r\n          )}\r\n        </Grid>\r\n        <Grid className={classes.zidx} item xs={12} sm={9}>\r\n          <Typography variant=\"h4\" component=\"h4\">\r\n            {!details.isLoading ? (\r\n              `${details.data?.name}(${\r\n                details.data?.first_air_date\r\n                  ? new Date(details.data?.first_air_date).getFullYear()\r\n                  : 'N/A'\r\n              })`\r\n            ) : (\r\n              <Skeleton animation=\"wave\" variant=\"text\" />\r\n            )}\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"h4\">\r\n            {details.data?.original_name ? (\r\n              `${details.data?.original_name}`\r\n            ) : (\r\n              <Skeleton animation=\"wave\" variant=\"text\" />\r\n            )}\r\n          </Typography>\r\n          {!details.isLoading ? (\r\n            <Grid\r\n              style={{ display: 'flex', alignItems: 'center' }}\r\n              item\r\n              xs={12}\r\n            >\r\n              <Rating\r\n                max={10}\r\n                size=\"medium\"\r\n                name=\"read-only\"\r\n                value={details.data?.vote_average}\r\n                readOnly\r\n              />\r\n              <Box>{details.data?.vote_average}</Box>\r\n            </Grid>\r\n          ) : (\r\n            <Skeleton animation=\"wave\" variant=\"text\" />\r\n          )}\r\n          <Grid container>\r\n            <Grid style={{ marginTop: '15px' }} item xs={12}>\r\n              <Typography\r\n                style={{ marginBottom: '10px' }}\r\n                variant=\"h5\"\r\n                component=\"h5\"\r\n              >\r\n                ИНФОРМАЦИЯ\r\n              </Typography>\r\n              {!details.isLoading ? (\r\n                <>\r\n                  {details.data?.status && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Статус:\r\n                      {details.data?.status}\r\n                    </Typography>\r\n                  )}\r\n                  {details.data?.first_air_date && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Дата выхода:{' '}\r\n                      {new Date(\r\n                        details.data?.first_air_date\r\n                      ).toLocaleDateString()}\r\n                    </Typography>\r\n                  )}\r\n                  {details.data?.episode_run_time && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Длительность эпизода:\r\n                      {` ${Math.trunc(\r\n                        details.data?.episode_run_time.reduce(\r\n                          (acc, el) => acc + el,\r\n                          0\r\n                        ) / details.data?.episode_run_time.length\r\n                      )} мин`}\r\n                    </Typography>\r\n                  )}\r\n                  {details.data?.number_of_episodes && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Эпизодов: {' ' + details.data?.number_of_episodes}\r\n                    </Typography>\r\n                  )}\r\n                  {details.data?.number_of_seasons && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Сезонов: {' ' + details.data?.number_of_seasons}\r\n                    </Typography>\r\n                  )}\r\n\r\n                  {details.data?.genres && details.data?.genres.length > 0 && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Жанры:\r\n                      {details.data?.genres.map((el, idx) => (\r\n                        <Link\r\n                          className={classes.genresLink}\r\n                          key={el.id}\r\n                          to={'genres/' + el.id}\r\n                        >\r\n                          {el.name + ' '}\r\n                        </Link>\r\n                      ))}\r\n                    </Typography>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <Skeleton\r\n                  style={{ height: '150px' }}\r\n                  animation=\"wave\"\r\n                  variant=\"rect\"\r\n                />\r\n              )}\r\n\r\n              <Typography variant=\"body1\" component=\"h6\"></Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid style={{ marginTop: '15px' }} item xs={12}>\r\n            {!details.isLoading ? (\r\n              <>\r\n                <Typography\r\n                  style={{ marginBottom: '10px' }}\r\n                  variant=\"h5\"\r\n                  component=\"h5\"\r\n                >\r\n                  ОПИСАНИЕ\r\n                </Typography>\r\n                {details.data?.overview && (\r\n                  <div>\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      {detailsOverview\r\n                        ?.slice(0, DESCRIPTION_BREAKPOINT)\r\n                        .join(' ')}\r\n                    </Typography>\r\n                    {detailsOverview?.length - DESCRIPTION_BREAKPOINT > 0 && (\r\n                      <Expand>\r\n                        <Typography variant=\"body1\" component=\"h6\">\r\n                          {detailsOverview\r\n                            ?.slice(DESCRIPTION_BREAKPOINT)\r\n                            .join(' ')}\r\n                        </Typography>\r\n                      </Expand>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <Skeleton\r\n                style={{ height: '50px' }}\r\n                animation=\"wave\"\r\n                variant=\"rect\"\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        {!details.isLoading ? (\r\n          <>\r\n            {videos?.results.length > 0 && (\r\n              <>\r\n                <Typography variant=\"button\" component=\"h6\">\r\n                  ВИДЕО\r\n                </Typography>\r\n                <Grid\r\n                  container\r\n                  className={classes.slider}\r\n                  style={{ flexWrap: 'nowrap', overflowY: 'hidden' }}\r\n                >\r\n                  {videos?.results?.map((el) => (\r\n                    <Grid\r\n                      style={{ flexShrink: 0 }}\r\n                      xs={12}\r\n                      sm={4}\r\n                      md={3}\r\n                      lg={3}\r\n                      key={el.key}\r\n                    >\r\n                      <div className={classes.videoWrapper}>\r\n                        <iframe\r\n                          frameBorder=\"0\"\r\n                          allowFullScreen\r\n                          src={`https://www.youtube.com/embed/${el.key}`}\r\n                          title={el.name}\r\n                        ></iframe>\r\n                      </div>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : null}\r\n        {details.data?.seasons ? (\r\n          <>\r\n            <Typography variant=\"button\" component=\"h6\">\r\n              Сезоны{' '}\r\n            </Typography>\r\n            <CardSlider>\r\n              {details.data?.seasons.map((el) => (\r\n                <TVSeasonCard\r\n                  isLoading={details.isLoading}\r\n                  card={el}\r\n                  key={el.id}\r\n                >\r\n                  {' Сезон!'}\r\n                </TVSeasonCard>\r\n              ))}\r\n            </CardSlider>\r\n          </>\r\n        ) : null}\r\n\r\n        {!recommendations.isLoading ? (\r\n          <>\r\n            {recommendations.data.total_results > 0 && (\r\n              <>\r\n                <Typography variant=\"button\" component=\"h6\">\r\n                  Рекомендации{' '}\r\n                  <Link to={'recommendations/' + details.data?.id}>\r\n                    посмотреть все\r\n                  </Link>\r\n                </Typography>\r\n                <CardSlider>\r\n                  {recommendations?.data?.results?.map((el) => (\r\n                    <TVCard\r\n                      isLoading={recommendations.isLoading}\r\n                      key={el.id}\r\n                      card={el}\r\n                    />\r\n                  ))}\r\n                </CardSlider>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : null}\r\n\r\n        {!similar.isLoading ? (\r\n          <>\r\n            {similar.data.total_results > 0 && (\r\n              <>\r\n                <Typography variant=\"button\" component=\"h6\">\r\n                  Схожие сериалы{' '}\r\n                  <Link to={'similar/' + details.data?.id}>посмотреть все</Link>\r\n                </Typography>\r\n                <CardSlider>\r\n                  {similar.data?.results?.map((el) => (\r\n                    <TVCard\r\n                      isLoading={similar.isLoading}\r\n                      key={el.id}\r\n                      card={el}\r\n                    />\r\n                  ))}\r\n                </CardSlider>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : null}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { CardsList } from '@src/components/CardsList'\r\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { parseQueryString } from '@src/lib/parse_query_string'\r\nimport { TVCard } from '@src/components/CardsList/TVCard'\r\nconst useStyles = makeStyles({\r\n  pagination: {\r\n    '& ul': { justifyContent: 'center', margin: '10px 0' },\r\n  },\r\n})\r\nexport const ByGenre: React.FC = () => {\r\n  const classes = useStyles()\r\n  const tvs = tv.useDiscovered()\r\n  const history = useHistory()\r\n  const params = useLocation()\r\n  let pageNumber = parseQueryString(params.search).page || 1\r\n\r\n  const [page, setPage] = React.useState(parseInt(pageNumber))\r\n\r\n  const matchedParams = useRouteMatch().params as { genre: string }\r\n  const genre_id = matchedParams.genre\r\n  const { getDiscoveredTV } = tv.useActions()\r\n\r\n  const switchPage = (page: number) => {\r\n    setPage(page)\r\n    history.push(`?page=${page}`)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getDiscoveredTV({ with_genres: genre_id, page })\r\n  }, [page, genre_id])\r\n\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    switchPage(value)\r\n  }\r\n  return (\r\n    <>\r\n      <CardsList>\r\n        {tvs.data?.results?.map((el) => (\r\n          <TVCard isLoading={tvs.isLoading} key={el.id} card={el} />\r\n        ))}\r\n      </CardsList>\r\n      <Pagination\r\n        className={classes.pagination}\r\n        count={tvs?.data?.total_pages}\r\n        page={page}\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import { Popular } from './popular'\r\nimport { AiringToday } from './airing-today'\r\nimport { ByID } from './by-id'\r\nimport { Recommendations } from './recommendations'\r\nimport { Similar } from './similar'\r\nimport { TopRated } from './top-rated'\r\nimport { OnTheAir } from './on-the-air'\r\nimport { ByGenre } from './by-genre'\r\n\r\nexport const tv = {\r\n  ByID,\r\n  Popular,\r\n  Recommendations,\r\n  ByGenre,\r\n  TopRated,\r\n  AiringToday,\r\n  Similar,\r\n  OnTheAir,\r\n}\r\n","import React from 'react'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { Page } from '../_base/baseTV'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nexport const Popular: React.FC = () => {\r\n  const { getPopularTV } = tv.useActions()\r\n  return (\r\n    <>\r\n      <Typography variant=\"button\" component=\"h6\">\r\n        Popular TV\r\n      </Typography>\r\n      <Page content={tv.usePopular()} getter={getPopularTV} />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { Page } from '../_base/baseTV'\r\n\r\nexport const Recommendations: React.FC = () => {\r\n  const { getRecommendations } = tv.useActions()\r\n  return <Page content={tv.useRecommendations()} getter={getRecommendations} withURLParam />\r\n}\r\n","import React from 'react'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { Page } from '../_base/baseTV'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nexport const TopRated: React.FC = () => {\r\n  const { getTopRatedTV } = tv.useActions()\r\n  return (\r\n    <>\r\n      <Typography variant=\"button\" component=\"h6\">\r\n        Top rated TV\r\n      </Typography>\r\n      <Page content={tv.useTopRated()} getter={getTopRatedTV} />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { Page } from '../_base/baseTV'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nexport const AiringToday: React.FC = () => {\r\n  const { getAiringTodayTV } = tv.useActions()\r\n  return (\r\n    <>\r\n      <Typography variant=\"button\" component=\"h6\">\r\n        Airing today TV\r\n      </Typography>\r\n      <Page content={tv.useAiringToday()} getter={getAiringTodayTV} />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { Page } from '../_base/baseTV'\r\n\r\nexport const Similar: React.FC = () => {\r\n  const { getSimilarTV } = tv.useActions()\r\n  return <Page content={tv.useSimilar()} getter={getSimilarTV} withURLParam />\r\n}\r\n","import React from 'react'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { Page } from '../_base/baseTV'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nexport const OnTheAir: React.FC = () => {\r\n  const { getOnTheAirTV } = tv.useActions()\r\n  return (\r\n    <>\r\n      <Typography variant=\"button\" component=\"h6\">\r\n        On the air TV\r\n      </Typography>\r\n      <Page content={tv.useOnTheAir()} getter={getOnTheAirTV} />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { CardsList } from '@src/components/CardsList'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { search } from '@src/store/modules/search'\r\nimport { parseQueryString } from '@src/lib/parse_query_string'\r\nimport { MovieCard } from '@src/components/CardsList/MovieCard'\r\nimport { TVCard } from '@src/components/CardsList/TVCard'\r\nimport { CardItem } from '@src/components/CardsList/CardItem'\r\nconst useStyles = makeStyles({\r\n  pagination: {\r\n    '& ul': { justifyContent: 'center', margin: '10px 0' },\r\n  },\r\n})\r\nexport const Search: React.FC = () => {\r\n  const classes = useStyles()\r\n  const searchRes = search.useResult()\r\n  const history = useHistory()\r\n  const params = useLocation()\r\n  let pageNumber = parseQueryString(params.search).page || 1\r\n  let query = parseQueryString(params.search).query || ''\r\n  const [page, setPage] = React.useState(parseInt(pageNumber))\r\n  const { find } = search.useActions()\r\n\r\n  const switchPage = (page: number) => {\r\n    setPage(page)\r\n    history.push(`?page=${page}&query=${query}`)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    //@ts-ignore\r\n    find(query, page).catch((err: any) => {\r\n      if (err.status === 422) switchPage(1)\r\n    })\r\n  }, [query, page])\r\n\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    switchPage(value)\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        По запросу <b>{query}</b> найдено {searchRes?.total_results} совпадений\r\n      </div>\r\n      {searchRes?.total_results ? (\r\n        <>\r\n          <CardsList>\r\n            {searchRes.results?.map((el:any) => {\r\n              switch (el.media_type) {\r\n                case 'movie':\r\n                  return <MovieCard isLoading={false} key={el.id} card={el} />\r\n                case 'tv':\r\n                  return <TVCard isLoading={false} key={el.id} card={el} />\r\n                default:\r\n                  return <CardItem key={el.id}>N/A(Persona)</CardItem>\r\n              }\r\n            })}\r\n          </CardsList>\r\n          <Pagination\r\n            className={classes.pagination}\r\n            count={searchRes?.total_pages}\r\n            page={page}\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n          />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { CardsList } from '@src/components/CardsList'\r\n\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { MovieCard } from '@src/components/CardsList/MovieCard'\r\nimport { Link } from 'react-router-dom'\r\nimport { Typography } from '@material-ui/core'\r\nimport { TVCard } from '@src/components/CardsList/TVCard'\r\n\r\nconst useStyles = makeStyles({\r\n  pagination: {\r\n    '& ul': { justifyContent: 'center', margin: '10px 0' },\r\n  },\r\n  slider: {\r\n    overflowX: 'auto',\r\n    marginBottom: '15px',\r\n    minWidth: '100%',\r\n  },\r\n})\r\n\r\nexport const Home: React.FC = () => {\r\n  const classes = useStyles()\r\n  const popularMovies = movies.usePopular()\r\n  const popularTTV = tv.usePopular()\r\n\r\n  const { getPopularMovies } = movies.useActions()\r\n  const { getPopularTV } = tv.useActions()\r\n  React.useEffect(() => {\r\n    getPopularMovies(1)\r\n    getPopularTV(1)\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Typography\r\n        style={{ textAlign: 'center' }}\r\n        variant=\"button\"\r\n        component=\"h6\"\r\n      >\r\n        <Link to={'/movies'}>Популярные фильмы</Link>\r\n      </Typography>\r\n      <div className={classes.slider}>\r\n        <CardsList style={{ flexWrap: 'nowrap' }}>\r\n          {popularMovies.data?.results?.map((el) => (\r\n            <MovieCard\r\n              isLoading={popularMovies.isLoading}\r\n              key={el.id}\r\n              card={el}\r\n            />\r\n          ))}\r\n        </CardsList>\r\n      </div>\r\n      <Typography\r\n        style={{ textAlign: 'center' }}\r\n        variant=\"button\"\r\n        component=\"h6\"\r\n      >\r\n        <Link to={'/tv'}>Популярные сериалы</Link>\r\n      </Typography>\r\n      <div className={classes.slider}>\r\n        <CardsList style={{ flexWrap: 'nowrap' }}>\r\n          {popularTTV.data?.results?.map((el) => (\r\n            <TVCard isLoading={popularTTV.isLoading} key={el.id} card={el} />\r\n          ))}\r\n        </CardsList>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Box, Card } from '@material-ui/core'\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { CardsList } from '@src/components/CardsList'\r\nimport { MovieCard } from '@src/components/CardsList/MovieCard'\r\nimport { Link } from 'react-router-dom'\r\nimport { TVCard } from '@src/components/CardsList/TVCard'\r\nimport { CardSlider } from '@src/components/CardSlider'\r\n\r\nexport const Profile: React.FC = () => {\r\n  const [value, setValue] = React.useState(0)\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue)\r\n  }\r\n  const moviesWL = movies.useWatchList()\r\n  const moviesFL = movies.useFavoriteList()\r\n  const moviesAct = movies.useActions()\r\n\r\n  const tvWL = tv.useWatchList()\r\n  const tvFL = tv.useFavoriteList()\r\n  const tvAct = tv.useActions()\r\n  React.useEffect(() => {\r\n    moviesAct.getWatchList(1)\r\n    moviesAct.getFavoriteList(1)\r\n    tvAct.getWatchList(1)\r\n    tvAct.getFavoriteList(1)\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          <Tab label=\"Movies\" />\r\n          <Tab label=\"TV\" />\r\n        </Tabs>\r\n      </div>\r\n      <TabPanel value={value} index={0}>\r\n        {!moviesWL.isLoading ? (\r\n          <>\r\n            {moviesWL.data.total_results > 0 && (\r\n              <>\r\n                <Typography variant=\"button\" component=\"h6\">\r\n                  Watchlist{' '}\r\n                  <Link to={'/profile/movies/watchlist'}>\r\n                    посмотреть весь список\r\n                  </Link>\r\n                </Typography>\r\n                <CardSlider>\r\n                  {moviesWL.data?.results?.map((el) => (\r\n                    <MovieCard\r\n                      isLoading={moviesWL.isLoading}\r\n                      key={el.id}\r\n                      card={el}\r\n                    />\r\n                  ))}\r\n                </CardSlider>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : null}\r\n        {!moviesFL.isLoading ? (\r\n          <>\r\n            {moviesFL.data.total_results > 0 && (\r\n              <>\r\n                <Typography variant=\"button\" component=\"h6\">\r\n                  FavoriteList{' '}\r\n                  <Link to={'/profile/movies/favoritelist'}>\r\n                    посмотреть весь список\r\n                  </Link>\r\n                </Typography>\r\n                <CardSlider>\r\n                  {moviesFL.data?.results?.map((el) => (\r\n                    <MovieCard\r\n                      isLoading={moviesFL.isLoading}\r\n                      key={el.id}\r\n                      card={el}\r\n                    />\r\n                  ))}\r\n                </CardSlider>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : null}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        {!tvWL.isLoading ? (\r\n          <>\r\n            {tvWL.data.total_results > 0 && (\r\n              <>\r\n                <Typography variant=\"button\" component=\"h6\">\r\n                  WatchList{' '}\r\n                  <Link to={'/profile/tv/watchlist'}>\r\n                    посмотреть весь список\r\n                  </Link>\r\n                </Typography>\r\n                <CardSlider>\r\n                  {tvWL.data?.results?.map((el) => (\r\n                    <TVCard isLoading={tvWL.isLoading} key={el.id} card={el} />\r\n                  ))}\r\n                </CardSlider>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : null}\r\n        {!tvFL.isLoading ? (\r\n          <>\r\n            {tvFL.data.total_results > 0 && (\r\n              <>\r\n                <Typography variant=\"button\" component=\"h6\">\r\n                  FavoriteList{' '}\r\n                  <Link to={'/profile/tv/favoritelist'}>\r\n                    посмотреть весь список\r\n                  </Link>\r\n                </Typography>\r\n                <CardSlider>\r\n                  {tvFL.data?.results?.map((el) => (\r\n                    <TVCard isLoading={tvFL.isLoading} key={el.id} card={el} />\r\n                  ))}\r\n                </CardSlider>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : null}\r\n      </TabPanel>\r\n    </div>\r\n  )\r\n}\r\ntype TabPanelProps = {\r\n  children?: React.ReactNode\r\n  index: any\r\n  value: any\r\n}\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          {children}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { Page } from '../../_base/baseMovies'\r\n\r\nexport const FavoriteList: React.FC = () => {\r\n  const { getFavoriteList } = movies.useActions()\r\n  return <Page content={movies.useFavoriteList()} getter={getFavoriteList} />\r\n}\r\n","import { Profile } from './profile'\r\nimport { movies } from './movies'\r\nimport { tv } from './tv'\r\n\r\nexport const profile = {\r\n  Profile,\r\n  movies,\r\n  tv,\r\n}\r\n","import { FavoriteList } from './favoritelist'\r\nimport { WatchList } from './watchlist'\r\n\r\nexport const movies = {\r\n  FavoriteList,\r\n  WatchList,\r\n}\r\n","import React from 'react'\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { Page } from '../../_base/baseMovies'\r\n\r\nexport const WatchList: React.FC = () => {\r\n  const { getWatchList } = movies.useActions()\r\n  return <Page content={movies.useWatchList()} getter={getWatchList} />\r\n}\r\n","import { FavoriteList } from './favoritelist'\r\nimport { WatchList } from './watchlist'\r\n\r\nexport const tv = {\r\n  FavoriteList,\r\n  WatchList,\r\n}\r\n","import React from 'react'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { Page } from '../../_base/baseTV'\r\n\r\nexport const FavoriteList: React.FC = () => {\r\n  const { getFavoriteList } = tv.useActions()\r\n  return <Page content={tv.useFavoriteList()} getter={getFavoriteList} />\r\n}\r\n","import React from 'react'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { Page } from '../../_base/baseTV'\r\n\r\nexport const WatchList: React.FC = () => {\r\n  const { getWatchList } = tv.useActions()\r\n  return <Page content={tv.useWatchList()} getter={getWatchList} />\r\n}\r\n","import React from 'react';\r\nimport { Route, RouteProps, Redirect } from 'react-router-dom';\r\nimport { auth } from '@src/store/modules/auth';\r\n\r\nexport const PrivateRoute: React.ComponentType<RouteProps> = (props) => {\r\n  const isAuth = auth.useStatus();\r\n  if (!isAuth) return <Redirect to=\"/login\" />;\r\n  return <Route {...props} />;\r\n};\r\n","import React, { useEffect } from 'react'\r\nimport { Switch, Route, useLocation } from 'react-router-dom'\r\n\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport { Header } from '@src/components/Header'\r\nimport { Auth, movies, tv, Search, Home, profile } from '@src/pages'\r\n\r\nimport { account } from '@src/store/modules/account'\r\nimport { auth } from '@src/store/modules/auth'\r\nimport { localStorage } from './lib/local-storage'\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core'\r\nimport { PrivateRoute } from './hoc/private-route'\r\n\r\nconst theme = createMuiTheme({})\r\nexport const App = () => {\r\n  const { getProfile } = account.useActions()\r\n  const { updateAuthStatus } = auth.useActions()\r\n  useEffect(() => {\r\n    const tryToGetProfile = async () => {\r\n      try {\r\n        const session_id: string = await localStorage.load('session').session_id\r\n\r\n        if (session_id) {\r\n          await getProfile()\r\n          await updateAuthStatus(true)\r\n        }\r\n      } catch {}\r\n    }\r\n    tryToGetProfile()\r\n  }, [])\r\n  const { pathname } = useLocation()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [pathname])\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div>\r\n        <Header />\r\n        <Container maxWidth=\"lg\">\r\n          <Switch>\r\n            <PrivateRoute exact path=\"/profile/\" component={profile.Profile} />\r\n            <PrivateRoute exact path=\"/profile/tv/watchlist\" component={profile.tv.WatchList} />\r\n            <PrivateRoute exact path=\"/profile/tv/favoritelist\" component={profile.tv.FavoriteList} />\r\n            <PrivateRoute exact path=\"/profile/movies/watchlist\" component={profile.movies.WatchList} />\r\n            <PrivateRoute exact path=\"/profile/movies/favoritelist\" component={profile.movies.FavoriteList} />\r\n\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/login\" component={Auth} />\r\n\r\n            <Route exact path=\"/movies/\" component={movies.Popular} />\r\n            <Route exact path=\"/movies/now-playing\" component={movies.NowPlaying}/>\r\n            <Route exact path=\"/movies/top-rated\" component={movies.TopRated} />\r\n            <Route exact path=\"/movies/upcoming\" component={movies.Upcoming} />\r\n            <Route exact path=\"/movies/genres/:genre\" component={movies.ByGenre} />\r\n            <Route exact path=\"/movies/:id\" component={movies.ByID} />\r\n            <Route exact path=\"/movies/recommendations/:id\" component={movies.Recommendations}/>\r\n            <Route exact path=\"/movies/similar/:id\" component={movies.Similar}/>\r\n\r\n            <Route exact path=\"/tv/\" component={tv.Popular} />\r\n            <Route exact path=\"/tv/top-rated\" component={tv.TopRated} />\r\n            <Route exact path=\"/tv/on-the-air\" component={tv.OnTheAir} />\r\n            <Route exact path=\"/tv/airing-today\" component={tv.AiringToday} />\r\n            <Route exact path=\"/tv/genres/:genre\" component={tv.ByGenre} />\r\n            <Route exact path=\"/tv/recommendations/:id\" component={tv.Recommendations}/>\r\n            <Route exact path=\"/tv/similar/:id\" component={tv.Similar} />\r\n            <Route exact path=\"/tv/:id\" component={tv.ByID} />\r\n\r\n            <Route exact path=\"/search\" component={Search} />\r\n\r\n            <Route render={() => <h4>404 not found</h4>} />\r\n          </Switch>\r\n        </Container>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n","import {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  compose,\r\n  createStore,\r\n  Action,\r\n} from 'redux'\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\r\nimport { authReducer } from './modules/auth'\r\nimport { accountReducer } from './modules/account'\r\nimport { moviesReducer } from './modules/movies'\r\nimport { tvReducer } from './modules/tv'\r\nimport { searchReducer } from './modules/search'\r\n\r\nlet rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  account: accountReducer,\r\n  movies: moviesReducer,\r\n  tv: tvReducer,\r\n  search: searchReducer,\r\n})\r\n\r\ntype RootReducerType = typeof rootReducer\r\n\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport type InferActionsTypes<T> = T extends {\r\n  [key: string]: (...args: any[]) => infer U\r\n}\r\n  ? U\r\n  : never\r\n\r\nexport type BaseThunkType<\r\n  A extends Action = Action,\r\n  R = Promise<any>\r\n> = ThunkAction<R, AppStateType, unknown, A>\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { App } from './App'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}