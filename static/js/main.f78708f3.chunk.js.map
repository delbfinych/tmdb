{"version":3,"sources":["store/modules/auth/selectors.ts","lib/local-storage.js","api/http-client.js","api/auth.ts","api/account.ts","lib/create_query_string.ts","api/movies.ts","api/search.ts","api/tv.ts","api/index.ts","store/modules/auth/reducer.ts","hooks/useActions.js","store/modules/auth/index.ts","store/modules/account/selectors.ts","store/modules/account/reducer.ts","store/modules/account/index.ts","components/Header/components/menu.tsx","components/Header/components/nav-items.tsx","store/modules/search/reducer.ts","store/modules/search/selectors.ts","store/modules/search/index.ts","components/Header/components/search-results-list.tsx","components/Header/index.tsx","pages/auth/index.tsx","store/modules/movies/reducers/currentMovie.ts","store/modules/movies/reducers/recommendations.ts","store/modules/movies/reducers/similar.ts","store/modules/movies/reducers/discovered.ts","store/modules/movies/reducers/nowPlaying.ts","store/modules/movies/reducers/popular.ts","store/modules/movies/reducers/topRated.ts","store/modules/movies/reducers/upcoming.ts","store/modules/movies/reducers/index.ts","store/modules/movies/selectors.ts","store/modules/movies/index.ts","components/CardsList/CardItem.tsx","components/CardsList/MovieCard.tsx","components/CardsList/index.tsx","lib/parse_query_string.js","pages/movies/_base/page.tsx","components/common/expand.tsx","pages/movies/by-id.tsx","pages/movies/by-genre.tsx","pages/movies/index.ts","pages/movies/popular.tsx","pages/movies/now-playing.tsx","pages/movies/recommendations.tsx","pages/movies/similar.tsx","pages/movies/top-rated.tsx","pages/movies/upcoming.tsx","store/modules/tv/reducers/currentTV.ts","store/modules/tv/reducers/recommendations.ts","store/modules/tv/reducers/similar.ts","store/modules/tv/reducers/discovered.ts","store/modules/tv/reducers/airingToday.ts","store/modules/tv/reducers/popular.ts","store/modules/tv/reducers/topRated.ts","store/modules/tv/reducers/onTheAir.ts","store/modules/tv/reducers/index.ts","store/modules/tv/selectors.ts","store/modules/tv/index.ts","components/CardsList/TVCard.tsx","pages/tv/_base/page.tsx","components/CardsList/TVSeasonCard.tsx","pages/tv/by-id.tsx","pages/tv/by-genre.tsx","pages/tv/index.ts","pages/tv/popular.tsx","pages/tv/recommendations.tsx","pages/tv/top-rated.tsx","pages/tv/airing-today.tsx","pages/tv/similar.tsx","pages/tv/on-the-air.tsx","pages/search/index.tsx","pages/home/index.tsx","App.tsx","store/index.ts","index.tsx"],"names":["getAuthStatus","state","auth","isAuth","localStorage","storeName","item","window","setItem","JSON","stringify","parse","getItem","removeItem","http","axios","create","baseURL","interceptors","request","use","config","params","process","session_id","encodeURIComponent","response","error","Promise","reject","data","status","_createRequestToken","get","then","res","_createSessionWithLogin","username","password","request_token","post","_createSession","_saveSessionToLocalStorage","expires_at","token","signIn","a","tokenResponse","approvedTokenResponse","sessionResponse","signUp","win","open","resolve","setTimeout","closed","signOut","delete","authApi","accountApi","createQueryString","obj","str","p","hasOwnProperty","push","join","moviesApi","movie_id","append_to_response","page","region","args","searchApi","query","tvApi","tv_id","getImageLink","path","size","initialState","responseStatus","ok","localActions","type","payload","actions","dispatch","message","updateAuthStatus","useActions","useDispatch","useMemo","bindActionCreators","useSelector","getProfileDetails","account","profileData","setProfileDetails","user","getProfile","dropProfile","FadeMenu","props","React","useState","anchorEl","setAnchorEl","handleClose","onSignOutClick","Avatar","aria-controls","aria-haspopup","onClick","event","currentTarget","src","avatarLink","Menu","id","keepMounted","Boolean","onClose","MenuItem","useStyles","makeStyles","theme","title","flexGrow","link","color","textDecoration","navWrapper","position","display","listStyle","cursor","padding","navContent","backgroundColor","width","top","NavItems","classes","Typography","variant","className","Button","to","searchResult","setResult","result","find","inSearchInputMode","getSearchResult","search","createStyles","root","palette","background","paper","zIndex","drawer","SearchResultsList","isOpened","results","onRedirect","history","useHistory","List","total_results","map","media","ListItem","key","role","undefined","dense","button","getUrl","ListItemIcon","getIcon","ListItemText","style","marginTop","primary","getTitle","ListItemSecondaryAction","textAlign","media_type","release_date","Date","getFullYear","name","first_air_date","marginBottom","menuButton","marginRight","spacing","cursorPointer","backdrop","appBar","searchForm","transition","Header","profile","searchInput","useRef","setOpen","searchValue","setSearchValue","didResultFind","setFindStatus","timeout","onSubmit","preventDefault","closeSearchInput","current","focus","Backdrop","AppBar","Toolbar","target","dataset","data-target","InputBase","value","onChange","clearTimeout","inputRef","placeholder","inputProps","IconButton","avatar","gravatar","hash","Fragment","margin","maxWidth","flexDirection","alignItems","secondary","main","form","submit","Auth","onFormSubmit","onSignUpClick","isFormFieldValid","info","touched","CssBaseline","component","validate","values","errors","render","handleSubmit","submitting","pristine","input","meta","TextField","required","fullWidth","label","autoComplete","autoFocus","helperText","FormControlLabel","control","Checkbox","disabled","Grid","container","Link","isLoading","setData","setLoadingStatus","setError","moviesReducer","combineReducers","currentMovie","action","recommendations","similar","popular","nowPlaying","upcoming","topRated","discovered","getMovieDetails","getRecommendations","getSimilarMovies","getDiscoveredMovies","getNowPlayingMovies","getPopularMovies","getTopRatedMovies","getUpcomingMovies","getDetails","movies","getSimilar","getPopular","getNowPlaying","getTopRated","getUpcoming","getDiscovered","useDetails","height","cardAction","justifyContent","grid","flexShrink","CardItem","children","xs","sm","md","lg","Paper","Card","CardActionArea","cardContent","alignSelf","boxSizing","skeletonMedia","MovieCard","card","handleClick","useCallback","toString","Skeleton","animation","alt","poster_path","CardContent","gutterBottom","toLocaleDateString","CardsList","styles","Array","fill","el","idx","parseQueryString","substring","split","reduce","acc","decodeURIComponent","pagination","Page","content","getter","withURLParam","useLocation","pageNumber","parseInt","setPage","matchedParams","useRouteMatch","movieID","useEffect","Pagination","count","total_pages","switchPage","expandBtn","expanded","Expand","isExpanded","switchExpansion","header","backgroundPosition","backgroundSize","backgroundRepeat","containerImage","containerExternalLinks","fontSize","image","imageSkeleton","slider","overflowX","minWidth","details","zidx","genresLink","videoWrapper","paddingTop","left","Popular","NowPlaying","ByID","useRecommendations","useSimilar","videos","detailsOverview","overview","original_title","Rating","max","vote_average","readOnly","Box","runtime","Math","trunc","tagline","Number","isInteger","budget","genres","length","slice","flexWrap","overflowY","frameBorder","allowFullScreen","Recommendations","Similar","TopRated","Upcoming","ByGenre","movi","genre_id","genre","with_genres","tvReducer","currentTV","airingToday","onTheAir","getTVDetails","getSimilarTV","getDiscoveredTV","getAiringTodayTV","getPopularTV","getTopRatedTV","getOnTheAirTV","tv","getOnTheAir","getAiringToday","TVCard","tvID","TVSeasonCard","location","pathname","season_number","original_name","episode_run_time","number_of_episodes","number_of_seasons","seasons","tvs","AiringToday","OnTheAir","Search","searchRes","catch","err","Home","popularMovies","popularTTV","createMuiTheme","App","tryToGetProfile","scrollTo","ThemeProvider","Container","exact","rootReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f78708f3.chunk.js","sourcesContent":["import { AppStateType } from '@src/store';\r\n\r\nexport const getAuthStatus = (state: AppStateType) => state.auth.isAuth;\r\nexport const getResponseStatus = (state: AppStateType) =>\r\n  state.auth.responseStatus;\r\n","export const localStorage = {\r\n  save: (storeName, item = {}) => {\r\n    window.localStorage.setItem(storeName, JSON.stringify(item));\r\n  },\r\n  load: (storeName) => {\r\n    return JSON.parse(window.localStorage.getItem(storeName)) || {};\r\n  },\r\n  remove: (storeName) => {\r\n    window.localStorage.removeItem(storeName);\r\n  },\r\n};\r\n","import axios from 'axios'\r\nimport { localStorage } from '@src/lib/local-storage'\r\n\r\nexport const http = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3/',\r\n})\r\n\r\nhttp.interceptors.request.use((config) => {\r\n  config.params = config.params || {}\r\n  config.params['api_key'] = process.env.REACT_APP_API_KEY\r\n\r\n  const session_id = localStorage.load('session').session_id || ''\r\n  config.params['session_id'] = encodeURIComponent(session_id)\r\n\r\n  config.params['language'] = encodeURIComponent('en-US')\r\n  return config\r\n})\r\n\r\nhttp.interceptors.response.use(\r\n  function (response) {\r\n    return response\r\n  },\r\n  function (error) {\r\n    return Promise.reject({\r\n      response: {\r\n        data: error.response.data,\r\n        status: error.response.status,\r\n      },\r\n    })\r\n  }\r\n)\r\n","import { http } from './http-client.js';\r\nimport { localStorage } from '@src/lib/local-storage';\r\n\r\ntype TCGSSuccess = {\r\n  success: boolean;\r\n  guest_session_id: string;\r\n  expires_at: string;\r\n};\r\nconst _createGuestSession = () =>\r\n  http.get<TCGSSuccess>('/authentication/guest_session/new').then((res) => res);\r\n\r\ntype TCRTSuccess = {\r\n  success: boolean;\r\n  expires_at: string;\r\n  request_token: string;\r\n};\r\n\r\nconst _createRequestToken = () =>\r\n  http.get<TCRTSuccess>('/authentication/token/new').then((res) => res);\r\n\r\nconst _createSessionWithLogin = (\r\n  username: string,\r\n  password: string,\r\n  request_token: string\r\n) =>\r\n  http\r\n    .post<TCRTSuccess>('/authentication/token/validate_with_login', {\r\n      username,\r\n      password,\r\n      request_token,\r\n    })\r\n    .then((res) => res.data);\r\n\r\ntype TCSSuccess = {\r\n  type: 'success';\r\n  success: boolean;\r\n  session_id: string;\r\n};\r\n\r\nconst _createSession = (request_token: string) =>\r\n  http\r\n    .post<TCSSuccess>('/authentication/session/new', {\r\n      request_token,\r\n    })\r\n    .then((res) => res.data);\r\n\r\ntype TDSSuccess = {\r\n  success: boolean;\r\n};\r\n\r\nconst _deleteSession = (session_id: string) =>\r\n  http\r\n    .delete<TDSSuccess>('/authentication/session', { data: { session_id } })\r\n    .then((res) => res.data);\r\n\r\nconst _getAuthLink = (token: string) =>\r\n  `https://www.themoviedb.org/authenticate/${token}`;\r\n\r\nconst _saveSessionToLocalStorage = (\r\n  session_id: string,\r\n  request_token: string,\r\n  expires_at: string\r\n): void =>\r\n  localStorage.save('session', {\r\n    session_id,\r\n    token: { request_token, expires_at },\r\n  });\r\n\r\nconst signIn = async (username: string, password: string) => {\r\n  try {\r\n    const tokenResponse = await _createRequestToken();\r\n    const approvedTokenResponse = await _createSessionWithLogin(\r\n      username,\r\n      password,\r\n      tokenResponse.data.request_token\r\n    );\r\n\r\n    const sessionResponse = await _createSession(\r\n      approvedTokenResponse.request_token\r\n    );\r\n\r\n    _saveSessionToLocalStorage(\r\n      sessionResponse.session_id,\r\n      approvedTokenResponse.request_token,\r\n      approvedTokenResponse.expires_at\r\n    );\r\n    return sessionResponse;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst signUp = async () => {\r\n  const tokenResponse = await _createRequestToken();\r\n  const win = window.open(\r\n    _getAuthLink(tokenResponse.data.request_token),\r\n    '_blank',\r\n    'height=600,width=600'\r\n  );\r\n  while (true) {\r\n    await new Promise((resolve) => setTimeout(resolve, 500));\r\n\r\n    if (win!.closed) {\r\n      const sessionResponse = await _createSession(\r\n        tokenResponse.data.request_token\r\n      );\r\n      _saveSessionToLocalStorage(\r\n        sessionResponse.session_id,\r\n        tokenResponse.data.request_token,\r\n        tokenResponse.data.expires_at\r\n      );\r\n      return sessionResponse;\r\n    }\r\n  }\r\n};\r\nconst signOut = async () => {\r\n  try {\r\n    _deleteSession(localStorage.load('session').session_id);\r\n  } finally {\r\n    localStorage.remove('session');\r\n  }\r\n};\r\nexport const authApi = {\r\n  signIn,\r\n  signUp,\r\n  signOut,\r\n};\r\n","import { http } from './http-client.js';\r\nimport { TUserProfile } from '@src/store/modules/account/types';\r\n\r\nconst getDetails = () =>\r\n  http.get<TUserProfile>('/account').then((res) => res.data);\r\n\r\nexport const accountApi = { getDetails };\r\n","export const createQueryString = function (obj: any) {\r\n  let str: Array<string> = []\r\n  for (let p in obj)\r\n    if (obj.hasOwnProperty(p) && obj[p]) {\r\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]))\r\n    }\r\n  return str.join('&')\r\n}\r\n","import { http } from './http-client.js'\r\nimport {\r\n  TMovieDetails,\r\n  TPopularMovies,\r\n  TNowPlayingMovies,\r\n  TTopRatedMovies,\r\n  TUpcomingMovies,\r\n  TSimilarMovies,\r\n  TRecommendations,\r\n  TVideo,\r\n  TMovieExternalIds,\r\n  TDiscoveredMovies,\r\n  TDiscoverMovie,\r\n} from '@src/store/modules/movies/types'\r\nimport { createQueryString } from '@src/lib/create_query_string'\r\n\r\nconst getDetails = (movie_id: number, append_to_response: string) =>\r\n  http\r\n    .get<TMovieDetails>(\r\n      `/movie/${movie_id}?${createQueryString({ append_to_response })}`\r\n    )\r\n    .then((res) => res.data)\r\n\r\nconst getPopular = (page?: number, region?: string) =>\r\n  http\r\n    .get<TPopularMovies>(\r\n      `/movie/popular?${createQueryString({ page, region })}`\r\n    )\r\n    .then((res) => res.data)\r\n\r\nconst getNowPlaying = (page?: number, region?: string) =>\r\n  http\r\n    .get<TNowPlayingMovies>(\r\n      `/movie/now_playing?${createQueryString({ page, region })}`\r\n    )\r\n    .then((res) => res.data)\r\n\r\nconst getTopRated = (page?: number, region?: string) =>\r\n  http\r\n    .get<TTopRatedMovies>(\r\n      `/movie/top_rated?${createQueryString({ page, region })}`\r\n    )\r\n    .then((res) => res.data)\r\n\r\nconst getUpcoming = (page?: number) =>\r\n  http\r\n    .get<TUpcomingMovies>(`/movie/upcoming?${createQueryString({ page })}`)\r\n    .then((res) => res.data)\r\n\r\nconst getSimilar = (movie_id: number, page?: number) =>\r\n  http\r\n    .get<TSimilarMovies>(\r\n      `/movie/${movie_id}/similar?${createQueryString({ page })}`\r\n    )\r\n    .then((res) => res.data)\r\n\r\nconst getRecommendations = (movie_id: number, page?: number) =>\r\n  http\r\n    .get<TRecommendations>(\r\n      `/movie/${movie_id}/recommendations?${createQueryString({\r\n        page,\r\n      })}`\r\n    )\r\n    .then((res) => res.data)\r\nconst getVideos = (movie_id: number) =>\r\n  http.get<TVideo>(`/movie/${movie_id}/videos?`).then((res) => res.data)\r\n\r\nconst getExternalIds = (movie_id: number) =>\r\n  http\r\n    .get<TMovieExternalIds>(`/movie/${movie_id}/external_ids?`)\r\n    .then((res) => res.data)\r\n\r\nconst getDiscovered = (args: TDiscoverMovie) =>\r\n  http\r\n    .get<TDiscoveredMovies>(\r\n      `/discover/movie?${createQueryString({\r\n        ...args,\r\n      })}`\r\n    )\r\n    .then((res) => res.data)\r\n\r\nexport const moviesApi = {\r\n  getDetails,\r\n  getPopular,\r\n  getNowPlaying,\r\n  getTopRated,\r\n  getUpcoming,\r\n  getSimilar,\r\n  getRecommendations,\r\n  getVideos,\r\n  getExternalIds,\r\n  getDiscovered,\r\n}\r\n","import { http } from './http-client'\r\nimport { TSearchResult } from '@src/store/modules/search/types'\r\nimport { createQueryString } from '@src/lib/create_query_string'\r\n\r\nconst search = (query: string, page?: number) =>\r\n  http\r\n    .get<TSearchResult>(\r\n      `search/multi?${createQueryString({\r\n        page,\r\n        query,\r\n      })}`\r\n    )\r\n    .then((res) => res.data)\r\nexport const searchApi = {\r\n  search,\r\n}\r\n","import { http } from './http-client.js'\r\nimport {\r\n  TTVDetails,\r\n  TPopularTV,\r\n  TTopRatedTV,\r\n  TOnTheAirTV,\r\n  TAiringTodayTV,\r\n  TRecommendations,\r\n  TSimilarTV,\r\n  TTVExternalIds,\r\n  TVideo,\r\n  TDiscoveredTV,\r\n  TDiscoverTV,\r\n} from '@src/store/modules/tv/types'\r\nimport { createQueryString } from '@src/lib/create_query_string'\r\n\r\nconst getDetails = (tv_id: number, append_to_response: string) =>\r\n  http\r\n    .get<TTVDetails>(\r\n      `/tv/${tv_id}?${createQueryString({ append_to_response })}`\r\n    )\r\n    .then((res) => res.data)\r\nconst getPopular = (page?: number) =>\r\n  http\r\n    .get<TPopularTV>(`/tv/popular?${createQueryString({ page })}`)\r\n    .then((res) => res.data)\r\nconst getTopRated = (page?: number) =>\r\n  http\r\n    .get<TTopRatedTV>(`/tv/top_rated?${createQueryString({ page })}`)\r\n    .then((res) => res.data)\r\nconst getOnTheAir = (page?: number) =>\r\n  http\r\n    .get<TOnTheAirTV>(`/tv/on_the_air?${createQueryString({ page })}`)\r\n    .then((res) => res.data)\r\nconst getAiringToday = (page?: number) =>\r\n  http\r\n    .get<TAiringTodayTV>(`/tv/airing_today?${createQueryString({ page })}`)\r\n    .then((res) => res.data)\r\nconst getSimilar = (tv_id: number, page?: number) =>\r\n  http\r\n    .get<TSimilarTV>(`/tv/${tv_id}/similar?${createQueryString({ page })}`)\r\n    .then((res) => res.data)\r\n\r\nconst getRecommendations = (tv_id: number, page?: number) =>\r\n  http\r\n    .get<TRecommendations>(\r\n      `/tv/${tv_id}/recommendations?${createQueryString({\r\n        page,\r\n      })}`\r\n    )\r\n    .then((res) => res.data)\r\nconst getVideos = (movie_id: number) =>\r\n  http.get<TVideo>(`/tv/${movie_id}/videos?`).then((res) => res.data)\r\n\r\nconst getExternalIds = (movie_id: number) =>\r\n  http\r\n    .get<TTVExternalIds>(`/tv/${movie_id}/external_ids?`)\r\n    .then((res) => res.data)\r\n\r\nconst getDiscovered = (args: TDiscoverTV) =>\r\n  http\r\n    .get<TDiscoveredTV>(\r\n      `/discover/tv?${createQueryString({\r\n        ...args,\r\n      })}`\r\n    )\r\n    .then((res) => res.data)\r\n\r\nexport const tvApi = {\r\n  getDetails,\r\n  getPopular,\r\n  getTopRated,\r\n  getOnTheAir,\r\n  getAiringToday,\r\n  getSimilar,\r\n  getVideos,\r\n  getRecommendations,\r\n  getExternalIds,\r\n  getDiscovered,\r\n}\r\n","export { authApi } from './auth'\r\nexport { accountApi } from './account'\r\nexport { moviesApi } from './movies'\r\nexport { searchApi } from './search'\r\nexport { tvApi } from './tv'\r\n//@ts-ignore\r\nexport const getImageLink = (path, size = 'w500') =>\r\n  `https://image.tmdb.org/t/p/${size}/${path}`\r\n","import { InferActionsTypes, BaseThunkType } from '../..';\r\nimport { authApi } from '@src/api';\r\nimport { Dispatch } from 'redux';\r\nimport { AxiosResponse } from 'axios';\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof localActions>;\r\ntype ThunkType = BaseThunkType<ActionsTypes>;\r\ntype TInitialState = typeof initialState;\r\n\r\ntype TResponseStatus = {\r\n  ok: boolean;\r\n  response: AxiosResponse | null;\r\n};\r\nlet initialState = {\r\n  isAuth: false,\r\n  responseStatus: { ok: false, response: {} } as TResponseStatus,\r\n};\r\n\r\nexport const authReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/auth/SET_AUTH_STATUS':\r\n      return { ...state, isAuth: action.payload.isAuth };\r\n    case 'tmdb/auth/SET_RESPONSE_STATUS':\r\n      return {\r\n        ...state,\r\n        responseStatus: {\r\n          ok: action.payload.ok,\r\n          response: action.payload.response,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst localActions = {\r\n  setAuthStatus: (isAuth: boolean) =>\r\n    ({ type: 'tmdb/auth/SET_AUTH_STATUS', payload: { isAuth } } as const),\r\n  setResponseStatus: ({ ok, response }: TResponseStatus) =>\r\n    ({\r\n      type: 'tmdb/auth/SET_RESPONSE_STATUS',\r\n      payload: { ok, response },\r\n    } as const),\r\n};\r\nconst updateAuthStatus = (isAuth: boolean): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  dispatch(localActions.setAuthStatus(isAuth));\r\n};\r\nconst signIn = (username: string, password: string): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    await authApi.signIn(username, password);\r\n\r\n    dispatch(localActions.setAuthStatus(true));\r\n    dispatch(localActions.setResponseStatus({ ok: true, response: null }));\r\n  } catch (error) {\r\n    dispatch(\r\n      localActions.setResponseStatus({ ok: false, response: error.response })\r\n    );\r\n    throw error.message;\r\n  }\r\n};\r\n\r\nconst signUp = (): ThunkType => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  try {\r\n    await authApi.signUp();\r\n\r\n    dispatch(localActions.setAuthStatus(true));\r\n    dispatch(localActions.setResponseStatus({ ok: true, response: null }));\r\n  } catch (error) {\r\n    dispatch(\r\n      localActions.setResponseStatus({ ok: false, response: error.response })\r\n    );\r\n    throw error.message;\r\n  }\r\n};\r\nconst signOut = (): ThunkType => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  try {\r\n    authApi.signOut();\r\n    dispatch(localActions.setAuthStatus(false));\r\n    dispatch(localActions.setResponseStatus({ ok: true, response: null }));\r\n  } catch (error) {\r\n    dispatch(\r\n      localActions.setResponseStatus({ ok: false, response: error.response })\r\n    );\r\n    throw error.message;\r\n  }\r\n};\r\n\r\nexport const actions = {\r\n  signUp,\r\n  signOut,\r\n  signIn,\r\n  updateAuthStatus,\r\n};\r\n","import { bindActionCreators } from 'redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useMemo } from 'react';\r\n\r\nexport const useActions = (actions) => {\r\n  const dispatch = useDispatch();\r\n  return useMemo(() => {\r\n    return bindActionCreators(actions, dispatch);\r\n  }, [dispatch]);\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport { getResponseStatus, getAuthStatus } from './selectors';\r\n\r\nimport { actions, authReducer } from './reducer';\r\nimport { useActions } from '@src/hooks/useActions';\r\n\r\nexport { authReducer };\r\n\r\nexport const auth = {\r\n  useStatus: () => useSelector(getAuthStatus),\r\n  useResponseStatus: () => useSelector(getResponseStatus),\r\n  useActions: (): typeof actions => useActions(actions),\r\n};\r\n","import { AppStateType } from '@src/store';\r\n\r\nexport const getProfileDetails = (state: AppStateType) =>\r\n  state.account.profileData;\r\n","import { InferActionsTypes, BaseThunkType } from '../..';\r\nimport { accountApi } from '@src/api';\r\nimport { Dispatch } from 'redux';\r\nimport { TUserProfile } from '@src/store/modules/account/types';\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof localActions>;\r\ntype ThunkType = BaseThunkType<ActionsTypes>;\r\ntype TInitialState = typeof initialState;\r\n\r\nlet initialState = {\r\n  profileData: {} as TUserProfile | null,\r\n};\r\nexport const accountReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/account/SET_PROFILE_DETAILS':\r\n      return { ...state, profileData: action.payload.user };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst localActions = {\r\n  setProfileDetails: (user: typeof initialState.profileData) =>\r\n    ({\r\n      type: 'tmdb/account/SET_PROFILE_DETAILS',\r\n      payload: { user },\r\n    } as const),\r\n};\r\n\r\nconst getProfile = (): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(localActions.setProfileDetails(await accountApi.getDetails()));\r\n  } catch (error) {\r\n    throw error.response;\r\n  }\r\n};\r\n\r\nconst dropProfile = (): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(localActions.setProfileDetails(null));\r\n  } catch (error) {\r\n    throw error.response;\r\n  }\r\n};\r\n\r\nexport const actions = {\r\n  getProfile,\r\n  dropProfile,\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport { getProfileDetails } from './selectors';\r\n\r\nimport { actions, accountReducer } from './reducer';\r\nimport { useActions } from '@src/hooks/useActions';\r\n\r\nexport { accountReducer };\r\n\r\nexport const account = {\r\n  useProfileDetails: () => useSelector(getProfileDetails),\r\n  useActions: (): typeof actions => useActions(actions),\r\n};\r\n","import React from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { auth } from '@src/store/modules/auth';\r\nimport { account } from '@src/store/modules/account';\r\n\r\nexport const FadeMenu = (props: { avatarLink: string | undefined }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const { signOut } = auth.useActions();\r\n  const { dropProfile } = account.useActions();\r\n\r\n  const onSignOutClick = async () => {\r\n    try {\r\n      await signOut();\r\n      await dropProfile();\r\n    } catch (err) {}\r\n  };\r\n  return (\r\n    <div>\r\n      <Avatar\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n        src={props.avatarLink}\r\n      />\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleClose}>My account</MenuItem>\r\n        <MenuItem onClick={onSignOutClick}>Logout</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { makeStyles, Typography, Button, Theme } from '@material-ui/core'\r\nimport { NavLink, Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    color: 'white',\r\n    textDecoration: 'none',\r\n  },\r\n  navWrapper: {\r\n    position: 'relative',\r\n    '&:hover div': {\r\n      display: 'block',\r\n    },\r\n    '& ul': {\r\n      listStyle: 'none',\r\n      '& li': {\r\n        cursor: 'pointer',\r\n        padding: '5px 0px',\r\n        '& a': {\r\n          color: 'black',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  navContent: {\r\n    display: 'none',\r\n    position: 'absolute',\r\n    backgroundColor: 'white',\r\n    width: '120%',\r\n    top: '85%',\r\n  },\r\n}))\r\n\r\nexport const NavItems: React.FC = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Typography variant=\"h6\" className={classes.title}>\r\n      <Button color=\"inherit\">\r\n        <NavLink className={classes.link} to=\"/\">\r\n          Home\r\n        </NavLink>\r\n      </Button>\r\n\r\n      <Button className={classes.navWrapper} color=\"inherit\">\r\n        <div className={classes.link}>Movies</div>\r\n        <div className={classes.navContent}>\r\n          <ul>\r\n            <li>\r\n              <Link to={'/movies/'}>Popular</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={'/movies/now-playing'}>Now playing</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={'/movies/top-rated'}>Top rated</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={'/movies/upcoming'}>Upcoming</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </Button>\r\n      <Button className={classes.navWrapper} color=\"inherit\">\r\n        <div className={classes.link}>TV Series</div>\r\n        <div className={classes.navContent}>\r\n          <ul>\r\n            <li>\r\n              <Link to={'/tv/'}>Popular</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={'/tv/airing-today'}>Airing today</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={'/tv/top-rated'}>Top rated</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={'/tv/on-the-air'}>On the air</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </Button>\r\n    </Typography>\r\n  )\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { searchApi } from '@src/api'\r\n\r\nimport { TSearchResult } from './types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof localActions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  searchResult: {} as TSearchResult | null,\r\n}\r\n\r\nexport const searchReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/search/SET_RESULT':\r\n      return { ...state, searchResult: action.payload.result }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst localActions = {\r\n  setResult: (result: TSearchResult | null) =>\r\n    ({\r\n      type: 'tmdb/search/SET_RESULT',\r\n      payload: { result },\r\n    } as const),\r\n}\r\n\r\nconst find = (\r\n  query: string,\r\n  page?: number,\r\n  inSearchInputMode?: boolean\r\n): ThunkType => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  try {\r\n    if (!inSearchInputMode) dispatch(localActions.setResult(null))\r\n    dispatch(localActions.setResult(await searchApi.search(query, page)))\r\n  } catch (error) {\r\n    throw error.response\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  find,\r\n}\r\n","import { AppStateType } from '@src/store'\r\n\r\nexport const getSearchResult = (state: AppStateType) => state.search.searchResult\r\n","import { useSelector } from 'react-redux'\r\nimport { searchReducer, actions } from './reducer'\r\nimport { getSearchResult } from './selectors'\r\nimport { useActions } from '@src/hooks/useActions'\r\n\r\nexport { searchReducer }\r\n\r\nexport const search = {\r\n  useResult: () => useSelector(getSearchResult),\r\n  useActions: (): typeof actions => useActions(actions),\r\n}\r\n","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport { TSearchResult, TMultiSearch } from '@src/store/modules/search/types'\r\nimport { ListItemIcon, Typography } from '@material-ui/core'\r\nimport TvIcon from '@material-ui/icons/Tv'\r\nimport MovieIcon from '@material-ui/icons/Movie'\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: 0,\r\n      position: 'absolute',\r\n      width: '100%',\r\n      backgroundColor: theme.palette.background.paper,\r\n      zIndex: theme.zIndex.drawer + 3,\r\n    },\r\n  })\r\n)\r\ntype T = {\r\n  isOpened: boolean\r\n  results: TSearchResult | null\r\n  onRedirect: () => void\r\n}\r\nexport const SearchResultsList: React.FC<T> = ({\r\n  isOpened,\r\n  results,\r\n  onRedirect,\r\n}) => {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  return (\r\n    <>\r\n      {isOpened && (\r\n        <List className={classes.root}>\r\n          {results?.total_results ? (\r\n            results?.results?.map((media) => {\r\n              return (\r\n                <ListItem\r\n                  key={media.id}\r\n                  role={undefined}\r\n                  dense\r\n                  button\r\n                  onClick={() => {\r\n                    onRedirect()\r\n                    history.push(getUrl(media))\r\n                  }}\r\n                >\r\n                  <ListItemIcon>{getIcon(media)}</ListItemIcon>\r\n                  <ListItemText\r\n                    style={{ marginTop: 0 }}\r\n                    primary={`${getTitle(media)}`}\r\n                  />\r\n                  <ListItemSecondaryAction></ListItemSecondaryAction>\r\n                </ListItem>\r\n              )\r\n            })\r\n          ) : (\r\n            <Typography style={{ textAlign: 'center' }} variant=\"h5\">\r\n              НЕТ РЕЗУЛЬТАТОВ\r\n            </Typography>\r\n          )}\r\n        </List>\r\n      )}\r\n    </>\r\n  )\r\n}\r\nconst getTitle = (media: TMultiSearch) => {\r\n  switch (media.media_type) {\r\n    case 'movie':\r\n      return `${media.title} (Movie) ${\r\n        media.release_date ? new Date(media.release_date).getFullYear() : ''\r\n      }`\r\n    case 'tv':\r\n      return `${media.name} (TV) ${\r\n        media.first_air_date ? new Date(media.first_air_date).getFullYear() : ''\r\n      }`\r\n    default:\r\n      return 'NOT STATED (Persona)'\r\n  }\r\n}\r\nconst getIcon = (media: TMultiSearch) => {\r\n  switch (media.media_type) {\r\n    case 'movie':\r\n      return <MovieIcon />\r\n    case 'tv':\r\n      return <TvIcon />\r\n    default:\r\n      return <PersonIcon />\r\n  }\r\n}\r\n\r\nconst getUrl = (media: TMultiSearch) => {\r\n  switch (media.media_type) {\r\n    case 'movie':\r\n      return '/movies/' + media.id\r\n    case 'tv':\r\n      return '/tv/' + media.id\r\n    default:\r\n      return ''\r\n  }\r\n}\r\n","import React, { ReactEventHandler } from 'react'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport { NavLink, Link, useHistory } from 'react-router-dom'\r\nimport { FadeMenu } from './components/menu'\r\nimport { auth } from '@src/store/modules/auth'\r\nimport { account } from '@src/store/modules/account'\r\nimport { Backdrop, IconButton, InputBase } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport { NavItems } from './components/nav-items'\r\nimport { search } from '@src/store/modules/search'\r\nimport { SearchResultsList } from './components/search-results-list'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: '10px',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  link: {\r\n    color: 'white',\r\n    textDecoration: 'none',\r\n  },\r\n  cursorPointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n    zIndex: theme.zIndex.drawer + 2,\r\n  },\r\n  searchForm: {\r\n    transition: 'width 0.2s',\r\n    width: 0,\r\n    backgroundColor: 'white',\r\n    color: 'black',\r\n    '&.focused': {\r\n      width: '40%',\r\n    },\r\n    '& > div': {\r\n      width: '100%',\r\n    },\r\n  },\r\n}))\r\n\r\nexport const Header: React.ComponentType = () => {\r\n  const classes = useStyles()\r\n  const isAuth = auth.useStatus()\r\n  const profile = account.useProfileDetails()\r\n  const history = useHistory()\r\n\r\n  const searchInput = React.useRef<HTMLElement>(null)\r\n\r\n  const [open, setOpen] = React.useState(false)\r\n  const [searchValue, setSearchValue] = React.useState('')\r\n\r\n  const handleToolBarClick = (event: any) => {\r\n    if (event.target.dataset.target !== 'search') closeSearchInput()\r\n  }\r\n\r\n  const { find } = search.useActions()\r\n  const searchResult = search.useResult()\r\n  const [didResultFind, setFindStatus] = React.useState(false)\r\n\r\n  let timeout = React.useRef(0)\r\n  const handleChange = (event: any) => {\r\n    const value = event.target.value\r\n    if (timeout) clearTimeout(timeout.current)\r\n    setSearchValue(value)\r\n    timeout.current = window.setTimeout(() => {\r\n      //@ts-ignore\r\n      if (value) find(value, 1, true).then(() => setFindStatus(true))\r\n    }, 300)\r\n  }\r\n\r\n  const onSubmit = (event: any) => {\r\n    event.preventDefault()\r\n    if (open) {\r\n      if (!searchValue) return\r\n      history.push(`/search?query=${searchValue}`)\r\n      closeSearchInput()\r\n    } else {\r\n      setOpen(true)\r\n      searchInput.current?.focus()\r\n    }\r\n  }\r\n  const closeSearchInput = () => {\r\n    setOpen(false)\r\n    setFindStatus(false)\r\n    setSearchValue('')\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Backdrop\r\n        className={`${classes.backdrop} ${classes.cursorPointer}`}\r\n        open={open}\r\n        onClick={closeSearchInput}\r\n      ></Backdrop>\r\n      <AppBar className={classes.appBar} position=\"static\">\r\n        <Toolbar onClick={handleToolBarClick}>\r\n          <NavItems />\r\n          <form\r\n            onSubmit={onSubmit}\r\n            className={`${classes.searchForm} ${open ? 'focused' : ''}`}\r\n            data-target=\"search\"\r\n          >\r\n            <InputBase\r\n              value={searchValue}\r\n              onChange={handleChange}\r\n              inputRef={searchInput}\r\n              placeholder=\"Type to search\"\r\n              inputProps={{ 'aria-label': 'search', 'data-target': 'search' }}\r\n            />\r\n          </form>\r\n          <IconButton data-target=\"search\" onClick={onSubmit}>\r\n            <SearchIcon\r\n              data-target=\"search\"\r\n              className={classes.cursorPointer}\r\n              style={{ color: 'white' }}\r\n            ></SearchIcon>\r\n          </IconButton>\r\n\r\n          {isAuth ? (\r\n            <FadeMenu\r\n              avatarLink={`https://www.gravatar.com/avatar/${profile?.avatar?.gravatar?.hash}`}\r\n            />\r\n          ) : (\r\n            <React.Fragment>\r\n              <Button color=\"inherit\">\r\n                <Link className={classes.link} to=\"/login\">\r\n                  Sign In\r\n                </Link>\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <SearchResultsList\r\n        isOpened={didResultFind}\r\n        results={searchResult}\r\n        onRedirect={() => {\r\n          closeSearchInput()\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nimport { Field, Form } from 'react-final-form';\r\nimport { auth } from '@src/store/modules/auth';\r\nimport { account } from '@src/store/modules/account';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    margin: '0 auto',\r\n    maxWidth: '760px',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\ntype TFormValues = {\r\n  username: string;\r\n  password: string;\r\n};\r\n\r\nexport const Auth: React.FC = () => {\r\n  const history = useHistory();\r\n\r\n  const { signIn, signUp } = auth.useActions();\r\n  const { getProfile } = account.useActions();\r\n\r\n  const onFormSubmit = async ({ password, username }: TFormValues) => {\r\n    try {\r\n      await signIn(username, password);\r\n      history.push('/');\r\n      await getProfile();\r\n    } catch {\r\n      history.push('/login');\r\n    }\r\n  };\r\n\r\n  const onSignUpClick = async (event: any) => {\r\n    event.preventDefault();\r\n    try {\r\n      await signUp();\r\n      history.push('/');\r\n    } catch {}\r\n  };\r\n\r\n  const isFormFieldValid = (info: any) => info.error && info.touched;\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <Form\r\n          onSubmit={onFormSubmit}\r\n          validate={(values: any) => {\r\n            const errors: any = {};\r\n\r\n            if (!values.username) {\r\n              errors.username = 'Required';\r\n            }\r\n            if (!values.password) {\r\n              errors.password = 'Required';\r\n            }\r\n            return errors;\r\n          }}\r\n          render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n            <form className={classes.form} onSubmit={handleSubmit}>\r\n              <Field name=\"username\">\r\n                {({ input, meta }) => {\r\n                  return (\r\n                    <TextField\r\n                      {...input}\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      autoComplete=\"email\"\r\n                      autoFocus\r\n                      error={isFormFieldValid(meta)}\r\n                      helperText={isFormFieldValid(meta) && meta.error}\r\n                    />\r\n                  );\r\n                }}\r\n              </Field>\r\n              <Field name=\"password\">\r\n                {({ input, meta }) => (\r\n                  <TextField\r\n                    {...input}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    error={isFormFieldValid(meta)}\r\n                    helperText={isFormFieldValid(meta) && meta.error}\r\n                  />\r\n                )}\r\n              </Field>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                disabled={pristine || submitting}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item>\r\n                  <Link\r\n                    component=\"button\"\r\n                    onClick={onSignUpClick}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          )}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi } from '@src/api'\r\n\r\nimport { TMovieDetails } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TMovieDetails,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const currentMovieReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/currentMovie/SET_DETAILS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/currentMovie/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/currentMovie/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TMovieDetails) =>\r\n    ({\r\n      type: 'tmdb/movies/currentMovie/SET_DETAILS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/currentMovie/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/currentMovie/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getMovieDetails = (movie_id: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    const appendToResponse = 'videos,external_ids'\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(\r\n      actions.setData(await moviesApi.getDetails(movie_id, appendToResponse))\r\n    )\r\n    dispatch(actions.setLoadingStatus(false))\r\n    dispatch(actions.setError(null))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi } from '@src/api'\r\n\r\nimport { TRecommendations } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TRecommendations,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const recommendationsReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/recommendations/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/recommendations/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/recommendations/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TRecommendations) =>\r\n    ({\r\n      type: 'tmdb/movies/recommendations/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/recommendations/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/recommendations/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getRecommendations = (\r\n  movie_id: number,\r\n  page?: number\r\n): ThunkType => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(\r\n      actions.setData(await moviesApi.getRecommendations(movie_id, page))\r\n    )\r\n    dispatch(actions.setLoadingStatus(false))\r\n    dispatch(actions.setError(null))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi } from '@src/api'\r\n\r\nimport { TSimilarMovies } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TSimilarMovies,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const similarReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/similar/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/similar/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/similar/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TSimilarMovies) =>\r\n    ({\r\n      type: 'tmdb/movies/similar/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/similar/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/similar/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getSimilarMovies = (\r\n  movie_id: number,\r\n  page?: number\r\n): ThunkType => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await moviesApi.getSimilar(movie_id, page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n    dispatch(actions.setError(null))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi } from '@src/api'\r\n\r\nimport { TDiscoverMovie, TDiscoveredMovies } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TDiscoveredMovies,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const discoveredReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/discovered/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/discovered/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/discovered/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TDiscoveredMovies) =>\r\n    ({\r\n      type: 'tmdb/movies/discovered/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/discovered/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/discovered/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getDiscoveredMovies = (args: TDiscoverMovie): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await moviesApi.getDiscovered(args)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi } from '@src/api'\r\n\r\nimport { TNowPlayingMovies } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TNowPlayingMovies,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const nowPlayingReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/now=playing/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/now=playing/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/now=playing/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TNowPlayingMovies) =>\r\n    ({\r\n      type: 'tmdb/movies/now=playing/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/now=playing/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/now=playing/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getNowPlayingMovies = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await moviesApi.getNowPlaying(page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi } from '@src/api'\r\n\r\nimport { TPopularMovies } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TPopularMovies,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const popularReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/popular/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/popular/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/popular/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TPopularMovies) =>\r\n    ({\r\n      type: 'tmdb/movies/popular/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/popular/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/popular/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getPopularMovies = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await moviesApi.getPopular(page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n    dispatch(actions.setError(null))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi } from '@src/api'\r\n\r\nimport { TTopRatedMovies } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TTopRatedMovies,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const topRatedReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/top_rated/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/top_rated/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/top_rated/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TTopRatedMovies) =>\r\n    ({\r\n      type: 'tmdb/movies/top_rated/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/top_rated/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/top_rated/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getTopRatedMovies = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await moviesApi.getTopRated(page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { moviesApi } from '@src/api'\r\n\r\nimport { TUpcomingMovies } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TUpcomingMovies,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const upcomingReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/movies/upcoming/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/movies/upcoming/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/movies/upcoming/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TUpcomingMovies) =>\r\n    ({\r\n      type: 'tmdb/movies/upcoming/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/movies/upcoming/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/movies/upcoming/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getUpcomingMovies = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await moviesApi.getUpcoming(page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { currentMovieReducer, getMovieDetails } from './currentMovie'\r\nimport { recommendationsReducer, getRecommendations } from './recommendations'\r\nimport { similarReducer, getSimilarMovies } from './similar'\r\nimport { discoveredReducer, getDiscoveredMovies } from './discovered'\r\nimport { nowPlayingReducer, getNowPlayingMovies } from './nowPlaying'\r\nimport { popularReducer, getPopularMovies } from './popular'\r\nimport { topRatedReducer, getTopRatedMovies } from './topRated'\r\nimport { upcomingReducer, getUpcomingMovies } from './upcoming'\r\n\r\nexport const moviesReducer = combineReducers({\r\n  currentMovie: currentMovieReducer,\r\n  recommendations: recommendationsReducer,\r\n  similar: similarReducer,\r\n  popular: popularReducer,\r\n  nowPlaying: nowPlayingReducer,\r\n  upcoming: upcomingReducer,\r\n  topRated: topRatedReducer,\r\n  discovered: discoveredReducer,\r\n})\r\n\r\nexport const actions = {\r\n  getMovieDetails,\r\n  getRecommendations,\r\n  getSimilarMovies,\r\n  getDiscoveredMovies,\r\n  getNowPlayingMovies,\r\n  getPopularMovies,\r\n  getTopRatedMovies,\r\n  getUpcomingMovies,\r\n}\r\n","import { AppStateType } from '@src/store'\r\n\r\nexport const getDetails = (state: AppStateType) => state.movies.currentMovie\r\nexport const getSimilar = (state: AppStateType) => state.movies.similar\r\nexport const getRecommendations = (state: AppStateType) =>\r\n  state.movies.recommendations\r\n\r\nexport const getPopular = (state: AppStateType) => state.movies.popular\r\nexport const getNowPlaying = (state: AppStateType) => state.movies.nowPlaying\r\nexport const getTopRated = (state: AppStateType) => state.movies.topRated\r\nexport const getUpcoming = (state: AppStateType) => state.movies.upcoming\r\nexport const getDiscovered = (state: AppStateType) => state.movies.discovered\r\n","import { useSelector } from 'react-redux'\r\n\r\nimport { actions, moviesReducer } from './reducers'\r\nimport { useActions } from '@src/hooks/useActions'\r\nimport {\r\n  getDetails,\r\n  getNowPlaying,\r\n  getPopular,\r\n  getRecommendations,\r\n  getSimilar,\r\n  getTopRated,\r\n  getUpcoming,\r\n  getDiscovered,\r\n} from './selectors'\r\n\r\nexport { moviesReducer }\r\n\r\nexport const movies = {\r\n  currentMovie: {\r\n    useDetails: () => useSelector(getDetails),\r\n  },\r\n  usePopular: () => useSelector(getPopular),\r\n  useNowPlaying: () => useSelector(getNowPlaying),\r\n  useTopRated: () => useSelector(getTopRated),\r\n  useUpcoming: () => useSelector(getUpcoming),\r\n  useDiscovered: () => useSelector(getDiscovered),\r\n  useSimilar: () => useSelector(getSimilar),\r\n  useRecommendations: () => useSelector(getRecommendations),\r\n  useActions: (): typeof actions => useActions(actions),\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  cardAction: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    justifyContent: 'space-between',\r\n  },\r\n  grid: {\r\n    flexShrink: 0,\r\n  },\r\n})\r\nexport const CardItem: React.FC<any> = ({ children, onClick }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Grid className={classes.grid} item xs={6} sm={4} md={3} lg={2}>\r\n      <Paper onClick={onClick} className={classes.root}>\r\n        <Card className={classes.root}>\r\n          <CardActionArea className={classes.cardAction}>\r\n            {children}\r\n          </CardActionArea>\r\n        </Card>\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { getImageLink } from '@src/api'\r\nimport { TMovie } from '@src/store/modules/movies/types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport { CardItem } from './CardItem'\r\nimport { useHistory } from 'react-router-dom'\r\ntype TCard = {\r\n  card: TMovie\r\n  isLoading: boolean\r\n}\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    maxWidth: '100%!important',\r\n    width: '100%',\r\n    display: 'block',\r\n  },\r\n  cardContent: {\r\n    alignSelf: 'end',\r\n    boxSizing: 'border-box',\r\n    width: '100%',\r\n  },\r\n  skeletonMedia: {\r\n    height: '400px',\r\n    maxWidth: '100%!important',\r\n    width: '100%',\r\n    display: 'block',\r\n  },\r\n})\r\n\r\nexport const MovieCard: React.FC<TCard> = ({ card, isLoading }) => {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const handleClick = React.useCallback(() => {\r\n    if (card.id) history.push('/movies/' + card.id.toString())\r\n  }, [card])\r\n\r\n  return (\r\n    <CardItem onClick={handleClick}>\r\n      {!isLoading ? (\r\n        <img\r\n          className={classes.media}\r\n          src={getImageLink(card?.poster_path)}\r\n          alt=\"poster\"\r\n        />\r\n      ) : (\r\n        <Skeleton\r\n          animation=\"wave\"\r\n          variant=\"rect\"\r\n          className={classes.skeletonMedia}\r\n        >\r\n          <img className={classes.media} alt=\"skeleton\" />\r\n        </Skeleton>\r\n      )}\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography gutterBottom variant=\"body2\" component=\"h2\">\r\n          {!isLoading ? card.title : <Skeleton animation=\"wave\" variant=\"text\" />}\r\n        </Typography>\r\n        <Typography variant=\"caption\" color=\"textSecondary\">\r\n          {!isLoading ? (\r\n            `${\r\n              card.release_date\r\n                ? new Date(card.release_date).toLocaleDateString()\r\n                : 'N/A'\r\n            }, Movie`\r\n          ) : (\r\n            <Skeleton animation=\"wave\" variant=\"text\" />\r\n          )}\r\n        </Typography>\r\n      </CardContent>\r\n    </CardItem>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { CardItem } from './CardItem'\r\nimport { MovieCard } from './MovieCard'\r\n\r\ntype TCards = {\r\n  style?: object\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    marginTop: '15px',\r\n    marginBottom: '15px',\r\n  },\r\n})\r\nexport const CardsList: React.FC<TCards> = ({ children, style }) => {\r\n  const styles = useStyles()\r\n  return (\r\n    <Grid\r\n      style={style}\r\n      alignItems=\"stretch\"\r\n      className={styles.container}\r\n      container\r\n      spacing={2}\r\n    >\r\n      {children\r\n        ? children\r\n        : Array(20)\r\n            .fill(0)\r\n            .map((el, idx) => (\r\n              <MovieCard isLoading={true} key={idx} card={null as any} />\r\n            ))}\r\n    </Grid>\r\n  )\r\n}\r\n","export const parseQueryString = (str) =>\r\n  str\r\n    .substring(1)\r\n    .split('&')\r\n    .reduce((acc, el) => {\r\n      const [key, value] = el.split('=')\r\n      return { ...acc, [key]: decodeURIComponent(value) }\r\n    }, {})\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { CardsList } from '@src/components/CardsList'\r\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom'\r\nimport { parseQueryString } from '@src/lib/parse_query_string'\r\nimport { MovieCard } from '@src/components/CardsList/MovieCard'\r\nimport {\r\n  TPopularMovies,\r\n  TUpcomingMovies,\r\n  TNowPlayingMovies,\r\n  TTopRatedMovies,\r\n  TRecommendations,\r\n  TSimilarMovies,\r\n} from '@src/store/modules/movies/types'\r\nimport { TResponseError } from '@src/api/types'\r\nconst useStyles = makeStyles({\r\n  pagination: {\r\n    '& ul': { justifyContent: 'center', margin: '10px 0' },\r\n  },\r\n})\r\ntype T = {\r\n  content: {\r\n    data:\r\n      | TUpcomingMovies\r\n      | TPopularMovies\r\n      | TNowPlayingMovies\r\n      | TTopRatedMovies\r\n      | TRecommendations\r\n      | TSimilarMovies\r\n      | null\r\n    isLoading: boolean\r\n    error: TResponseError | null\r\n  }\r\n\r\n  getter: (...args: any[]) => any\r\n  withURLParam?: boolean\r\n}\r\nexport const Page: React.FC<T> = ({ content, getter, withURLParam }) => {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const params = useLocation()\r\n  let pageNumber = parseQueryString(params.search).page || 1\r\n\r\n  const [page, setPage] = React.useState(parseInt(pageNumber))\r\n\r\n  const switchPage = (page: number) => {\r\n    setPage(page)\r\n    history.push(`?page=${page}`)\r\n  }\r\n\r\n  const matchedParams = useRouteMatch().params as any\r\n  const movieID = parseInt(matchedParams.id || '-1')\r\n\r\n  React.useEffect(() => {\r\n    if (!withURLParam) getter(page)\r\n    else getter(movieID, page)\r\n  }, [page, getter, movieID])\r\n\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    switchPage(value)\r\n  }\r\n  return (\r\n    <>\r\n      <CardsList>\r\n        {content.data?.results?.map((el) => (\r\n          <MovieCard isLoading={content.isLoading} key={el.id} card={el} />\r\n        ))}\r\n      </CardsList>\r\n      <Pagination\r\n        className={classes.pagination}\r\n        count={content.data?.total_pages}\r\n        page={page}\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  expandBtn: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    backgroundColor: 'rgba(255,255,255,0.8)',\r\n    position: 'relative',\r\n    top: '-1.5em',\r\n    cursor: 'pointer',\r\n  },\r\n  expanded: {\r\n    top: 0,\r\n  },\r\n})\r\nexport const Expand: React.FC = ({ children }) => {\r\n  const [isExpanded, switchExpansion] = React.useState(false)\r\n  const classes = useStyles()\r\n  return (\r\n    <>\r\n      {isExpanded && children}\r\n      <div\r\n        onClick={() => switchExpansion(!isExpanded)}\r\n        className={`${classes.expandBtn} ${isExpanded && classes.expanded}`}\r\n      >\r\n        {isExpanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { CardsList } from '@src/components/CardsList'\r\nimport { useRouteMatch, Link, useHistory } from 'react-router-dom'\r\nimport { movies } from '@src/store/modules/movies'\r\n\r\nimport { Typography, Grid, Box } from '@material-ui/core'\r\nimport { getImageLink } from '@src/api'\r\nimport Rating from '@material-ui/lab/Rating'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\n\r\nimport { Expand } from '@src/components/common/expand'\r\nimport { MovieCard } from '@src/components/CardsList/MovieCard'\r\n\r\nconst useStyles = makeStyles({\r\n  pagination: {\r\n    '& ul': { justifyContent: 'center', margin: '10px 0' },\r\n  },\r\n  header: {\r\n    backgroundPosition: 'right 0 top',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    height: '500px',\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n    alignItems: 'end',\r\n  },\r\n  containerImage: {\r\n    textAlign: 'center',\r\n  },\r\n  containerExternalLinks: {\r\n    display: 'flex',\r\n    '& svg': {\r\n      fontSize: '2.25rem',\r\n    },\r\n  },\r\n  image: {\r\n    width: '80%',\r\n  },\r\n  imageSkeleton: {\r\n    height: '100%',\r\n    width: '70%',\r\n  },\r\n  slider: {\r\n    overflowX: 'auto',\r\n    marginBottom: '15px',\r\n    minWidth: '100%',\r\n  },\r\n  details: {\r\n    color: 'white',\r\n    display: 'flex',\r\n  },\r\n  zidx: {\r\n    position: 'relative',\r\n    zIndex: 1,\r\n  },\r\n  grid: {\r\n    flexShrink: 0,\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  genresLink: {\r\n    padding: '2px',\r\n    '&:hover': {\r\n      backgroundColor: 'primary',\r\n    },\r\n  },\r\n  videoWrapper: {\r\n    position: 'relative',\r\n    paddingTop: ' 56.25%', //16:9\r\n    height: 0,\r\n    '& iframe': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n})\r\nexport const ByID: React.FC = () => {\r\n  const DESCRIPTION_BREAKPOINT = 25\r\n  const history = useHistory()\r\n  const classes = useStyles()\r\n  const { useDetails } = movies.currentMovie\r\n  const { useRecommendations, useSimilar } = movies\r\n  const details = useDetails()\r\n  const videos = details.data?.videos\r\n\r\n  const detailsOverview = details.data?.overview?.split(' ') || []\r\n\r\n  const recommendations = useRecommendations()\r\n  const similar = useSimilar()\r\n\r\n  const matchedParams = useRouteMatch().params as { id: string }\r\n\r\n  let movieID = parseInt(matchedParams.id || '1')\r\n\r\n  const {\r\n    getMovieDetails,\r\n    getRecommendations,\r\n    getSimilarMovies,\r\n  } = movies.useActions()\r\n\r\n  React.useEffect(() => {\r\n    getMovieDetails(movieID)\r\n    getRecommendations(movieID, 1)\r\n    getSimilarMovies(movieID, 1)\r\n  }, [movieID])\r\n  if (details.error?.status === 404) history.push('/404')\r\n  return (\r\n    <>\r\n      <Grid alignItems=\"stretch\" container spacing={2}>\r\n        <Grid className={classes.zidx} item xs={12} sm={3}>\r\n          {!details.isLoading ? (\r\n            <div className={classes.container}>\r\n              <div className={classes.containerImage}>\r\n                <img\r\n                  className={classes.image}\r\n                  src={getImageLink(details.data?.poster_path)}\r\n                  alt=\"poster\"\r\n                />\r\n              </div>\r\n              {/* <div className={classes.containerExternalLinks}>\r\n                {externalIds &&\r\n                  getExternalLinks(externalIds).map((el) => (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      {el}\r\n                    </Typography>\r\n                  ))}\r\n              </div> */}\r\n            </div>\r\n          ) : (\r\n            <div className={classes.container}>\r\n              <Skeleton\r\n                className={classes.imageSkeleton}\r\n                animation=\"wave\"\r\n                variant=\"rect\"\r\n              ></Skeleton>\r\n            </div>\r\n          )}\r\n        </Grid>\r\n        <Grid className={classes.zidx} item xs={12} sm={9}>\r\n          <Typography variant=\"h4\" component=\"h4\">\r\n            {!details.isLoading ? (\r\n              `${details.data?.title}(${\r\n                details?.data?.release_date\r\n                  ? new Date(details?.data?.release_date).getFullYear()\r\n                  : 'N/A'\r\n              })`\r\n            ) : (\r\n              <Skeleton animation=\"wave\" variant=\"text\" />\r\n            )}\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"h4\">\r\n            {!details.isLoading ? (\r\n              `${details.data?.original_title}`\r\n            ) : (\r\n              <Skeleton animation=\"wave\" variant=\"text\" />\r\n            )}\r\n          </Typography>\r\n          {!details.isLoading ? (\r\n            <Grid\r\n              style={{ display: 'flex', alignItems: 'center' }}\r\n              item\r\n              xs={12}\r\n            >\r\n              <Rating\r\n                max={10}\r\n                size=\"medium\"\r\n                name=\"read-only\"\r\n                value={details?.data?.vote_average}\r\n                readOnly\r\n              />\r\n              <Box>{details?.data?.vote_average}</Box>\r\n            </Grid>\r\n          ) : (\r\n            <Skeleton animation=\"wave\" variant=\"text\" />\r\n          )}\r\n          <Grid container>\r\n            <Grid style={{ marginTop: '15px' }} item xs={12}>\r\n              <Typography\r\n                style={{ marginBottom: '10px' }}\r\n                variant=\"h5\"\r\n                component=\"h5\"\r\n              >\r\n                ИНФОРМАЦИЯ\r\n              </Typography>\r\n              {!details.isLoading ? (\r\n                <>\r\n                  {details.data?.status && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Статус:\r\n                      {details.data?.status}\r\n                    </Typography>\r\n                  )}\r\n                  {details.data?.release_date && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Дата выхода:{' '}\r\n                      {new Date(\r\n                        details?.data?.release_date\r\n                      ).toLocaleDateString()}\r\n                    </Typography>\r\n                  )}\r\n                  {details.data?.runtime && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Длительность:\r\n                      {` ${Math.trunc(details.data?.runtime / 60)} ч ${\r\n                        details.data?.runtime % 60\r\n                      } мин`}\r\n                    </Typography>\r\n                  )}\r\n                  {details.data?.tagline && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Тег: {' ' + details.data?.tagline}\r\n                    </Typography>\r\n                  )}\r\n                  {Number.isInteger(details.data!.budget) && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Бюджет: {details.data?.budget + '$'}\r\n                    </Typography>\r\n                  )}\r\n                  {details.data?.genres?.length ? (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Жанры:\r\n                      {details.data?.genres.map((el, idx) => (\r\n                        <Link\r\n                          className={classes.genresLink}\r\n                          key={el.id}\r\n                          to={'genres/' + el.id}\r\n                        >\r\n                          {el.name + ' '}\r\n                        </Link>\r\n                      ))}\r\n                    </Typography>\r\n                  ) : null}\r\n                </>\r\n              ) : (\r\n                <Skeleton\r\n                  style={{ height: '150px' }}\r\n                  animation=\"wave\"\r\n                  variant=\"rect\"\r\n                />\r\n              )}\r\n\r\n              <Typography variant=\"body1\" component=\"h6\"></Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid style={{ marginTop: '15px' }} item xs={12}>\r\n            {!details.isLoading ? (\r\n              <>\r\n                <Typography\r\n                  style={{ marginBottom: '10px' }}\r\n                  variant=\"h5\"\r\n                  component=\"h5\"\r\n                >\r\n                  ОПИСАНИЕ\r\n                </Typography>\r\n                {details.data?.overview && (\r\n                  <div>\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      {detailsOverview\r\n                        ?.slice(0, DESCRIPTION_BREAKPOINT)\r\n                        .join(' ')}\r\n                    </Typography>\r\n                    {detailsOverview?.length - DESCRIPTION_BREAKPOINT > 0 && (\r\n                      <Expand>\r\n                        <Typography variant=\"body1\" component=\"h6\">\r\n                          {detailsOverview\r\n                            ?.slice(DESCRIPTION_BREAKPOINT)\r\n                            .join(' ')}\r\n                        </Typography>\r\n                      </Expand>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <Skeleton\r\n                style={{ height: '50px' }}\r\n                animation=\"wave\"\r\n                variant=\"rect\"\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        {!details.isLoading ? (\r\n          <>\r\n            {videos?.results.length > 0 && (\r\n              <>\r\n                <Typography variant=\"button\" component=\"h6\">\r\n                  ВИДЕО\r\n                </Typography>\r\n                <Grid\r\n                  container\r\n                  className={classes.slider}\r\n                  style={{ flexWrap: 'nowrap', overflowY: 'hidden' }}\r\n                >\r\n                  {videos?.results?.map((el) => (\r\n                    <Grid\r\n                      style={{ flexShrink: 0 }}\r\n                      xs={12}\r\n                      sm={4}\r\n                      md={3}\r\n                      lg={3}\r\n                    >\r\n                      <div className={classes.videoWrapper}>\r\n                        <iframe\r\n                          frameBorder=\"0\"\r\n                          allowFullScreen\r\n                          key={el.key}\r\n                          src={`https://www.youtube.com/embed/${el.key}`}\r\n                          title={el.name}\r\n                        ></iframe>\r\n                      </div>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : null}\r\n        {!recommendations.isLoading ? (\r\n          <>\r\n            {recommendations.data.total_results > 0 && (\r\n              <>\r\n                <Typography variant=\"button\" component=\"h6\">\r\n                  Рекомендации{' '}\r\n                  <Link to={'recommendations/' + details.data?.id}>\r\n                    посмотреть все\r\n                  </Link>\r\n                </Typography>\r\n                <div className={classes.slider}>\r\n                  <CardsList style={{ flexWrap: 'nowrap' }}>\r\n                    {recommendations.data?.results?.map((el) => (\r\n                      <MovieCard\r\n                        isLoading={recommendations.isLoading}\r\n                        key={el.id}\r\n                        card={el}\r\n                      />\r\n                    ))}\r\n                  </CardsList>\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : null}\r\n\r\n        {!similar.isLoading ? (\r\n          <>\r\n            {similar.data.total_results > 0 && (\r\n              <>\r\n                <Typography variant=\"button\" component=\"h6\">\r\n                  Схожие фильмы{' '}\r\n                  <Link to={'similar/' + details.data?.id}>посмотреть все</Link>\r\n                </Typography>\r\n                <div className={classes.slider}>\r\n                  <CardsList style={{ flexWrap: 'nowrap' }}>\r\n                    {similar.data.results?.map((el) => (\r\n                      <MovieCard\r\n                        isLoading={similar.isLoading}\r\n                        key={el.id}\r\n                        card={el}\r\n                      />\r\n                    ))}\r\n                  </CardsList>\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : null}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { CardsList } from '@src/components/CardsList'\r\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom'\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { parseQueryString } from '@src/lib/parse_query_string'\r\nimport { MovieCard } from '@src/components/CardsList/MovieCard'\r\nconst useStyles = makeStyles({\r\n  pagination: {\r\n    '& ul': { justifyContent: 'center', margin: '10px 0' },\r\n  },\r\n})\r\nexport const ByGenre: React.FC = () => {\r\n  const classes = useStyles()\r\n  const movi = movies.useDiscovered()\r\n  const history = useHistory()\r\n  const params = useLocation()\r\n  let pageNumber = parseQueryString(params.search).page || 1\r\n\r\n  const [page, setPage] = React.useState(parseInt(pageNumber))\r\n\r\n  const matchedParams = useRouteMatch().params as { genre: string }\r\n  const genre_id = matchedParams.genre\r\n  const { getDiscoveredMovies } = movies.useActions()\r\n\r\n  const switchPage = (page: number) => {\r\n    setPage(page)\r\n    history.push(`?page=${page}`)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getDiscoveredMovies({ with_genres: genre_id, page })\r\n  }, [page, genre_id])\r\n\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    switchPage(value)\r\n  }\r\n  return (\r\n    <>\r\n      <CardsList>\r\n        {movi.data?.results?.map((el) => (\r\n          <MovieCard isLoading={movi.isLoading} key={el.id} card={el} />\r\n        ))}\r\n      </CardsList>\r\n      <Pagination\r\n        className={classes.pagination}\r\n        count={movi?.data?.total_pages}\r\n        page={page}\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import { Popular } from './popular'\r\nimport { NowPlaying } from './now-playing'\r\nimport { ByID } from './by-id'\r\nimport { Recommendations } from './recommendations'\r\nimport { Similar } from './similar'\r\nimport { TopRated } from './top-rated'\r\nimport { Upcoming } from './upcoming'\r\nimport { ByGenre } from './by-genre'\r\n\r\nexport const movies = {\r\n  Popular,\r\n  NowPlaying,\r\n  ByID,\r\n  Recommendations,\r\n  Similar,\r\n  TopRated,\r\n  Upcoming,\r\n  ByGenre,\r\n}\r\n","import React from 'react'\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { Page } from './_base/page'\r\n\r\nexport const Popular: React.FC = () => {\r\n  const { getPopularMovies } = movies.useActions()\r\n  return <Page content={movies.usePopular()} getter={getPopularMovies} />\r\n}\r\n","import React from 'react'\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { Page } from './_base/page'\r\n\r\nexport const NowPlaying: React.FC = () => {\r\n  const { getNowPlayingMovies } = movies.useActions()\r\n  return <Page content={movies.useNowPlaying()} getter={getNowPlayingMovies} />\r\n}\r\n","import React from 'react'\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { Page } from './_base/page'\r\n\r\nexport const Recommendations: React.FC = () => {\r\n  const { getRecommendations } = movies.useActions()\r\n  return (\r\n    <Page\r\n      content={movies.useRecommendations()}\r\n      getter={getRecommendations}\r\n      withURLParam\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { Page } from './_base/page'\r\n\r\nexport const Similar: React.FC = () => {\r\n  const { getSimilarMovies } = movies.useActions()\r\n  return (\r\n    <Page\r\n      content={movies.useSimilar()}\r\n      getter={getSimilarMovies}\r\n      withURLParam\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { Page } from './_base/page'\r\n\r\nexport const TopRated: React.FC = () => {\r\n  const { getTopRatedMovies } = movies.useActions()\r\n  return <Page content={movies.useTopRated()} getter={getTopRatedMovies} />\r\n}\r\n","import React from 'react'\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { Page } from './_base/page'\r\n\r\nexport const Upcoming: React.FC = () => {\r\n  const upcoming = movies.useUpcoming()\r\n  const { getUpcomingMovies } = movies.useActions()\r\n  return <Page content={upcoming} getter={getUpcomingMovies} />\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { tvApi } from '@src/api'\r\n\r\nimport { TTVDetails } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TTVDetails,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const currentTVReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/currentTV/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/currentTV/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/currentTV/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TTVDetails) =>\r\n    ({\r\n      type: 'tmdb/tv/currentTV/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/currentTV/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/currentTV/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getTVDetails = (tv_id: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    const appendToResponse = 'videos,external_ids'\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await tvApi.getDetails(tv_id, appendToResponse)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { tvApi } from '@src/api'\r\n\r\nimport { TRecommendations } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TRecommendations,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const recommendationsReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/recommendations/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/recommendations/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/recommendations/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TRecommendations) =>\r\n    ({\r\n      type: 'tmdb/tv/recommendations/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/recommendations/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/recommendations/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getRecommendations = (\r\n  tv_id: number,\r\n  page?: number\r\n): ThunkType => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await tvApi.getRecommendations(tv_id, page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { tvApi } from '@src/api'\r\n\r\nimport { TSimilarTV } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TSimilarTV,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const similarReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/similar/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/similar/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/similar/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TSimilarTV) =>\r\n    ({\r\n      type: 'tmdb/tv/similar/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/similar/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/similar/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getSimilarTV = (\r\n  tv_id: number,\r\n  page?: number\r\n): ThunkType => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await tvApi.getSimilar(tv_id, page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { tvApi } from '@src/api'\r\n\r\nimport { TPopularTV, TDiscoverTV, TDiscoveredTV } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TDiscoveredTV,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const discoveredReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/discovered/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/discovered/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/discovered/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TDiscoveredTV) =>\r\n    ({\r\n      type: 'tmdb/tv/discovered/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/discovered/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/discovered/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getDiscoveredTV = (args: TDiscoverTV): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await tvApi.getDiscovered(args)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { tvApi } from '@src/api'\r\n\r\nimport { TAiringTodayTV } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TAiringTodayTV,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const airingTodayReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/airing_today/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/airing_today/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/airing_today/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TAiringTodayTV) =>\r\n    ({\r\n      type: 'tmdb/tv/airing_today/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/airing_today/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/airing_today/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getAiringTodayTV = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await tvApi.getAiringToday(page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { tvApi } from '@src/api'\r\n\r\nimport { TPopularTV } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TPopularTV,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const popularReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/popular/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/popular/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/popular/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TPopularTV) =>\r\n    ({\r\n      type: 'tmdb/tv/popular/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/popular/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/popular/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getPopularTV = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await tvApi.getPopular(page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { tvApi } from '@src/api'\r\n\r\nimport { TTopRatedTV } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TTopRatedTV,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const topRatedReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/top_rated/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/top_rated/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/top_rated/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TTopRatedTV) =>\r\n    ({\r\n      type: 'tmdb/tv/top_rated/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/top_rated/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/top_rated/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getTopRatedTV = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await tvApi.getTopRated(page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { InferActionsTypes, BaseThunkType } from '../../..'\r\n\r\nimport { Dispatch } from 'redux'\r\nimport { tvApi } from '@src/api'\r\n\r\nimport { TOnTheAirTV } from '../types'\r\nimport { TResponseError } from '@src/api/types'\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\ntype TInitialState = typeof initialState\r\n\r\nlet initialState = {\r\n  data: {} as TOnTheAirTV,\r\n  isLoading: false,\r\n  error: null as TResponseError | null,\r\n}\r\n\r\nexport const onTheAirReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): TInitialState => {\r\n  switch (action.type) {\r\n    case 'tmdb/tv/onTheAir/SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n      }\r\n    case 'tmdb/tv/onTheAir/SET_LOADING_STATUS':\r\n      return { ...state, isLoading: action.payload.isLoading }\r\n    case 'tmdb/tv/onTheAir/SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  setData: (data: TOnTheAirTV) =>\r\n    ({\r\n      type: 'tmdb/tv/onTheAir/SET_ITEMS',\r\n      payload: { data },\r\n    } as const),\r\n  setLoadingStatus: (isLoading: boolean) =>\r\n    ({\r\n      type: 'tmdb/tv/onTheAir/SET_LOADING_STATUS',\r\n      payload: { isLoading },\r\n    } as const),\r\n  setError: (error: TResponseError | null) =>\r\n    ({\r\n      type: 'tmdb/tv/onTheAir/SET_ERROR',\r\n      payload: { error },\r\n    } as const),\r\n}\r\n\r\nexport const getOnTheAirTV = (page?: number): ThunkType => async (\r\n  dispatch: Dispatch<ActionsTypes>\r\n) => {\r\n  try {\r\n    dispatch(actions.setLoadingStatus(true))\r\n    dispatch(actions.setData(await tvApi.getOnTheAir(page)))\r\n    dispatch(actions.setLoadingStatus(false))\r\n  } catch (error) {\r\n    dispatch(actions.setError(error.response))\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { currentTVReducer, getTVDetails } from './currentTV'\r\nimport { recommendationsReducer, getRecommendations } from './recommendations'\r\nimport { similarReducer, getSimilarTV } from './similar'\r\nimport { discoveredReducer, getDiscoveredTV } from './discovered'\r\nimport { airingTodayReducer, getAiringTodayTV } from './airingToday'\r\nimport { popularReducer, getPopularTV } from './popular'\r\nimport { topRatedReducer, getTopRatedTV } from './topRated'\r\nimport { onTheAirReducer, getOnTheAirTV } from './onTheAir'\r\n\r\nexport const tvReducer = combineReducers({\r\n  currentTV: currentTVReducer,\r\n  recommendations: recommendationsReducer,\r\n  similar: similarReducer,\r\n  popular: popularReducer,\r\n  airingToday: airingTodayReducer,\r\n  onTheAir: onTheAirReducer,\r\n  topRated: topRatedReducer,\r\n  discovered: discoveredReducer,\r\n})\r\n\r\nexport const actions = {\r\n  getRecommendations,\r\n  getTVDetails,\r\n  getSimilarTV,\r\n  getDiscoveredTV,\r\n  getAiringTodayTV,\r\n  getPopularTV,\r\n  getTopRatedTV,\r\n  getOnTheAirTV,\r\n}\r\n","import { AppStateType } from '@src/store'\r\n\r\nexport const getDetails = (state: AppStateType) => state.tv.currentTV\r\nexport const getSimilar = (state: AppStateType) => state.tv.similar\r\nexport const getRecommendations = (state: AppStateType) =>\r\n  state.tv.recommendations\r\n\r\nexport const getPopular = (state: AppStateType) => state.tv.popular\r\nexport const getOnTheAir = (state: AppStateType) => state.tv.onTheAir\r\nexport const getAiringToday = (state: AppStateType) => state.tv.airingToday\r\nexport const getTopRated = (state: AppStateType) => state.tv.topRated\r\nexport const getDiscovered = (state: AppStateType) => state.tv.discovered","import { useSelector } from 'react-redux'\r\nimport { useActions } from '@src/hooks/useActions'\r\nimport { actions, tvReducer } from './reducers'\r\nimport {\r\n  getAiringToday,\r\n  getOnTheAir,\r\n  getPopular,\r\n  getRecommendations,\r\n  getSimilar,\r\n  getDetails,\r\n  getTopRated,\r\n  getDiscovered,\r\n} from './selectors'\r\n\r\nexport { tvReducer }\r\n\r\nexport const tv = {\r\n  currentTV: {\r\n    useDetails: () => useSelector(getDetails),\r\n  },\r\n  usePopular: () => useSelector(getPopular),\r\n  useAiringToday: () => useSelector(getAiringToday),\r\n  useOnTheAir: () => useSelector(getOnTheAir),\r\n  useTopRated: () => useSelector(getTopRated),\r\n  useActions: (): typeof actions => useActions(actions),\r\n  useSimilar: () => useSelector(getSimilar),\r\n  useRecommendations: () => useSelector(getRecommendations),\r\n  useDiscovered: () => useSelector(getDiscovered),\r\n}\r\n","import React from 'react'\r\nimport { getImageLink } from '@src/api'\r\nimport { TTV } from '@src/store/modules/tv/types'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { CardItem } from './CardItem'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\ntype TCard = {\r\n  card: TTV\r\n  isLoading: boolean\r\n}\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    maxWidth: '100%!important',\r\n    width: '100%',\r\n    display: 'block',\r\n  },\r\n  cardContent: {\r\n    alignSelf: 'end',\r\n    boxSizing: 'border-box',\r\n    width: '100%',\r\n  },\r\n  skeletonMedia: {\r\n    height: '400px',\r\n    maxWidth: '100%!important',\r\n    width: '100%',\r\n    display: 'block',\r\n  },\r\n})\r\nexport const TVCard: React.FC<TCard> = ({ card, isLoading }) => {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const handleClick = React.useCallback(() => {\r\n    if (card.id) history.push('/tv/' + card.id.toString())\r\n  }, [card])\r\n\r\n  return (\r\n    <CardItem onClick={handleClick}>\r\n      {!isLoading ? (\r\n        <img\r\n          className={classes.media}\r\n          src={getImageLink(card.poster_path)}\r\n          alt=\"poster\"\r\n        />\r\n      ) : (\r\n        <Skeleton\r\n          animation=\"wave\"\r\n          variant=\"rect\"\r\n          className={classes.skeletonMedia}\r\n        >\r\n          <img className={classes.media} alt=\"skeleton\" />\r\n        </Skeleton>\r\n      )}\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography gutterBottom variant=\"body2\" component=\"h2\">\r\n          {!isLoading ? (\r\n            card.name\r\n          ) : (\r\n            <Skeleton animation=\"wave\" variant=\"text\" />\r\n          )}\r\n        </Typography>\r\n        <Typography variant=\"caption\" color=\"textSecondary\">\r\n          {!isLoading ? (\r\n            `${\r\n              card.first_air_date\r\n                ? new Date(card.first_air_date).toLocaleDateString()\r\n                : 'N/A'\r\n            }, TV`\r\n          ) : (\r\n            <Skeleton animation=\"wave\" variant=\"text\" />\r\n          )}\r\n        </Typography>\r\n      </CardContent>\r\n    </CardItem>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { CardsList } from '@src/components/CardsList'\r\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom'\r\nimport { parseQueryString } from '@src/lib/parse_query_string'\r\nimport { TVCard } from '@src/components/CardsList/TVCard'\r\nimport {\r\n  TPopularTV,\r\n  TOnTheAirTV,\r\n  TAiringTodayTV,\r\n  TTopRatedTV,\r\n  TRecommendations,\r\n  TSimilarTV,\r\n} from '@src/store/modules/tv/types'\r\nimport { TResponseError } from '@src/api/types'\r\nconst useStyles = makeStyles({\r\n  pagination: {\r\n    '& ul': { justifyContent: 'center', margin: '10px 0' },\r\n  },\r\n})\r\ntype T = {\r\n  content: {\r\n    data:\r\n      | TPopularTV\r\n      | TSimilarTV\r\n      | TOnTheAirTV\r\n      | TAiringTodayTV\r\n      | TRecommendations\r\n      | TTopRatedTV\r\n      | null\r\n    isLoading: boolean\r\n    error: TResponseError | null\r\n  }\r\n\r\n  getter: (...args: any[]) => any\r\n  withURLParam?: boolean\r\n}\r\nexport const Page: React.FC<T> = ({ content, getter, withURLParam }) => {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const params = useLocation()\r\n  let pageNumber = parseQueryString(params.search).page || 1\r\n\r\n  const [page, setPage] = React.useState(parseInt(pageNumber))\r\n\r\n  const switchPage = (page: number) => {\r\n    setPage(page)\r\n    history.push(`?page=${page}`)\r\n  }\r\n\r\n  const matchedParams = useRouteMatch().params as any\r\n  const tvID = parseInt(matchedParams.id || '-1')\r\n\r\n  React.useEffect(() => {\r\n    if (!withURLParam) getter(page)\r\n    else getter(tvID, page)\r\n  }, [page, getter, tvID])\r\n\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    switchPage(value)\r\n  }\r\n  return (\r\n    <>\r\n      <CardsList>\r\n        {content.data?.results?.map((el) => (\r\n          <TVCard isLoading={content.isLoading} key={el.id} card={el} />\r\n        ))}\r\n      </CardsList>\r\n      <Pagination\r\n        className={classes.pagination}\r\n        count={content.data?.total_pages}\r\n        page={page}\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { getImageLink } from '@src/api'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport { CardItem } from './CardItem'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { TTVSeason } from '@src/store/modules/tv/types'\r\ntype TCard = {\r\n  card: TTVSeason\r\n  isLoading: boolean\r\n}\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    maxWidth: '100%!important',\r\n    width: '100%',\r\n    display: 'block',\r\n  },\r\n  cardContent: {\r\n    alignSelf: 'end',\r\n    boxSizing: 'border-box',\r\n    width: '100%',\r\n  },\r\n  skeletonMedia: {\r\n    height: '400px',\r\n    maxWidth: '100%!important',\r\n    width: '100%',\r\n    display: 'block',\r\n  },\r\n})\r\n\r\nexport const TVSeasonCard: React.FC<TCard> = ({ card, isLoading }) => {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const handleClick = React.useCallback(() => {\r\n    if (card.id)\r\n      history.push(\r\n        `${history.location.pathname}/season/${card.season_number.toString()}`\r\n      )\r\n  }, [card])\r\n\r\n  return (\r\n    //TODO: Handle click\r\n    <CardItem onClick={()=>{}}>\r\n      {!isLoading ? (\r\n        <img\r\n          className={classes.media}\r\n          src={getImageLink(card.poster_path)}\r\n          alt=\"poster\"\r\n        />\r\n      ) : (\r\n        <Skeleton\r\n          animation=\"wave\"\r\n          variant=\"rect\"\r\n          className={classes.skeletonMedia}\r\n        >\r\n          <img className={classes.media} alt=\"skeleton\" />\r\n        </Skeleton>\r\n      )}\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography gutterBottom variant=\"body2\" component=\"h2\">\r\n          {!isLoading ? (\r\n            card.name\r\n          ) : (\r\n            <Skeleton animation=\"wave\" variant=\"text\" />\r\n          )}\r\n        </Typography>\r\n        <Typography variant=\"caption\" color=\"textSecondary\">\r\n          {!isLoading ? (\r\n            `${\r\n              card.air_date\r\n                ? new Date(card.air_date).toLocaleDateString()\r\n                : 'N/A'\r\n            }, TV`\r\n          ) : (\r\n            <Skeleton animation=\"wave\" variant=\"text\" />\r\n          )}\r\n        </Typography>\r\n      </CardContent>\r\n    </CardItem>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { CardsList } from '@src/components/CardsList'\r\nimport { useRouteMatch, Link, useHistory } from 'react-router-dom'\r\nimport { tv } from '@src/store/modules/tv'\r\n\r\nimport { Typography, Grid, Box } from '@material-ui/core'\r\nimport { getImageLink } from '@src/api'\r\nimport Rating from '@material-ui/lab/Rating'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\n\r\nimport { Expand } from '@src/components/common/expand'\r\nimport { TVCard } from '@src/components/CardsList/TVCard'\r\nimport { TVSeasonCard } from '@src/components/CardsList/TVSeasonCard'\r\n\r\nconst useStyles = makeStyles({\r\n  pagination: {\r\n    '& ul': { justifyContent: 'center', margin: '10px 0' },\r\n  },\r\n  header: {\r\n    backgroundPosition: 'right 0 top',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    height: '500px',\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'end',\r\n    height: '100%',\r\n  },\r\n  containerImage: {\r\n    textAlign: 'center',\r\n  },\r\n  containerExternalLinks: {\r\n    display: 'flex',\r\n    '& svg': {\r\n      fontSize: '2.25rem',\r\n    },\r\n  },\r\n  image: {\r\n    width: '80%',\r\n  },\r\n  imageSkeleton: {\r\n    height: '100%',\r\n    width: '70%',\r\n  },\r\n  slider: {\r\n    overflowX: 'auto',\r\n    marginBottom: '15px',\r\n    minWidth: '100%',\r\n  },\r\n  details: {\r\n    color: 'white',\r\n    display: 'flex',\r\n  },\r\n  zidx: {\r\n    position: 'relative',\r\n    zIndex: 1,\r\n  },\r\n  grid: {\r\n    flexShrink: 0,\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  genresLink: {\r\n    padding: '2px',\r\n    '&:hover': {\r\n      backgroundColor: 'primary',\r\n    },\r\n  },\r\n  videoWrapper: {\r\n    position: 'relative',\r\n    paddingTop: ' 56.25%', //16:9\r\n    height: 0,\r\n    '& iframe': {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n})\r\nexport const ByID: React.FC = () => {\r\n  const DESCRIPTION_BREAKPOINT = 25\r\n  const history = useHistory()\r\n  const classes = useStyles()\r\n  const { useDetails } = tv.currentTV\r\n  const { useRecommendations, useSimilar } = tv\r\n  const details = useDetails()\r\n  const videos = details.data?.videos\r\n  const detailsOverview = details.data?.overview?.split(' ') || []\r\n  const recommendations = useRecommendations()\r\n  const similar = useSimilar()\r\n\r\n  const matchedParams = useRouteMatch().params as { id: string }\r\n\r\n  let tvID = parseInt(matchedParams.id || '1')\r\n\r\n  const { getTVDetails, getRecommendations, getSimilarTV } = tv.useActions()\r\n\r\n  React.useEffect(() => {\r\n    getTVDetails(tvID)\r\n    getRecommendations(tvID, 1)\r\n    getSimilarTV(tvID, 1)\r\n    //TODO: Redurect to 404\r\n  }, [tvID])\r\n  if (details.error?.status === 404) history.push('/404')\r\n  return (\r\n    <>\r\n      <Grid alignItems=\"stretch\" container spacing={2}>\r\n        <Grid className={classes.zidx} item xs={12} sm={3}>\r\n          {!details.isLoading ? (\r\n            <div className={classes.container}>\r\n              <div className={classes.containerImage}>\r\n                <img\r\n                  className={classes.image}\r\n                  src={getImageLink(details.data?.poster_path)}\r\n                  alt=\"poster\"\r\n                />\r\n              </div>\r\n              {/* <div className={classes.containerExternalLinks}>\r\n                {externalIds &&\r\n                  getExternalLinks(externalIds).map((el) => (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      {el}\r\n                    </Typography>\r\n                  ))}\r\n              </div> */}\r\n            </div>\r\n          ) : (\r\n            <div className={classes.container}>\r\n              <Skeleton\r\n                className={classes.imageSkeleton}\r\n                animation=\"wave\"\r\n                variant=\"rect\"\r\n              ></Skeleton>\r\n            </div>\r\n          )}\r\n        </Grid>\r\n        <Grid className={classes.zidx} item xs={12} sm={9}>\r\n          <Typography variant=\"h4\" component=\"h4\">\r\n            {!details.isLoading ? (\r\n              `${details.data?.name}(${\r\n                details.data?.first_air_date\r\n                  ? new Date(details.data?.first_air_date).getFullYear()\r\n                  : 'N/A'\r\n              })`\r\n            ) : (\r\n              <Skeleton animation=\"wave\" variant=\"text\" />\r\n            )}\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"h4\">\r\n            {details.data?.original_name ? (\r\n              `${details.data?.original_name}`\r\n            ) : (\r\n              <Skeleton animation=\"wave\" variant=\"text\" />\r\n            )}\r\n          </Typography>\r\n          {!details.isLoading ? (\r\n            <Grid\r\n              style={{ display: 'flex', alignItems: 'center' }}\r\n              item\r\n              xs={12}\r\n            >\r\n              <Rating\r\n                max={10}\r\n                size=\"medium\"\r\n                name=\"read-only\"\r\n                value={details.data?.vote_average}\r\n                readOnly\r\n              />\r\n              <Box>{details.data?.vote_average}</Box>\r\n            </Grid>\r\n          ) : (\r\n            <Skeleton animation=\"wave\" variant=\"text\" />\r\n          )}\r\n          <Grid container>\r\n            <Grid style={{ marginTop: '15px' }} item xs={12}>\r\n              <Typography\r\n                style={{ marginBottom: '10px' }}\r\n                variant=\"h5\"\r\n                component=\"h5\"\r\n              >\r\n                ИНФОРМАЦИЯ\r\n              </Typography>\r\n              {!details.isLoading ? (\r\n                <>\r\n                  {details.data?.status && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Статус:\r\n                      {details.data?.status}\r\n                    </Typography>\r\n                  )}\r\n                  {details.data?.first_air_date && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Дата выхода:{' '}\r\n                      {new Date(\r\n                        details.data?.first_air_date\r\n                      ).toLocaleDateString()}\r\n                    </Typography>\r\n                  )}\r\n                  {details.data?.episode_run_time && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Длительность эпизода:\r\n                      {` ${Math.trunc(\r\n                        details.data?.episode_run_time.reduce(\r\n                          (acc, el) => acc + el,\r\n                          0\r\n                        ) / details.data?.episode_run_time.length\r\n                      )} мин`}\r\n                    </Typography>\r\n                  )}\r\n                  {details.data?.number_of_episodes && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Эпизодов: {' ' + details.data?.number_of_episodes}\r\n                    </Typography>\r\n                  )}\r\n                  {details.data?.number_of_seasons && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Сезонов: {' ' + details.data?.number_of_seasons}\r\n                    </Typography>\r\n                  )}\r\n\r\n                  {details.data?.genres && details.data?.genres.length > 0 && (\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      Жанры:\r\n                      {details.data?.genres.map((el, idx) => (\r\n                        <Link\r\n                          className={classes.genresLink}\r\n                          key={el.id}\r\n                          to={'genres/' + el.id}\r\n                        >\r\n                          {el.name + ' '}\r\n                        </Link>\r\n                      ))}\r\n                    </Typography>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <Skeleton\r\n                  style={{ height: '150px' }}\r\n                  animation=\"wave\"\r\n                  variant=\"rect\"\r\n                />\r\n              )}\r\n\r\n              <Typography variant=\"body1\" component=\"h6\"></Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid style={{ marginTop: '15px' }} item xs={12}>\r\n            {!details.isLoading ? (\r\n              <>\r\n                <Typography\r\n                  style={{ marginBottom: '10px' }}\r\n                  variant=\"h5\"\r\n                  component=\"h5\"\r\n                >\r\n                  ОПИСАНИЕ\r\n                </Typography>\r\n                {details.data?.overview && (\r\n                  <div>\r\n                    <Typography variant=\"body1\" component=\"h6\">\r\n                      {detailsOverview\r\n                        ?.slice(0, DESCRIPTION_BREAKPOINT)\r\n                        .join(' ')}\r\n                    </Typography>\r\n                    {detailsOverview?.length - DESCRIPTION_BREAKPOINT > 0 && (\r\n                      <Expand>\r\n                        <Typography variant=\"body1\" component=\"h6\">\r\n                          {detailsOverview\r\n                            ?.slice(DESCRIPTION_BREAKPOINT)\r\n                            .join(' ')}\r\n                        </Typography>\r\n                      </Expand>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <Skeleton\r\n                style={{ height: '50px' }}\r\n                animation=\"wave\"\r\n                variant=\"rect\"\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        {!details.isLoading ? (\r\n          <>\r\n            {videos?.results.length > 0 && (\r\n              <>\r\n                <Typography variant=\"button\" component=\"h6\">\r\n                  ВИДЕО\r\n                </Typography>\r\n                <Grid\r\n                  container\r\n                  className={classes.slider}\r\n                  style={{ flexWrap: 'nowrap', overflowY: 'hidden' }}\r\n                >\r\n                  {videos?.results?.map((el) => (\r\n                    <Grid\r\n                      style={{ flexShrink: 0 }}\r\n                      xs={12}\r\n                      sm={4}\r\n                      md={3}\r\n                      lg={3}\r\n                    >\r\n                      <div className={classes.videoWrapper}>\r\n                        <iframe\r\n                          frameBorder=\"0\"\r\n                          allowFullScreen\r\n                          key={el.key}\r\n                          src={`https://www.youtube.com/embed/${el.key}`}\r\n                          title={el.name}\r\n                        ></iframe>\r\n                      </div>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : null}\r\n        {details.data?.seasons ? (\r\n          <>\r\n            <Typography variant=\"button\" component=\"h6\">\r\n              Сезоны{' '}\r\n            </Typography>\r\n            <div className={classes.slider}>\r\n              <CardsList style={{ flexWrap: 'nowrap' }}>\r\n                {details.data?.seasons.map((el) => (\r\n                  <TVSeasonCard\r\n                    isLoading={details.isLoading}\r\n                    card={el}\r\n                    key={el.id}\r\n                  >\r\n                    {\r\n                      ' Сезон!'\r\n                      //create season card\r\n                    }\r\n                  </TVSeasonCard>\r\n                ))}\r\n              </CardsList>\r\n            </div>\r\n          </>\r\n        ) : null}\r\n\r\n        {!recommendations.isLoading ? (\r\n          <>\r\n            {recommendations.data.total_results > 0 && (\r\n              <>\r\n                <Typography variant=\"button\" component=\"h6\">\r\n                  Рекомендации{' '}\r\n                  <Link to={'recommendations/' + details.data?.id}>\r\n                    посмотреть все\r\n                  </Link>\r\n                </Typography>\r\n                <div className={classes.slider}>\r\n                  <CardsList style={{ flexWrap: 'nowrap' }}>\r\n                    {recommendations?.data?.results?.map((el) => (\r\n                      <TVCard\r\n                        isLoading={recommendations.isLoading}\r\n                        key={el.id}\r\n                        card={el}\r\n                      />\r\n                    ))}\r\n                  </CardsList>\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : null}\r\n\r\n        {!similar.isLoading ? (\r\n          <>\r\n            {similar.data.total_results > 0 && (\r\n              <>\r\n                <Typography variant=\"button\" component=\"h6\">\r\n                  Схожие сериалы{' '}\r\n                  <Link to={'similar/' + details.data?.id}>посмотреть все</Link>\r\n                </Typography>\r\n                <div className={classes.slider}>\r\n                  <CardsList style={{ flexWrap: 'nowrap' }}>\r\n                    {similar.data?.results?.map((el) => (\r\n                      <TVCard\r\n                        isLoading={similar.isLoading}\r\n                        key={el.id}\r\n                        card={el}\r\n                      />\r\n                    ))}\r\n                  </CardsList>\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : null}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { CardsList } from '@src/components/CardsList'\r\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { parseQueryString } from '@src/lib/parse_query_string'\r\nimport { TVCard } from '@src/components/CardsList/TVCard'\r\nconst useStyles = makeStyles({\r\n  pagination: {\r\n    '& ul': { justifyContent: 'center', margin: '10px 0' },\r\n  },\r\n})\r\nexport const ByGenre: React.FC = () => {\r\n  const classes = useStyles()\r\n  const tvs = tv.useDiscovered()\r\n  const history = useHistory()\r\n  const params = useLocation()\r\n  let pageNumber = parseQueryString(params.search).page || 1\r\n\r\n  const [page, setPage] = React.useState(parseInt(pageNumber))\r\n\r\n  const matchedParams = useRouteMatch().params as { genre: string }\r\n  const genre_id = matchedParams.genre\r\n  const { getDiscoveredTV } = tv.useActions()\r\n\r\n  const switchPage = (page: number) => {\r\n    setPage(page)\r\n    history.push(`?page=${page}`)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    getDiscoveredTV({ with_genres: genre_id, page })\r\n  }, [page, genre_id])\r\n\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    switchPage(value)\r\n  }\r\n  return (\r\n    <>\r\n      <CardsList>\r\n        {tvs.data?.results?.map((el) => (\r\n          <TVCard isLoading={tvs.isLoading} key={el.id} card={el} />\r\n        ))}\r\n      </CardsList>\r\n      <Pagination\r\n        className={classes.pagination}\r\n        count={tvs?.data?.total_pages}\r\n        page={page}\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import { Popular } from './popular'\r\nimport { AiringToday } from './airing-today'\r\nimport { ByID } from './by-id'\r\nimport { Recommendations } from './recommendations'\r\nimport { Similar } from './similar'\r\nimport { TopRated } from './top-rated'\r\nimport { OnTheAir } from './on-the-air'\r\nimport { ByGenre } from './by-genre'\r\n\r\nexport const tv = {\r\n  ByID,\r\n  Popular,\r\n  Recommendations,\r\n  ByGenre,\r\n  TopRated,\r\n  AiringToday,\r\n  Similar,\r\n  OnTheAir,\r\n}\r\n","import React from 'react'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { Page } from './_base/page'\r\n\r\nexport const Popular: React.FC = () => {\r\n  const { getPopularTV } = tv.useActions()\r\n  return <Page content={tv.usePopular()} getter={getPopularTV} />\r\n}\r\n","import React from 'react'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { Page } from './_base/page'\r\n\r\nexport const Recommendations: React.FC = () => {\r\n  const { getPopularTV } = tv.useActions()\r\n  return <Page content={tv.usePopular()} getter={getPopularTV} withURLParam/>\r\n}\r\n","import React from 'react'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { Page } from './_base/page'\r\n\r\nexport const TopRated: React.FC = () => {\r\n  const { getTopRatedTV } = tv.useActions()\r\n  return <Page content={tv.useTopRated()} getter={getTopRatedTV} />\r\n}\r\n","import React from 'react'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { Page } from './_base/page'\r\n\r\nexport const AiringToday: React.FC = () => {\r\n  const { getAiringTodayTV } = tv.useActions()\r\n  return <Page content={tv.useAiringToday()} getter={getAiringTodayTV} />\r\n}\r\n","import React from 'react'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { Page } from './_base/page'\r\n\r\nexport const Similar: React.FC = () => {\r\n  const { getSimilarTV } = tv.useActions()\r\n  return <Page content={tv.useSimilar()} getter={getSimilarTV} withURLParam />\r\n}\r\n","import React from 'react'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { Page } from './_base/page'\r\n\r\nexport const OnTheAir: React.FC = () => {\r\n  const { getOnTheAirTV } = tv.useActions()\r\n  return <Page content={tv.useOnTheAir()} getter={getOnTheAirTV} />\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { CardsList } from '@src/components/CardsList'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { search } from '@src/store/modules/search'\r\nimport { parseQueryString } from '@src/lib/parse_query_string'\r\nimport { MovieCard } from '@src/components/CardsList/MovieCard'\r\nimport { TVCard } from '@src/components/CardsList/TVCard'\r\nimport { CardItem } from '@src/components/CardsList/CardItem'\r\nconst useStyles = makeStyles({\r\n  pagination: {\r\n    '& ul': { justifyContent: 'center', margin: '10px 0' },\r\n  },\r\n})\r\nexport const Search: React.FC = () => {\r\n  const classes = useStyles()\r\n  const searchRes = search.useResult()\r\n  const history = useHistory()\r\n  const params = useLocation()\r\n  let pageNumber = parseQueryString(params.search).page || 1\r\n  let query = parseQueryString(params.search).query || ''\r\n  const [page, setPage] = React.useState(parseInt(pageNumber))\r\n  const { find } = search.useActions()\r\n\r\n  const switchPage = (page: number) => {\r\n    setPage(page)\r\n    history.push(`?page=${page}&query=${query}`)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    //@ts-ignore\r\n    find(query, page).catch((err: any) => {\r\n      if (err.status === 422) switchPage(1)\r\n    })\r\n  }, [query, page])\r\n\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    switchPage(value)\r\n  }\r\n  return (\r\n    <>\r\n      <div>\r\n        По запросу <b>{query}</b> найдено {searchRes?.total_results} совпадений\r\n      </div>\r\n      {searchRes?.total_results ? (\r\n        <>\r\n          <CardsList>\r\n            {searchRes.results?.map((el:any) => {\r\n              switch (el.media_type) {\r\n                case 'movie':\r\n                  return <MovieCard isLoading={false} key={el.id} card={el} />\r\n                case 'tv':\r\n                  return <TVCard isLoading={false} key={el.id} card={el} />\r\n                default:\r\n                  return <CardItem key={el.id}>N/A(Persona)</CardItem>\r\n              }\r\n            })}\r\n          </CardsList>\r\n          <Pagination\r\n            className={classes.pagination}\r\n            count={searchRes?.total_pages}\r\n            page={page}\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n          />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { CardsList } from '@src/components/CardsList'\r\n\r\nimport { movies } from '@src/store/modules/movies'\r\nimport { tv } from '@src/store/modules/tv'\r\nimport { MovieCard } from '@src/components/CardsList/MovieCard'\r\nimport { Link } from 'react-router-dom'\r\nimport { Typography } from '@material-ui/core'\r\nimport { TVCard } from '@src/components/CardsList/TVCard'\r\n\r\nconst useStyles = makeStyles({\r\n  pagination: {\r\n    '& ul': { justifyContent: 'center', margin: '10px 0' },\r\n  },\r\n  slider: {\r\n    overflowX: 'auto',\r\n    marginBottom: '15px',\r\n    minWidth: '100%',\r\n  },\r\n})\r\n\r\nexport const Home: React.FC = () => {\r\n  const classes = useStyles()\r\n  const popularMovies = movies.usePopular()\r\n  const popularTTV = tv.usePopular()\r\n\r\n  const { getPopularMovies } = movies.useActions()\r\n  const { getPopularTV } = tv.useActions()\r\n  React.useEffect(() => {\r\n    getPopularMovies(1)\r\n    getPopularTV(1)\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Typography\r\n        style={{ textAlign: 'center' }}\r\n        variant=\"button\"\r\n        component=\"h6\"\r\n      >\r\n        <Link to={'/movies'}>Популярные фильмы</Link>\r\n      </Typography>\r\n      <div className={classes.slider}>\r\n        <CardsList style={{ flexWrap: 'nowrap' }}>\r\n          {popularMovies.data?.results?.map((el) => (\r\n            <MovieCard\r\n              isLoading={popularMovies.isLoading}\r\n              key={el.id}\r\n              card={el}\r\n            />\r\n          ))}\r\n        </CardsList>\r\n      </div>\r\n      <Typography\r\n        style={{ textAlign: 'center' }}\r\n        variant=\"button\"\r\n        component=\"h6\"\r\n      >\r\n        <Link to={'/tv'}>Популярные сериалы</Link>\r\n      </Typography>\r\n      <div className={classes.slider}>\r\n        <CardsList style={{ flexWrap: 'nowrap' }}>\r\n          {popularTTV.data?.results?.map((el) => (\r\n            <TVCard isLoading={popularTTV.isLoading} key={el.id} card={el} />\r\n          ))}\r\n        </CardsList>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Switch, Route, useLocation } from 'react-router-dom'\r\n\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport { Header } from '@src/components/Header'\r\nimport { Auth, movies, tv, Search, Home } from '@src/pages'\r\n\r\nimport { account } from '@src/store/modules/account'\r\nimport { auth } from '@src/store/modules/auth'\r\nimport { localStorage } from './lib/local-storage'\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core'\r\n\r\nconst theme = createMuiTheme({})\r\nexport const App = () => {\r\n  const { getProfile } = account.useActions()\r\n  const { updateAuthStatus } = auth.useActions()\r\n  useEffect(() => {\r\n    const tryToGetProfile = async () => {\r\n      try {\r\n        const session_id: string = await localStorage.load('session').session_id\r\n\r\n        if (session_id) {\r\n          await getProfile()\r\n          await updateAuthStatus(true)\r\n        }\r\n      } catch {}\r\n    }\r\n    tryToGetProfile()\r\n  }, [])\r\n  const { pathname } = useLocation()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [pathname])\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div>\r\n        <Header />\r\n        <Container maxWidth=\"lg\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/login\" component={Auth} />\r\n            <Route exact path=\"/movies/\" component={movies.Popular} />\r\n            <Route\r\n              exact\r\n              path=\"/movies/now-playing\"\r\n              component={movies.NowPlaying}\r\n            />\r\n            <Route exact path=\"/movies/top-rated\" component={movies.TopRated} />\r\n            <Route exact path=\"/movies/upcoming\" component={movies.Upcoming} />\r\n            <Route\r\n              exact\r\n              path=\"/movies/genres/:genre\"\r\n              component={movies.ByGenre}\r\n            />\r\n            <Route exact path=\"/movies/:id\" component={movies.ByID} />\r\n            <Route\r\n              exact\r\n              path=\"/movies/recommendations/:id\"\r\n              component={movies.Recommendations}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/movies/similar/:id\"\r\n              component={movies.Similar}\r\n            />\r\n\r\n            <Route exact path=\"/tv/\" component={tv.Popular} />\r\n            <Route exact path=\"/tv/top-rated\" component={tv.TopRated} />\r\n            <Route exact path=\"/tv/on-the-air\" component={tv.OnTheAir} />\r\n            <Route exact path=\"/tv/airing-today\" component={tv.AiringToday} />\r\n            <Route exact path=\"/tv/genres/:genre\" component={tv.ByGenre} />\r\n            <Route\r\n              exact\r\n              path=\"/tv/recommendations/:id\"\r\n              component={tv.Recommendations}\r\n            />\r\n            <Route exact path=\"/tv/similar/:id\" component={tv.Similar} />\r\n            <Route exact path=\"/tv/:id\" component={tv.ByID} />\r\n\r\n            <Route exact path=\"/search\" component={Search} />\r\n\r\n            <Route render={() => <h4>404 not found</h4>} />\r\n          </Switch>\r\n        </Container>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n","import {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  compose,\r\n  createStore,\r\n  Action,\r\n} from 'redux'\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\r\nimport { authReducer } from './modules/auth'\r\nimport { accountReducer } from './modules/account'\r\nimport { moviesReducer } from './modules/movies'\r\nimport { tvReducer } from './modules/tv'\r\nimport { searchReducer } from './modules/search'\r\n\r\nlet rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  account: accountReducer,\r\n  movies: moviesReducer,\r\n  tv: tvReducer,\r\n  search: searchReducer,\r\n})\r\n\r\ntype RootReducerType = typeof rootReducer\r\n\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport type InferActionsTypes<T> = T extends {\r\n  [key: string]: (...args: any[]) => infer U\r\n}\r\n  ? U\r\n  : never\r\n\r\nexport type BaseThunkType<\r\n  A extends Action = Action,\r\n  R = Promise<any>\r\n> = ThunkAction<R, AppStateType, unknown, A>\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { App } from './App'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}